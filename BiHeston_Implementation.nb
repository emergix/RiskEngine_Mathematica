(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[   1044266,      20160]
NotebookOptionsPosition[   1035372,      19889]
NotebookOutlinePosition[   1035766,      19906]
CellTagsIndexPosition[   1035723,      19903]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"<<", " ", 
  "\"\</Users/oliviercroissant/Documents/Math/NumericalIntegration.m\>\""}]], \
"Input",
 InitializationCell->True,
 CellChangeTimes->{3.438084973974346*^9, 3.438085314179097*^9}],

Cell[BoxData[
 RowBox[{"<<", " ", 
  "\"\</Users/oliviercroissant/Documents/Math/My Documents\\\\BS.m\>\""}]], \
"Input",
 InitializationCell->True,
 CellChangeTimes->{{3.3998713858696938`*^9, 3.3998713864009542`*^9}, 
   3.438084980596246*^9, 3.438085319057014*^9}],

Cell[BoxData[
 RowBox[{"<<", " ", 
  "\"\</Users/oliviercroissant/Documents/Math/Heston_Definitif5.m\>\""}]], \
"Input",
 InitializationCell->True,
 CellChangeTimes->{{3.4011004554289308`*^9, 3.401100467616665*^9}, {
   3.4380849995477552`*^9, 3.438085014539674*^9}, 3.438085323413332*^9}],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<PlotLegends`\>\"", "]"}]], "Input",
 InitializationCell->True],

Cell[CellGroupData[{

Cell[TextData[{
 "Vanilla Spreadoption:  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"payoff", "=", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["S", "1"], "-", 
       SubscriptBox["S", "2"], "-", "K"}], ")"}], "+"]}], TraditionalForm]]]
}], "Subtitle",
 CellChangeTimes->{{3.404383192457144*^9, 3.404383212331544*^9}, {
  3.404383311609944*^9, 3.4043833390659437`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Timing", "[", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"S1", "=", "0.05"}], ",", 
       RowBox[{"S2", "=", "0.03"}], ",", 
       RowBox[{"K", "=", 
        RowBox[{"-", "0.02"}]}], ",", 
       RowBox[{"M1", "=", 
        RowBox[{"-", "0.01"}]}], ",", 
       RowBox[{"M2", "=", 
        RowBox[{"-", "0.02"}]}], ",", 
       RowBox[{"\[Theta]1", "=", "0.03"}], ",", 
       RowBox[{"\[Theta]2", "=", "0.041"}], ",", 
       RowBox[{"\[Rho]s", "=", "0.6"}], ",", 
       RowBox[{"\[Rho]sinf", "=", "0.8"}], ",", 
       RowBox[{"\[Rho]m1", "=", "0.3"}], ",", 
       RowBox[{"\[Rho]m2", "=", 
        RowBox[{"-", "0.3"}]}], ",", 
       RowBox[{"\[Rho]1", "=", "0.5"}], ",", 
       RowBox[{"\[Rho]2", "=", "0.8"}], ",", " ", 
       RowBox[{"\[CapitalSigma]1", "=", "0.04"}], ",", 
       RowBox[{"\[CapitalSigma]2", "=", "0.05"}], ",", 
       RowBox[{"\[Beta]", "=", "5"}], ",", 
       RowBox[{"\[Tau]", "=", "5"}], ",", 
       RowBox[{"\[Lambda]1", "=", "1.1"}], ",", 
       RowBox[{"\[Lambda]2", "=", "1.2"}], ",", 
       RowBox[{"\[Nu]1", "=", "0.01"}], ",", 
       RowBox[{"\[Nu]2", "=", "0.01"}], ",", "M", ",", "\[CapitalSigma]inf", 
       ",", "\[CapitalSigma]", ",", "Q", ",", "\[Beta]m", ",", "S", ",", 
       "\[Rho]", ",", 
       RowBox[{"printflag", "=", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "4", ",", "6"}], "}"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"M", "=", 
       RowBox[{"(", GridBox[{
          {"M1", 
           RowBox[{"\[Rho]m1", 
            SqrtBox[
             RowBox[{"M1", " ", "M2"}]]}]},
          {
           RowBox[{"\[Rho]m2", 
            SqrtBox[
             RowBox[{"M1", " ", "M2"}]]}], "M2"}
         }], ")"}]}], ";", 
      RowBox[{"\[CapitalSigma]inf", "=", 
       RowBox[{"(", GridBox[{
          {"\[Theta]1", 
           RowBox[{
            SqrtBox[
             RowBox[{"\[Theta]1", " ", "\[Theta]2"}]], " ", "\[Rho]sinf"}]},
          {
           RowBox[{
            SqrtBox[
             RowBox[{"\[Theta]1", " ", "\[Theta]2"}]], " ", "\[Rho]sinf"}], 
           "\[Theta]2"}
         }], ")"}]}], ";", 
      RowBox[{"\[CapitalSigma]", "=", 
       RowBox[{"(", GridBox[{
          {"\[CapitalSigma]1", 
           RowBox[{
            SqrtBox[
             RowBox[{"\[CapitalSigma]1", " ", "\[CapitalSigma]2"}]], " ", 
            "\[Rho]s"}]},
          {
           RowBox[{
            SqrtBox[
             RowBox[{"\[CapitalSigma]1", " ", "\[CapitalSigma]2"}]], " ", 
            "\[Rho]s"}], "\[CapitalSigma]2"}
         }], ")"}]}], ";", 
      RowBox[{"S", "=", 
       RowBox[{"{", 
        RowBox[{"S1", ",", "S2"}], "}"}]}], ";", 
      RowBox[{"\[Rho]", "=", 
       RowBox[{"{", 
        RowBox[{"\[Rho]1", ",", "\[Rho]2"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"BiHestonVanilla", "[", 
       RowBox[{
       "S", ",", "K", ",", "\[Tau]", ",", "\[CapitalSigma]", ",", "M", ",", 
        "\[CapitalSigma]inf", ",", "\[Beta]", ",", "\[Rho]", ",", 
        "printflag"}], "]"}]}]}], "]"}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.4042179165109076`*^9, 3.4042181225929894`*^9}, {
   3.4042182894711933`*^9, 3.4042183203780365`*^9}, {3.404218428926996*^9, 
   3.4042184428647633`*^9}, {3.4042185056940947`*^9, 3.404218515647411*^9}, 
   3.404218545647987*^9, 3.4042186425092216`*^9, {3.404218786340108*^9, 
   3.4042188084030313`*^9}, {3.4042188562320747`*^9, 
   3.4042188574508486`*^9}, {3.4042189321866584`*^9, 
   3.4042189325616655`*^9}, {3.404219027954122*^9, 3.404219150440849*^9}, 
   3.4042191965042334`*^9, 3.4042193169909215`*^9, {3.404219444149613*^9, 
   3.4042194496028423`*^9}, {3.404220002394706*^9, 3.404220071911666*^9}, {
   3.404223202737401*^9, 3.404223224315941*^9}, {3.4042997958015347`*^9, 
   3.4042998138195343`*^9}, {3.404301200209934*^9, 3.4043012204743347`*^9}, {
   3.4043014521187344`*^9, 3.4043014744267344`*^9}, {3.4043236557873435`*^9, 
   3.4043236664577436`*^9}, {3.4043237018697433`*^9, 
   3.4043237041785436`*^9}, {3.4043237952981434`*^9, 
   3.4043238099153433`*^9}, {3.4043239823881435`*^9, 3.404323989688944*^9}, {
   3.404324531757744*^9, 3.404324533068144*^9}, {3.404325260106144*^9, 
   3.4043252745985436`*^9}, {3.4043265421349435`*^9, 
   3.4043265436325436`*^9}, {3.4044059772525473`*^9, 3.404405978391348*^9}, 
   3.404406008951748*^9, 3.4044066483645477`*^9, {3.4044074212391477`*^9, 
   3.4044074304743476`*^9}, {3.4044075376775475`*^9, 3.4044075447287474`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" S=\"\>", "\[InvisibleSpace]", 
   InterpretationBox[GridBox[{
      {"0.05`"},
      {"0.03`"}
     },
     BaselinePosition->{Baseline, {1, 1}},
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}}],
    ColumnForm[{0.05, 0.03}],
    Editable->False], "\[InvisibleSpace]", "\<\" \[CapitalSigma]=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.04`", "0.026832815729997475`"},
       {"0.026832815729997475`", "0.05`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\"M=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", "0.01`"}], "0.004242640687119285`"},
       {
        RowBox[{"-", "0.004242640687119285`"}], 
        RowBox[{"-", "0.02`"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], 
   "\[InvisibleSpace]", "\<\" \[CapitalSigma]inf=\"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.03`", "0.02805708466680029`"},
       {"0.02805708466680029`", "0.041`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\" Q=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.0026904562514984886`", "0.005910101619402922`"},
       {"0.`", "0.0016223883650666592`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\" \[Rho]=\"\>", 
   "\[InvisibleSpace]", 
   InterpretationBox[GridBox[{
      {"0.5`"},
      {"0.8`"}
     },
     BaselinePosition->{Baseline, {1, 1}},
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}}],
    ColumnForm[{0.5, 0.8}],
    Editable->False], "\[InvisibleSpace]", "\<\" Imaginary Shifts=\"\>", 
   "\[InvisibleSpace]", 
   InterpretationBox[GridBox[{
      {"1.1`"},
      {"1.2`"}
     },
     BaselinePosition->{Baseline, {1, 1}},
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}}],
    ColumnForm[{1.1, 1.2}],
    Editable->False]}],
  SequenceForm[" S=", 
   ColumnForm[{0.05, 0.03}], " \[CapitalSigma]=", 
   MatrixForm[{{0.04, 0.026832815729997475`}, {0.026832815729997475`, 0.05}}],
    "M=", 
   MatrixForm[{{-0.01, 
    0.004242640687119285}, {-0.004242640687119285, -0.02}}], 
   " \[CapitalSigma]inf=", 
   MatrixForm[{{0.03, 0.02805708466680029}, {0.02805708466680029, 0.041}}], 
   " Q=", 
   MatrixForm[{{0.0026904562514984886`, 0.005910101619402922}, {0., 
    0.0016223883650666592`}}], " \[Rho]=", 
   ColumnForm[{0.5, 0.8}], " Imaginary Shifts=", 
   ColumnForm[{1.1, 1.2}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.4043238136905437`*^9, 3.4043239929181433`*^9, 
  3.4044059374101477`*^9, 3.404405981074548*^9, 3.404406032523348*^9, 
  3.4044066495813475`*^9, 3.4044067809801474`*^9, 3.4044072896789474`*^9, 
  3.4044074331731477`*^9, 3.404407546881548*^9, 3.4044077370143476`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"{NbLegCoef1,NbLegCoef1n,period1,period1n,\[Epsilon]1,imax}=\"\>\
", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "18", ",", "12", ",", "4.4582257006028225`", ",", "4.4582257006028225`", 
     ",", "0.00001`", ",", "10"}], "}"}], 
   "\[InvisibleSpace]", "\<\"{NbLegCoef2,period2,period2n,\[Epsilon]2}=\"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "18", ",", "6.687338550904234`", ",", "0.6687338550904234`", ",", 
     "0.00001`"}], "}"}]}],
  SequenceForm[
  "{NbLegCoef1,NbLegCoef1n,period1,period1n,\[Epsilon]1,imax}=", {
   18, 12, 4.4582257006028225`, 4.4582257006028225`, 0.00001, 10}, 
   "{NbLegCoef2,period2,period2n,\[Epsilon]2}=", {
   18, 6.687338550904234, 0.6687338550904234, 0.00001}],
  Editable->False]], "Print",
 CellChangeTimes->{3.4043238136905437`*^9, 3.4043239929181433`*^9, 
  3.4044059374101477`*^9, 3.404405981074548*^9, 3.404406032523348*^9, 
  3.4044066495813475`*^9, 3.4044067809801474`*^9, 3.4044072896789474`*^9, 
  3.4044074331731477`*^9, 3.404407546881548*^9, 3.4044077370143476`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
r6VCur9IDuBRSGx5x4KYtm0ebiT/D9BO8Bg=
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    PlotLabel->FormBox[
     "\"1st Inverse Fourier: K =-0.02 \[Omega]1=0\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwUV3c81d8ftvd2jazr2isjZWSct0Ioq2EWZSUySimrSEX2iPo2yJaMiKJw
hErZoxSK7JW9Ivzu76/7el6f9znP+3nez+fczyE5+Rx3paKgoBilpaD4/29d
DPt+E8skXZL8N892xw18zrlb5W6rL1JpSMw8S8aHtnTjz7WGIoOVN8cJDhu4
W/8+LcX+e2i6N+TetP0G3vdpRce8NQE5/Bg7PWKzgTc9iQFpFCnoSU3tzM7J
DdzAYVL+R/U/NGGYeUbHYgPHVFyZ1z7/FF33Xx5OM9nAckXmPIatz9BHz4Fy
cf0NHLc7WvZnPBMx/TrK06K9gZcsAy1SKHJQyYEls4f7N7BVNvuctkAeSgbd
ikj5DfxuLTt6VPU5unjXNvspaQOLGh+UjTF9gdrVJcJ6eTfw7cftH1XPF6Hb
tcpVaswbWEp0O1Sv9SWaL3otdH5xHdt8/mTO01eKSnIzzTRH1nHU5SSRqfEy
FEtTMLmvZx3PNUpXJ1BUoIKzCXVpr9axqPdSlAvra8T7M9GYK3MdH+ersdUQ
eIO+Sox1lMSv4zcXjq8PqlYhrKzc5um+jqe5hD++grforiRnd/SJdSxUPXE/
wvQdCq2kWfmus45D2UL2KZ2vQYVnJql32Ndx9o9uNdRah1J4/W/EFqxhHUVN
kecn3iMWE+5jyvFr+NutNFruvvfo6iDeofdbwwwKF3rGx+vRPYrbiXYaa/ji
jZ1LcRQfUI+R56OiqlVM2+1su3H3A6r+3X+H/+EqTpP+DE6sH1G0WaBI/dVV
3NGRzK4m8Amde3Wq9ZviKj4gLlv0U/UzSo6b+Lf34QpuuxZ3/8jbz2ixqHq9
wncFu7csB5XCF8TEEnk00mgFP7paa3LHtBmthTw5zbW2jHc+nZhUON+KeBXo
dKeNlrGzGubUbe1A1z1mS5TaF/GTO5cOCPB2opNS20JzDxdxT4+47ZpDJzp6
b6hi49wiNvSLfFa80IlEfoem/ltcwDIvLZWIhG6kU9q3Qs+0gOdkR49R2H9F
p/fSevFrzuLrwoyR9ZM/UFuxkKccHsGGt2Rvit/6jdpkzf5KDmRgsxey0dLZ
v1GIYpyMEnsSPtUj+0D+42+0MVdv9P3JQewiJVeiyjSMtJheyD88n4FufZEb
PJw0jGZf/xwS0H6LarkUkEvmCFqTlqPt9GhDalmKu9n1Y0g+bnqfecMg0m1R
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
zvj+t56DLwtvymoleW26e0CXLAf/DxaGAvg=
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    PlotLabel->FormBox[
     "\"1st Inverse Fourier: K =-0.02 \[Omega]1=0.2\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
MQZP+3ToaPFywo8R1cPl0bF4OXFusU2QE+59707d3BeHd42QjOclOUF55OBl
Cfl4LHMhlWGfKifs13+TU2R+n/L++Ka8UoMTjvwTYUhMvI913/S6HtXhhGj+
PVXsg/ex1TZrk7sBJ5g82p5ssU/AQTHhYdm2nGBz87mpovkDzHn48kfCKU7Q
yTBNKo58gF9unZd5fJYT3p0+ztBHfoAHvWz7485xgrpeZdGadCL2IZntY77I
CQNyNhW/HRIxw9Chazf9OEE1M/N2SkwiVjNSkA4K5YRP9m0jlYuJuIt699Vf
YZygSbOJNYWTsFuVcO+FW5xg7Wwk4WCQhJOk6UOdYjnhbPzfprBHSXiVfuSD
8TNOwDnlZ1yVk3E0uVeqJYsTMpdueKwfS8ZSga1BkMsJf2tKg+UDk7H1t1LS
fyWckHtWQyOuLBnPP8m98rqcE7ZlG95V9yTjiGPpnftqOEFkuXNf3PdkXNJ4
97J4Eycsf1EeUJNMwUYhYR2prZzwLHFfOKtmCh5XDpTk6eSEQffY6jjzFHxl
3iswpocTZpUrBt66pGDOzLPtDJ84oe5SmFbWlRT80u4EIeILJzwfJ53QuJeC
gcs0YGuUE2oesb+6/iQFD7bqtQVOcsLlN+VvQ/JT8MUwDYmfM5ywc8FHU74m
BdNryPt7LXLC4y696tTWFJy2RHr/bZkTPizUbNT2p2C1HCHxM2uUei+ayE/G
UnCXI4ffl7+coLLtN6A5l4Ld+Olaj/3jBCmqCWLyzxS83bkh+oGGC3oNNu6V
/knBibeWLxkycEEtqxlz4r8UvF9nuqWRhQsC5r5laO5KxU2rQyK6nFzwTIrH
OZs+FZ/M7/Gp5OWChEI4N8yYiled3zUrC3EB29vGsRGmVHxPpE64QIwLVEn5
6/kUTewrubiXyAWrkok/jSnrq+++bMrYwwWZcj6CdXSp2EovTUhUlgu2lRwb
aGhS8fzfB97JClywlu5vIbGdgiOK7zRyqnJBlfx9eb71FCzseV3wngYX9Nnu
7ZteSsElhIALdDpcwPeQHSfPpGDDwXMN1w9ygYSHxdW9oyn4a9wZgY3DXEC/
vZb5uI/C64jNeX8jLpD+9LFr7R2F147x2x9mXODPfjZXg5L3y/KD/J7WXLD7
ms+UWwGFl7e61+QJLjhWwKV1Iy0FD+yWqz91kgsCU6wvxcdS+CQJnrNypeRp
11oZ5UXhY8KOOzy5gEPN8mqQLYUPLS3vEW/Kejsc6aafgl39luq0LnPBGQY7
+YNCKViGRabXI4QLOLdLVdp2peDlTJfppOtcoCD48FoIZR6Dez+zL0dygfXl
7rYz5GQcq9R0OiuVC360GWSH2lDm+/0/v54nFH8c0sKxB5Kx4FnNqH/PuEDP
e4IwLJaMM+MLi2xzuWBicMlFYyIJly+lUrNVc8F1vyYhbackHBLZx3eAzAW8
E/hEKCRhkGCXcW/ggtY99lHs4km4zeyG1ds2LsiaaC9RGUjEYwUXngcMcQHL
4JZr18FEzHhe7/DoFhc8Oie5VL6RgDt3XbVjoeaGkjCnHucPCTjhccUFDTpu
CLVcuhz3PAGLtu9PTmDjhlr93Ve9jRKwkozAjIE4N5z8MRT0OOE+tp9diHqN
uGHkv67LyhzxOM8lqSMsghvsnCqqrz26g8m/P1gzRnLDUrpp5Pndd3BvFPNQ
3D1uuJlrZrzzOgpv5F+fS0vkhjRm36MKTZHYaM2Tvi6bGxQj85muzN3Cs7d0
4W8bN0xa2RXfkIvAe3JmSi/x8ECpstHZkrgAfECTqPVXgAfEdLIGp3P8sVn7
yYYwUR6wzN90WKn3w4FLPd1xu3lgz8XS1sq1S7hZvfZ7gToPfF9+FnPk03ns
0hq/d96BB07Gx4cKazjijDnNx05ZPFBb2xrSdeAYmnCoGn/ykgdMLm9oGq/Z
IKkuDemBfB7IsO1nkM+1Q9kl6m+M3/BA4p/XeQNbjuhVyH8fVFt4QDt2fH7w
pQsqY1PaxTDLA3HrDHWnLL3R2vUiw4OLPNCayZtYEnARqa0oxIcs84D6yqSv
qLEPqvokL7b8hwceqB/u+ep6CZHT96t/ZuKFp12XV7hv+qFWJWmvPFle0Ptu
rEJ39jJiysop/qbACxlCBbZ3+y4jI/69fyRUeSGEWJBOq38FdW7svpWozQup
7+/e7RMPQr2NpPSrprxgHdefVlcTjHjUnn+rsOSFDeqewU6xEHTsJXH/ynFe
2GSIn2+/GoIGoiWr3Bx54U92+FKceigaPi7RZ36RFxjSXEqUEq4isdY0obt+
vCCR5EZ8NXkVOR4QP9N0mRd67fMbOFSuoXFxse8aYbxwkGlRKqv9GiLef6Li
d5MX3ka4fe/jvY5cdokGF0Txgoh/3cqKw3U0PSPMQLzPCxZ+CZ3UU9fRXvtH
pieTKPvTZ94EcYchjw6hxOSHvJDgsbmwoBSGFooEJVkyecGxz2yAfCEMLQfx
a62W8IKByqP/lD6HobDppNWoCl4whsBrN3+FIU5rvkKxWl7IjmY0eMUajhT3
80oeaeYFpUgHJl+tcFSf+uDL0HteCGOOv8VvGY4s6HgSfbp4gS+GJjzBNRz5
jHIxPBrgBaNrDQn898IRlfH9evlhXlAH6UeST8JRfAVncONXXnjN95CGOT8c
EaTiVWy/8cJ9vaNuPdXhqCie4/viHC88pL15Pqg1HMF2bHb4D15wdY14v+tj
OOr2ZD/D/4uSZ66cru/XcHTmU4xQ3jovvHddTmmZD0fLemx9aIvCTy+8iGY1
HIW9jo7up+KDJ06FF6S3whGnKKuBJx0fONyWfqu5K4JyX763s83EB5afTV9q
MEUgxTXmqgR2PpC7viq7lz0C1Z+967uXh6IHVM8wcEcgiy6m/bUCfGB3W8Vl
iDcCfT1w55uFKB981Vk4+4I/AvnkMKZ/I/CBvvHvGHeBCETFG2UbvJsPdP+e
2CtF0fFhDNwcMnzQVXL48ghfBCJ8v93+XJ4PinctdyfxRKAiO/pbGip8oHne
+L45ZwSCllu6nep84MX0WZyNNQJ1K9P9OavNB4FiF+e66SPQmfSbxb+BD7Kv
U597ShWBlllove4d5gPJcU9iwF+K/ys3pAhGfFDFpPjU/ifF/zea0TIzPiD9
trxgMRuOnllGpBha8wHXDIu83SiFN5nacvQEH9Q4P4u43EfhLRPO7HeSDz6p
EvgL31F4p1A1MZzlA3NL5cc7FF4+PjtqSuf4IOHTEc9/aRTeI9eWm7354NaN
OK3iOApvw3+59n58EP4rnOvudQpf4rbozVA+UPcbJ1WdpPCNC/0kGM4HagsR
YnxGFL6bm3EFt/iA0bQ1MVONwrN/g2Yglg+WdXfenGKj+DkYXOv1gA92gYjR
/XXKvBb+DaBK5YPvqm8VaMbDkGLkn9l9GXwgxdn1N6c4DPlo/u4KLeUDgWau
BlujMESVHRDFVUnJy2PiT7t8GIrnXjuYXcsHS+/jdxIp35+ihV9lH5r5YLiy
asuz6DpafvrzEXGQD54dv9PEVHkNsacZbmQM88FIzVFuhSvX0P60DDvJcT7o
FesY1la/hjzSLAUJ85S8t0u5ZEquorG04iSxLT7wzWC+s/o4FHWlX4oXJPCD
GPtcdqp+MMrL+HmL3YMfRLcekMx5A1BrhuG3mPP84CuRcUy5zh9NZ2Tos13i
Bw+jgzR1rv6ImGm5izWYH47ZHLs+9sYPPcosDmOK5gfax/uX16x8UdTzSyG0
RfxglKG15cp8Ebm9+Omzsc4PJ2x5lI8OO6PiW7Fx+7f4QeFVzNGDGs5oy1W2
0JFKAI70mbyrSnRCD/a4LjQwCoBRe1GZvvlZVJ8z6HpPSAAGhkJ1d5JPIeFX
2F5USwCsTj5Tt+2wRq53TwaZIQEYNQucdnhkhYrO/U0JOyQAnbMtJOlzluiI
rMrHKWMBEDtD/Bctbob887PNC04KwIOAwcZ74/qoqzBGX/eaAAz++s+8PVUI
CcXJOPtECIDnlvxYvig1crn4LjzztgC0r6VKNeRR4U0FakwfJwA62dnMbf1S
WLrYX/NDugDoW53k2fPkAI4odZA/85Zy/lP3Ve8bJrjzwR+ThGYBYP52MybU
0gwL+id5Nb0XANdfQjK/WS3wa9UPL6V7BeCJ2wzVtw5LPPxGj/RzQgCOV8oN
ackcx2qV+wQjaAXhKZHrgPkJB9yd0JLLziQIby/xtrwTP4nPXXDWeswmCC92
x43mT5zEacSnjmX8gvC36Udz8WlHTB/D+WJaWhCMmWpTVFLO4GfuBWp+coKg
a6STEr54Bh/QM2rdURKER0ejtrfRWey9fmNBUEsQnCzcIGz8LP50dl3J2FQQ
vD/2FGaxO2Mf7cTGAUvK+dxNe04fd8bMAkrHXWwE4ce3Rs8jj5yxbse5K1dP
CwK1lAHnc3EXPJjNwMzsIgiyAprJAo4u2Dc863GyhyDoRcTI1j52wdlqo+TX
lwShmW1nNpXLlXKfD7HQDhSEUkunXX2GrvjLgsBEa7AgZPmJcx0Mc8XsGZZ0
EzcEgTEV/tXNuOJAlmZj3mRBYKt7quic4YY5p8+OPHskCM+ZDh1xaXfDr+r/
eculC4KY5HD+i19ueDRAI8HgpSAc0hI5+lPXHV+x+EjqyxeEc3lc2Ttn3TG3
rO+b08WC8Kt1LdPmhjs2+Jo3eKVaEOQnB0pn6t3x1+qj5+iwIMzu9UrdM+KO
g5O+bd5vFIQ5a6/ainV3zOsTESPeKgiHY9mqn3J64EIjCYm8DkEoiJzQHdrr
gY/uri1S7xEEa+3rLH46Hnhix1av6aMguB3Z/cvd0gOHflnrs/giCIoT54Zq
nT0w/5sE15FRQUi/PlHj7++Bi+IU1j0nBeGOcMPThBse2OhcR9TvGUHg0777
WOi+B57S9xS+sSgIuSX5X1mfeuBrEvT5HD8F4QOHSu7FHA8suJGp82RNENq/
uxw8XOSBS/rRB+kNQbi1cYHufoUHNnk9fObNP0HoGN511qbOA0/fCVo5uEsI
Cn6wfEh964HDXPhvdjEIwdRH+OzQ5IGFUSmfA6sQHKUdFHje7IHLhCxyZjiF
4KXEXiVfijZbXdTw5xOCcgfDzx2NHni2604blbAQ4I6mnvJ6DxyRu+dkjLgQ
HH6tMKdS64FFbzZ+FyIJgWb1x40j5R643PHM9ey9QvDZ79SP34UUP0J63d9k
hcBq6RpMZnvgw/0kyd2KQrD+pnQtjeKXNY7O10VVCLp8pU7IPfDA/YYzDc81
hCDAwbr8fqQHfkz7nmdSWwjWpIfPfwj2wE74lQvxoBAsKqoOz533wD9Vvekz
DIXAqGU2vsHUA1cumZ/4aioEGlnK5Ehtiv9XSi8lrIQgOCTHT13GA7MT1gzT
7IXgXuzJ+y40HvjTl0+PRhyF4PGAF//cojt+mlS5IOosBMlvW066fXLH+1lC
Yx57CcGPfc+y7bLd8WrzqdEvF4WAN/bPr0/R7rgmDCkI+wtBYnF/koOvOzb6
TdOTGioE45Xv0u8ccMfu43d4k2OE4EbfpMo4dsPyT7xcP94XAieJM+eo093w
bxvTct5kIbj/I3rR4KobvtnBafsgTQjSS6nYLdXdcGZFyuP410LAWb010pHh
is/5Bi1+KBWC2KD0gIhgV6wk56DDUSkEVZwfaUKtXHF9pvhYTL0QfDgy6m1E
5YpHYl4Q7/UIwUqbQWO9tQsWdCnNvfVLCLKtjxT7jzjhOM4PFcHqwpT3lROL
wXKn8ZTjncIsLWEw/XlgeL7eER8oOPSiCwlDuRHs+mLtiKcMKxOIR4XhvW3q
tMWVU1jzRsaFNlthYHvu4OdQ64An1/xIwsHCoMK89CZRzRarDwnGVdUKg4t4
zssCcUscva/v1mS9MGRyWZZqF1rgicsxoWzNwvBkhm6FRdcCR/PSnDvbKQy+
HAosO7VmeNx0QZ9pVBg6/YyaYgyM8b36ug3bHWE4uoz4qML18dgLJ7c/B0XA
bJWNXK6lgG/8EO0ONRCB6n9a+ibbsniv+oAmtbEIfP4dKS3SIo0vthqzMR8T
gSyj7rrRC0S8M69aJuImAly00eOpLoxYQpGBBt0VgZ1A+fHrzJKo8cpbr8ZY
EUjj6hd50UpC7m9DPh55IALisbeNaa7tQa+tll9aPBGBXTL0e0W6ZBEK+Gzu
VCgCZUOloutUKuh0dd7TW70iwPCM+/SX49po1y43BuYBEXAZaZMjeOmgHGPC
pdghEVD3PbmRGqKLloYT9VOmREBu6W0j8xFA13euLrz8LQIlLj1BAdp6iHRU
47jcpgiw+r92rynVQ+/iV8jFOyJwot1O6L70IcRBdE+oZhQFd8XNjTlmfZSu
b6HZISwKfreSOkxLDqNDMczPLSREIeBu9AdWfgM087GJ9SNJFGpvCf11uGyA
FNw1v47sF4Wx5NctBcpHUN/rX4ZOSqJwvrPdsCT6CLr8p6B0+j9RCFttLjKa
OoLwHWLkkq4osDY88NWOPoqce4eX/Q6JQqjfx9bU4aOIQSTF/s8RUTCrn/sT
K2OIzPNZ5KktRSFNudbaAhuisa7Vfm5nUbAz7hJz6jBCReu/tg3dRYH9eqRY
PZ0xiiD82hPuJQqnHyvN8usYIynfn1eW/ESB+UgkR+ULY/T70XLGniuikOB7
QZthwBi9a1xqOxUqCifZGftt6U3QOb4foh03RSG3XriH7bQJ0tb9fnjXHVGI
vJ5aHBhlgtjcF70PxIgCd5DkyuJrE1RUOV//MkkULtcrubP9NUER43NzYw9F
QfiSXnmdsCmyZp7jFkgTBc3o6oeRB0zRb4cZl1vZonCMRkQywN8Utd6cjql9
JQpn2nL80mNN0cOCb+W/CkXBZnh/xXK2KTr3aWpMppTCp8zV+3ydKdLemWR0
qhCFfOXm/fy9pohNelLpYQ3lvINCyT+nTNGoxYR9N6b4uSPvSPPbFBUFjd9g
aBIFWVb/oyZ0Zig882u+bqso7G1L29vHbYas2sc+BnSIwri76cgjyv1JanX0
X363KEiM59nlSJuhNdHRvVP9otBuKvB4S9EMtRwesRD5LAqkgrcFaepmKNV7
OMhqRBS+fT2ed1/bDHmmDGXeGafkV/m4+jMyQwfqv7TXfxOFOnFRjpCDZoh1
7vPq+pwo1Ac1zwZR9CjXZzGFH6IQoRD/4Atl/esDgwZuK6Kw5URyz6CcF+Y8
cPHpb1Eonwxq6aXUs4r+lNq/QenfIVLCT8kMkd58fMuyIwq3q0bmb+8zQ6sj
/fN6u8RgYtYqj5tA6Ze+nyeYQQyYm7O/C/OZoRSFPu1iFjH4dn7f0SxGM+Rh
2+s6yyEGP3vP2pdumKID4T2xErxiwF1R1mGyYIpYXnVX2AiKwdQyi0XAF1M0
3Pvha4yoGHiIXnuq1GqKCje7mJoJYsCW8zvgdpkpui7VpbwlJQbRBqMZV9JN
ETGw4+Y5OTHQ6qTTPHrJFK2mtRdkKInBmYKQEwq2pqj5Xdunwf/EYOExQeGd
jinyEHovfURXDFaUkktE6UyRpl6r5TU9McAOXDA1bYKYvd4FvzEQg4g7HoY+
70xQQW1zB8lcDD49Km2Zu2mCrn1rWrO3FoPIEwYwftYEWbA3iSecEIMP0uZQ
rGOCVk43+FCdofRXkki79NMYaezCvCM+YtClUXXzoqkxst1DLvIOEINq0tEL
u8SN0RXDOhOqYDFIeqkTcP67EaqMq7lJuiEGJp3RYwNRRkhTtHLVM0kMyOxq
rG0lhujAf8X9v6vEYMce2bwbPILsbYt8oshiYMm2e7v84REUHPKaVbhRDBS9
vrBP2h1BNW8L9HU6xECikP4906AB0jZ7VXZjVAwq1+nSDnYcRjruzxM5d4nD
heYJq8aHh5Dj3UzFTAZxOBVD7+5seQhdK8joUGEVB66aoW8ZjIcQ+Vc67Qk+
cfgmze3GFaiHdMOe+D/dKw6/S6gG7U0PIniYdEzGRBzsrp3unpnSQXrtkbz6
SeLQwD008CVAFS2Hn7apfygObOoMZ4WnVFCahnqqdpo4cJY3ePdbqaCNF9Mi
/+WIg22DyOdPSsqoJOwwaU+VOFQkNW62fVdARLVdyowj4hB0WDz6vsFe1L34
xe/muDjIjL07wa+5B117XvKGalocvjLpMp2T242+cDpp/v0hDvK8j3/liZBQ
wkI9zFNJgJ7k0NOHEuKIJuOaeYeUBDB6BE+QrrKhohM294/ukwCOo/JJp7qY
kCO7fF+TnAS8Lsul1tlHj6pDRmzq1CSg4qYCoe3Ptq6vjbZj4VEJaJFBPPXl
b3UJbLzPZEwlwNSlT+KpYC+5q3FhPNtSAjx1A7TtT06TZZQeu6bbS4AmO1XW
Q90/5AmWjfPx5yUg8e7taJ1CRhzf0FPIekkCDLpUdR+Us2DdoNzlqAAJGDsZ
G9lTyo4fTdv6h1+TgPneu0uuBtzY6m1FiG+8BEh3iKVlDgnghsCAu8fKJMBV
bzTS+S8Bp7El3LtRKQEBnNqdMzckcVBWYXRJrQTE/LnBMsVCxIq9M7GczRKw
8cSG7xAvCafJ2T/o+CgB/Y/clx7S78bBTYGJm58lQCrfIHwodDc+7vAgSWZU
AuwVZ5mTl3dj1jsdKVHTErCP7s6+oO49OGhK94n+ugT4pNNt8fpK42MhDk/9
Nin5DV+vO9AvjRW5r6Rl7kiA0qF/pEmVffhXuq0FFS0B6PGmSOPCPnxmYbpb
gJ4A/6bMUv8dksFdagGWCowEuLhwPrbpoQx+1XnfypGVAMkXzOj/6shiQSFC
XwA7Aewi0k+fj5bFt10KrWM4CZDC+/Or36AsPrvZdqyWlwBbb54hI8/9WHAf
7QlhMQL4lnrec/OWw7f9EwaUJAjQqrXnakeuHF7FBFtDSQJkJgSwjk3I4Q82
OnZXdhPgvxiSqKCZPNbObP8ct5cAXrPnJw+HyeNX3+3sc/YRgFpe+aN8kTy+
fTPQ4ZMcAZ5l3iEfZFLAqx9oh78rUPoX93ztp6yAz4o8OEmnTAAtH99aHzsF
3OUmOSKqSgDJUFt+nWsKWLvk9SlVNQLQ/WijHnmmgF9t64waaxDAR5Rq4Nhb
BSxo2OHofIAAVeu61LljCvjX2OzpBF0C3H+hp7DFrIjPyF7+mgsEMKnLOvuP
XxF3BdKdfatHgL8rvUvrkopYu+HB+KA+AXhncrQWZBXxKzai07IBAcRt9rz+
oqqIBe2KJhgMCdDxSbe2VVsR38rSdZYwpuRDThquOKSIV5Y6JtVMCcCvbnj/
lSGlnpaDi5k5AW77VTg9N6PUuz035WpJgCSZw1+zrCj1ei+7XrUmgKmK1LPi
45R6YvTTiccJ4OckjDpOKGIBz0S3/BOUftOPnlm3VcQ3y4gzjXYEiFZZyf/P
jlJvp8h9yIEAi6f0++9Qnp8xRrMrpwhwQlz83m8bSr3kTg/mMwQwsh68d+2Y
InYeGyKaOxFAeSB9tMdCEf/ZOz/8wIUAE1GDm+ImijjG50/yoBsBEvRVfD0N
FDGxit5SzJMAboVvPpUhRVxBzcfi5EWAky89mmg1FLGJEak5+wIBPhxnGD6p
oIjHE5SuL1yk8M8ubKzfrYgDh5Cmoi8BsgNj9qiKKGIWKbNf/v4EOAVJZdUc
ivjZ+ZMFVYEEGHeTJdruUsRt21ckD4UQIGSSg7bzgwI+bRA5FHmVAC9HD47X
FVPmJTYpqeM6Acx+vLywcV8BSxBKmGxuEqC7OqjN31QBl3nUNz66TYA3VZ0N
b6UVsFFx19WxKALM7KGtukKjgP31Fn56xBDga0q48KFiedzqIvUlJJkADblZ
TyS25fCpAuXE+tT/1+OwSuiQwytrYEb3mACpPI778x/JYdHIUw2x6QSQk5qZ
/6Ush31yk19lvKTkl2Z6PvfYfky3kuUy/YoANgf198oK78ePDpSKyxZQ5rNK
nvr+qCxuav+QUFZMAFuFMcO9LrJY6AdjyLtqAqRxH71m4SyDG5RDjL93UHh6
UrNzaUhjntrTixo/CWBuKz2mfoGEyf6c9Cd+EeA3T+yLVCIJn5N7KxGwRoC3
Qlr0zQNE3JBGtC7+S8n32YWcxINE7Bv+rWofjSRsXBqTecgjibsNvCKFeSQh
1Kxhf/k5MRzdE0jcUpWEIpbgJ3KivFjj7l5tYXVJUFfMb7S6x4On9AaPa2hK
gsm9jteim9xYq0zzjr+OJIi4ZK1VDnPh+eStpcXDkvCYUfvbbUsOfPRkRN2I
jSRoKC+YXO2lx3QzMbb4iiQU0BlHR/t/J1+Zk2nuDabsn1sbqVifI88vvFOa
DpUEJp77Ps43p8ndy9QsbOGS4G2nMUoIGCM/2gios78jCUmxTll6k2VkRXZH
4u+HkrA2dt7Guuab7nPOzVimJ5KQuTuw5EPKrC4/T+qmaJok3FGsf9jruaC7
KdDbfyhTEpT9ooSlLi/rtkgaRN5/JQl5fqrzHLVruif/k1/cXyMJWijYL/Xw
ju4H9XZbqJMEcVM20+MKVEjvgEezNZYEnfj/pBWrqNBelJkW3CgJ9wV7fg43
UaOVo/yWre2SYLqkfGpv7S7kYlxaN9QpCb4hnUQrFVo0YGohs/SB4ueFI9Wn
HFpUa3V3F3+/JKg5XTm7FEWHIk/+e+M8LAmcgk8/PpFlQBuOj4mXRyWh3x8F
NcYwoPNnNeLufpWE+sDAM9bfGZCVm69H8ZQkhAzlX67KYkRNHhwfm6YlYYCH
pJK0xYjUvfIPDs5KQnk6+9FvlkxI1GdaeGdREq6MK335scqE4nxvRHIvSQLH
gZiOQj1mRBNAWN39UxIyspKpl2OY0UyQfafJmiS8WyIb04qxoJIbXdcfbVP8
9A9WD4uxIpMbC7uHdiQhLJ2WYfokK5qOYOwQoSECDKdNkx6yIuEIPcGn9ETY
ekJzxpqJDZWFnyaPMBJByJDHwEKHDZmFh7qIsxDh4s1om1RvNnQjrLwonYMI
3VMiXZLv2ZB4WJ/NVy4iODy1d724woYqry9vEXiJsMbSeIsgxI6srrM9P8tP
BI/0U1FaOuxo8ZqMYaYgEYq8W0dbHNnR7WtHliaEifCr4hL3+6vsiHDNJYkk
RoQclb7Go4/YUfXVcC0XCSLEHyzMNSljR8eupo1nSRLBgsowfqidHf0IrYn8
RiLCfyfybbe+sqOo0EG5PXuIELs5sf7mFzsihq71uUkT4VuEZiAHLQeqDeEO
zpEhwuqt6z84uDmQTYgCYXY/Ee5OGsaQxTjQcrBJi7QCEV5IqsUT93Kgu8Ge
5z2ViFDGr3D4kDwHkgq+zf1KhQjodQmTtAoHIgc9r5z/jwjzPEJGg/9xINug
ekdZDSIoMI2EOahxoJUrI7TnDxDBqfzbf1WqHCj6ysarfG0inCX3bP9R5EB7
rghYftel9PvuUBBRlgPVX1ZdlztIhA9Bisd0SBzI/rLlU+9DROCYkztsKcSB
1gK9D70+TITd0U2sbmwcKD7w3tzSESI8K3nrf2OHHckEvoxTNCLC55R75sVL
7KgpoPm/SyZEOExz+fL6CDtyDJgYKjYjwrEb4l2n2tjRH/+d8BULItC41Ggt
UvJN8BeVVrEmwlvNsMJXT9lRi5+Nf9kJIiT9Ph444MmOzvj5Ca/ZEaGl4Cc+
bsqONnzj6/87SQRWvejfJAV2JO/bxlpxhgi3RrzUu7+zodZLMyXrTkToEWc0
JbexIadLtHYarkRYvirpKprNhpJ9dF9UeVLy2FVTe9SWDSn6OBhveBGhPPwk
y14FNtR28crPA95E8Gl5EpREy4b+eZfo1PoSoUH1UqNeHityv7DnEzmECL91
qHvIsyyI5sKh0J2rRIj7rTm/XcaCnpynNBNGhL9N5d9Yw1hQt9cj77c3KfvJ
uYzV3CxI4xw7Q1MMEaa1Nwn7ZZnR3OdO1tE4IgSry/4dXGFCjwxjuP/cJ4LE
+vyXkiomtCnNKr4/mQg/3525RX+YCZFnmP5LTCMC24Pco5+tGJG+K52zy2si
jEZ8Tva2oEeWZ7bItD1E8C0M32+xSY1oumuaxPuI8PHLp0ffS6lRCQpp0/hI
hC8/vZS9zlMjXomNj+c/E4FXwoBZeIQKDY6sL/aPE+EK3P2VELKj6+jwS/jF
ChFYOr93FVFt6p6zmQ88zEsCKWnVA10mK7p6jfvKo/lJEHFucU615qeusKLn
Wp8gCThpot4GyvzUbWOa9XMSI0FD7Y52LsuyrmzdN5/re0hQkThzW7h0QXeR
NH6uSoME9TJxpe8sJ3Wb4gmvqLRIMPDfUylpiwndJ9un547okICp+Ww7jeW4
runAqPungyRYb75/KbVsVLfw7rDLLyMS2PkGXzsqOKB78eeAo9wpEuwaeiFJ
6nqre9RRIM3/NAl87hoynpqv1SW024zUnCXBhs3Ddx/Ny3W7sz46GLmRwJzW
un2zIVNX0bbP1v0iCWqSb0bVVxWSGZu5UwsvkUDVEZ9VtnhD/qpkNbDmRwK3
rc8fD8jWkO+z9By/eYUENopGq1wmjeQVcpdVRjgJ9qvXMI7t7iK3ybInzN4g
gdH16r4Wx25yZqppj8JtEpwdUrnml9VDtvLtMCffJcHtiCQhI7F+cunuNpOh
ByRIYaAfWGkaJEcnMEUTk0mgdSGU6crYZ7LLztF2z1QSlHT4jwz++kLm/fzO
8M8TEmzt9v6qwTxC9o9uNuDLJkHgdmHDYuBXsrNnzrf/XpJAgFjALzP1lWxl
cOemzSuKv1u6pq1m42RFKtOGlEISvPrIxaMkOkFe8OvXEa4gQdeqg9dOyiT5
i0X58IEqEshW8unGLk+SW+VSQxxqSPBl+U5LosEUOXvGoeoJpvD3yWvmX5gi
OzlMqkq0Uni0SsQe558mW2o096E2Ejj99+0Qo8M0GfhyfM90kOCRmrOa5dNp
sviHc0UZ3SR4J/NPoEJ4hsyWb2Le0EuCW1euzg4fnyFvRcn/mOinPJ/XrHgV
O0P+rLciK/WZBAbd8vyWf2fIrRL9bfpDJOj9WnFQRXaWXL71xtN1hASmSZPP
uu1nyYnlQTnZ4yRI374vZFk6S77xwMHg3SQJ+uge+usOz5J9fXS+zXwjgSsf
361NmjmyhQw1ad88CVzsbglsGM6REcPkW8NFEhzx67pgcO5/DZZ5PJRdFMel
RamELK0iM/PMM1JRhHIdqZSlLIVKtiLZqVCJJGvKknWKkC17tmS5YULKTpRS
iCzJi0RRvM+f3885957ld8793BG8c+CVmc04NS/RKyTcA0bw1qrUxaAJSciL
cX0VkTyC18QHxGdOScLGsLdziXgEz1+3UW6YlgQ5qdtXUzqp/4yh1qexGUmI
mdSbTh4bwe/37ryx9o8kmIQ/PpTKNYrrBPg37ZyXpN6DPsgVHMXF45Mlx/9R
8zAo2lKzfRQnv203dFyUhM8/lAb/2z2KH6QXzYQsocFXnwzPPcqj+LZvdGTe
UhqM2CSlRKmPYmeLa3tbl9NAojnbfpvOKDZTOds+yUMD04NbptsNRvGJLcou
grw0YM+5mZaeHcXoj5jAnjU0iJD79/m9ySiW7uTK0+ejgVi/YIac2SjeUtB/
/Ao/DR4FvVrsNB3FvKGvfkQI0sDpljKDc24U/7FLDS4SogG/4WEbrjOjePhY
gFSnCA1eZlSIRZ4cxZ0MmzczG2hw64DEI3/tUVyzVOuS6GYaCFstg8+HRnFh
r/RKha00UB6JsnusNIqfVKxLM9pGAykJIqB15ygOZ08eviZBg20PUv9elxjF
3m7tA7GSNJj9vmtfEtUvp5NFPqV0Guyyup+mzT2KTWWit38kaJARV/vSZ2IE
H+e7VjVP0qDsfcJPjZ4RLPX6wOKBnTRQinD1Sc0fwb3jvJN6u2kQJ61lWvlw
BEcJf+i3lqXB8itNWuE+I5j7/NXaCHkabOI5Vux6YgSXBKqVZCjQ4KxUnHHk
nhHskCeQUalE5X87wvqOyAju/pd9bwzRwO9E5s/v74dxKM3Di1uVBhW7P95z
KhnGRzQ1nDeo0SB+aAOnJ2oYP4v5dvKQOg0EnkYJBukM44A927Y8OkGDUMH0
/1qfD2F05sfafF0arLoZIKEWMoSnb5Ut1unToDRm+kmD5RA2bTL8+tOQBprH
HQSAfwjLXwrN0DSjgWiu5HlNav8G4pcozjvR4KanhOJU0wBm1zSzBC5T+hin
+sWyB7DOWNwW4iqVf8VoRIHlAC5TVOLSv0YD7UUFo1NzX3F4h0tdhjcNmtV9
Jvq3fsXAO3DqTDjlP1DdHqfXh+Ou1rq8KKBBT1I8O534iK/HCsX/LaLB34Xg
TPvkbmxUYVGvUkKD7dx3jxyS6MaCyxe31ZbTYMDzsIfW5g/YL2JfY1sNNR9F
W781CHRhp4J0YqyLBql2NWEs/nas3TWjt6ubBhen41hy4W2YNX/I0+UTFX/5
SMl7oTY8cLCv43cvDaKe3BLk2dKKT7dtvL18lOr/ivgFD8smfHAy6JPYXxoY
3Yj/zcNXh7cJf+CxWKBBerJayQGpWvxXgdiTwkWHVtVTZy00anDxLU6g1HI6
9OWWXUy5z8FS/H/lFfjoMKLlMfxvVyUW2mUfpitOB8GpCo+DLwrwpF5ZecR2
Onzk93I4qpiPm1xXDXfRqPMfRGJFcB4OxCnIhKTD5d47E+ezMvGC9ufvNrJ0
kHDR5Xt6OwEP2Z04cucQHfov9ip9tPdC3VzQmnCEDvl+/UbCUQGoKWK3ccVR
OjxaeUg9LT0UFZcLuMxo0eFqoKhQn3Qs8lvTEWd9ig604h0iM7nJ6HrCK6av
IR347+1vT3+cihz2FhUknqZDSm9Wr4FfOjplHFXffY4Oow9V+bIUshAty+iX
lhUdFrNnL9fGPEMb4NitS9Z0SMgTECi0y0drOhRX+9nQQZWrq136QAGant8k
8dKBDnSzsJ1tjYWIo9mjJeNGhwofFwG18ueo+Etjl/Y1OnB6wt9P25WgjMvY
wuYGHY6UG83qbnyBwh8+dn/iReVfnHt0u2UpsvhuniwcQAf3A1zJBfXlyMBL
b5dsEB3uHTefNTCqQBrr1UqPB9NB7ukz2fb+CiS7n9biH0qH5SKCY07fMWI0
C51NDqdDzeGVtIRLL9Gm88u/VUZQeqY4FXG+vkRL7n6b/xNDh4Vw7gRuq0o0
LdblJ/KQyvfFHLExrhIN59cJ7ImjQxq3zpRCWyVq6U4n7BKp+xzaVZLlq9Ar
h9j8gCd0OPisdXTWsgqVcAcpp6TQobcgn2H5oAolsGz1Pz+lw3/EufNxw1Uo
Ap/9PJdJ1fepTMSZvxoF6FHvXQ4dDOLWv3SUr0ZO16W9dPLpcPd8ysKiRzW6
wCfGa19IBxvn2Sp2XDUySuKLDCymw3iyZatLeTVSefNfRnUpHZYqGlf+mK5G
sia9cl/K6aDWlLeXzcdBjKmWynlMB+ZM4dZoBgdt8qvS3FBF5cdxsBg5wEF8
m/I793Io/fScpiN1OYg7J8lct4YOkmtPNyde4KAZ1Qdj9nV02Cps9FvAlYNG
3/m4BdXTQb859+Z3Xw76fOkKd9pbOjAilFz3RHDQn7mB2olGOhz7Ezv0I5GD
hIJP3VVqofahMeVcTzYH7d5ae+JOGx2CzyY5rSzhIM0ceaGmDjrw/purulrJ
QVYqae9Fu+jQhR7MS9Vx0O0W0TjzD3QY27CpWaaBg+LMA8wzP9LBaqfpr3vN
HFQy9Zv+q4cOcbQMafVWDmr3uTSKeunguVlI+QLF40LdOQH9dDBS+frjO+XP
m6pxuW2ADs4+w3yD1H30fWX7tgzR4XnAFxeD1xwEr6X+Wo7QYUlBy39HqjnI
+PSjytzvdAh0umpSUcpBbqNrfP/8oPatLD628hkHhd+4eUxtgg6vuuNuGqZx
UPaa8bX3pqh5OZ07FPCQg17HmbR1TlP5aloXnb3PQQM7m6PEZ+kQ1EJ/1enF
QYsvVc7a/KEDa8hzgsuJ0kc3b1vhPB1+3SkR7jPhIPl+8YF//+jQw31gracW
B9kt47YP42ZAcYpewyoaB/lHush8XMaAL+wShRWU3kmMr79oPAywkFpd2T1T
jT4cfeVZspoB7nNCB4iaanTknl/oFyHKPtrry3uqGpmLzZ4kRRnwODHX+w41
fx65Fzde3sgArt8xCmtEq1FB69GkFWIMIP9oS5i+q0LiIqsLpQkG9T+3//la
vQrNxYd03VBkQMKqQIsDqyqR8G6uRzX7GXDDLXQrveIl2l3lZLYOMcAqrmu2
yOoluvhVdyTpIAMum7ftKCzGqIMQmq/XZICL9lZDS80KlJ0XI7bBhAHlmftH
TuiWotC7v+QMzRigf7utUm/yBXKx0tOOsqDsKUcNxkJfIPktazyELjIg907P
8MrmEoT9vT7wOzFg+wUu3kH156jFxCpi1W0GOId/z87YU4im1uzlnU9hwObO
NiVb3SzUMRQqoZTOgJYlTj9OR2Wi4uofCtcyGNAn5KWu9SkD3XBPuzibw4C1
3f0GlrZP0bKBTTU/nzOgsXazqUd0KhIuW3JrrJ4BfzhTgyt2JaLfkSbRUg2U
Hge1Ne8EJKBup7IcmyYGrDPOrdtc9xjFM672DLcxYOnLqif4QBxihA8rDX5k
QOq3LYfUTsQghUvNv3p+MKCz6Lyx7d77SKawyW7mPwYkcveqVewIRqzFxq98
Uwy4qh8m7CEVhLZENrSqzDDg0VmreqsDfmixsj47cYEBPCtXWxafvol+r66n
lXIR0D4QvLii4BqaMHj9sI2bgHF20Iqsja6of6w2cCkPATniYZ/lxBxQ7YZX
lpbrCFiVrTlytFgRvTzP+XRTgIAvjROVLn8VcUlOtX7UegIy49UVs+T0ccah
KtU6UQJKpKTlWVxW+J4T3kqKE/Ayq2DHv2pXfPJ1ybux3QTcGfySsb/PF2uv
L9FavocArapEpx3r/fERk+ecrXIEsIXtn3ijAKwwXfTsuCIBsjLMQWfvILxZ
vOBenioBBecM9rNe3MdCtvnL6tUI0NlsvPFvcQheU/zsRt9hAn7FnTOXNwzF
C5p5lwQ1CJA8d2WRcTgM97tlH76iR8Ch7VKDwfPh+GN1VnnwSQKqxmYLr5g/
wB1rs/akGBBweO7BEf1XD3DNkwyJzjME7NjpPcfrHYHx+NOYcWPqvoenwv/r
jsDFik/X8ZgSEL5p97s+mUic3pz2b995AqJ4x8N5uiJx4qa0KzqWBHi173ZS
p0dhtmXqd+uLBCx0Xi7LdorCwfPJH2JtCfjWE+fLsxiFfY8k6+TbE3Dt6LV9
Kw9GY8+wJ3VvHAlIKvYtO3Y7GjsSSUXzlwlYn8L9OGMuGoc6SlipuhKg4Niv
cXVfDM57niDi7071c9d4AsM5BrcsbqtruE7A+ed/K+vSYvCE+mM3wZsECCgd
HDD/GIP5Q8WYRl4EeIhvNl5YHYt3v497H+dNAG3qQ2iqYix2sn6kSPoRsEZg
DYLgWByat3nUIYAA/SPn/jv0LBbn/WazC4MI8HvO3XijPRa3wCbNuWAC/jN+
nDA+FYsnA2LnVUIIOCk7oJa2jo0FWzdk+YYR0Kx99XEuycayG2OM3z4g4KlL
21MBVTbWMxddKxBFxSPUrLpOsbHL06gKgxgCDPRqv/Jas3H4pLDDIzYBQs7L
DxS7sXG+YqRY/yMCBsw1w7/eYeM2b6Fm4jHF7z0F40LY+Gf9Ay/7REpvD/GJ
sWg2FhJcv7vgCQHm6VqWPXFsvPdMeO/vFAKI+cpn7olsfDJJIAylE3AuaHBj
fRIbXxkNVb2TQUDs8IfB95Q9QpZ/qj6LgNlBX7P8eDYuvB6StC6XgGeMnE7T
WDbuqObTP/WMgLvX1kR9D2PjX7z3lz4sICBQyG7MNICNRfTXFvYWEcCKrGfU
ebCx/MPgC4wSqr5+11ApRzY2+Lpa2K6UgIzRgy7RpmzsKnW35lk5tS/KKQLC
x9k46jKv6ywmoMjrR26OEhsXlwUylKsIeFTvGuhAZ+POpau6bnOoeez73GHC
x8azmgH+r2sIuG+gWh34KxZviOBR4HtNwPXbrtf/dMdihU9+w/pvKH8HA7ES
HIvd7XyPfWkiAEdK3NLwjsUxhcvmaK0EXEnR1JU1i8Ulf30ybNqpfeNX2ROm
HIv/BN9ePdNFAPkpqPPjzxh8PdurcU0fASML7sHPT8Rg9q+Fm3pfqfq8+bbb
SsbgUmXPnTGDBHA/2FTz9Vc0nm/0CJEcJeC1fqWQRnQ09hi/pqv0kwDpDxf3
TzREYc9dV95dXM6EhQlTntDVkbhoKHLQj4cJb1dqD3S3R+Cxx89/paxiQqf4
b92QhxH4DP+88MBaJqxduTX+BBmB5Se9DcxEmPC8abn6IHqAf+SHdBkRTJBt
s8ztNwzDxvKZH44dY0JU88oRhbYg/GC8YcRakwnfljZp650Mwm9Sx//4azMh
N2tLZGJnIFYQld1Uq8uEYBqOWfopAAv9Ljlz8AwTJJSWb3kx6offvqj9qGTL
BIM9u4q8xXywknJ/j9Q9Jux70eIrvcEdK6hMAIQwgX8yP/LtUTcsr7rw5GQY
E/Atcr36DVcse3iTzc1IJpCPyNjJwSuY1NabaYpjwoeGjvSaNme84Vw1n0sO
E/ReGBlqiFljEdMWZ788Jrg1HpaPrLTCQuafO9j5TIgbqtyrfNES81vOsTnF
TFgt77G3osoC89jLEsIvmaA77mtLMzqLZzySVEqamRBddfh4lKUqnvbMS2po
ZUJXj3+X4xYlPHULL+9rZ8KGtyGLyuEyePxO99tV76l6Dc8HeTn+qBgMFjQ6
20vF17CvWJeFUP998TLHfibEqjD/um1WQ72hO8XuDDCp90AogtN0BH2K0BjI
GmYC81i4ivCiNup4dNtpYYIJRS3a9/5xTqG2+NB2wZ9MsKqzCX1rYohaEuLl
iV9MCBOCyYoJI/Q2ufTviT9MUBUolZGbO4uqs6YCEpeQcLfRS0u9zQxV5nCN
FS0lYe5NvU2ThznCeXwn3iwnwW7aDNZLWqDSQpbwz1Uk3Mu34Z2wOI+elVsk
HhIkYbvLl7XP8yxRZ9mEsp8QCW/aDPTOH7ZCf0s9u+tESLjQIL1a550VOvKC
vV5zMwmKMzZ564cuItsSZl7wVhKcB+5FLlpbo9DnxVpN20g4fjPj06lv1qi7
qM1Xl0bCbIFunX37JbRYaLb9AYOE8sCbXEfUbBCtcBx3MEnY7ExwinJskGM+
729DaSrezBXuu+62KOJZTETsLhLs9auuruyyRaV5DJmPMiToX1Mz1paxQ8ty
D9qYyJMQ/a9S0PSDHSJzWlYkKJBgZtjOdZiwR8ezTZ70KVH9udTJpjnboytZ
YyqSyiTo5B/BvM/tUWzm9U8XVEhYzvP7wrI/9ghnrLyWqkqCV4/9E7F9Dmjg
aZTwsBoJqc0KaVbODmhnev5x26MkoH3pzKJuB6SfBt+zNEg4barm1LnKEbmn
NvmPa1H9tF3Cd1bOEcWnGNN2nyChumgkQuecI+Ikj1Y665IQrJqf9srbEQ0/
cT9XoE/C++1qs6+SHBHfkxVz06dIMHFWUTWtdER7kiKi5I1IGP/y4HhityMy
Sty+x/0MCdljvFMxk47oZkJe8wtjEorPXV6awe2Ekh4ju3kTEoT0KvdN8Dqh
1/ENK5XNSVgnP7sqVcAJ/Yg7k+J5nupPgoFTm4gTEowbVq20pPq576mFxyYn
pPDI9fMSaxJiRxI+ZGxxQuceLruhZkOC2zq5pgtbndBtdriorx2Vz8Wlis8o
e1qseGGtAwm7lhUKRFPnG2JydFY6k+DDZ3Z8q6gTmoo+8OPYZRLOes73awg6
IdHoN4F3r5Jw7llVJWONEzoQZcRodCOh5Vvyu+fLnJBF5LdqvuskZGl5i/L+
dkT+EVdMdTyoevnjw1gDjijrAfffME8S3tarfvzc6Ihaw0Nj2m+RIFcnk7m3
yBHNhInJCfuQcK1fL0uR7Yi2hGW1GviSwLMj02PewxGphio5xPiTYKF5Kcuf
0sMq5DVvdyAJK5Iny7/vd0TB9w3SNgeTwL9rcpvcBkfUGezSGx9KQonPWp3s
Nw5o/i7Xzd5wKl+l4aczCQ5I/O79jdsjSbhjvNThzFUHZBuYoZcSS0LHGz73
lA0OiMuv/1VmEgmnHMfz8jXs0YFfglW1ySRwqbCa50TskfsFtYq+VBJM08zs
pvvs0MTB5CLRTBI+XZUF2hU71LtomepTQMKAe+bjoCBb9PLaiP/ZV9Q8VYu1
NfpfQnPDG++41pIgKftkfZHaJSRvpHEr7DUJtSHC5wcWrFGOfKZ7XQMJ/9oV
I5UvW6P4n3aX9rwjwb/hQmTNyYvI035CY/U3EkTvtr7ZzW2JSj+JqzOGSRDf
7h9sW3wBzWjqqqmOkjDFl0qzs7mAHFj5+93GSQhvvMrubj2PTIYu7/g6Q8K+
BzV9zMcWSNl8dm0ZDwumv/jwCyqaob8nF1psSBbQvL/kakgYItOqnBUFUizQ
Peg5yetngKqlTQ/MS7Ng18J4e+v3UyhwRWXaXVkW7DlieiO69CQSKfH2zNrP
gstDDlv/s9RDMpuX7xjXZsG4jZBU7rQmivAvMpfXYUGw+sj109800O+fltGe
eizQ8D28dLr7GMINtdzrDFkgvSnot3ijOtLyDPiwy4wFMV5v+fU71ZBV32p/
ZxcWGIcJnmpYpojqtcvLX1xhUft/ws1Dex/aUWo3tcSNBY8cTbR6H8mhn+GN
58JvsEB7UoD+8YQsunUoZG/BHRbw7VKoVeRjooE8FZt5PxZw5LmLPq+mI/Wt
E4/VAlkgp+zVQBfdjvhmdFZ33GNBuKuczv7sDehhmmD/dBQLkgMCpWVDh5QX
1nNElWNZYCIudbG/tq/C4tZlbd+HLDix7OXIi+3/KpinO0qEE1jgWe1nYC0q
gIt5o0Lkn7Lg01Tb3YYXEnij25Eaz0zKX1etjBiQxB5fZ+Zqs1lgqqkabryE
gdXKDa0M81mwoyC3PEqIhVvsNyq7l7Egn2lhK9WyG0uWF+UHUnxqQ3MmV9du
7Mqrx3xI8YBI9/WOnt14S1rQekzxYK5ojdv33di6d35kaTkLSv101mSvkMGL
ep+jQiheP13t2nZABu9UeDKRWsECNY1lh1ely2BvPxWrEoozlwh75eXI4I6O
jx/rKdYYUtAwKJLB152F6sYormXyRsRVy+CaDN84WcyCeoWlvzf1yGDjrdYa
mOLXooOCrQKyONd2WWUzxYHrwy6ab5DF3KUJcn0US+4PPz4hJovTDT6IL3vJ
gqWKg+2rdsji6RCN2WMUSzN4sNQRWaz++ZvdWYodYyLT8rRkMXuHT78dxcar
ttD26stiqC9rDKGYK8eiU95MFj8QNVJLpLi7RXNNsZUs/mY5XZJPcVqz57s9
9rJYoTB05yuKU3fyy+ZdlsV3uaWT31F876rQdqnrsvh/A9TsTw==
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    PlotLabel->FormBox[
     "\"1st Inverse Fourier: K =-0.02 \[Omega]1=2\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{Automatic, Automatic}]}], "}"}]], "Print",
 CellChangeTimes->{3.4043238136905437`*^9, 3.4043239929181433`*^9, 
  3.4044059374101477`*^9, 3.404405981074548*^9, 3.404406032523348*^9, 
  3.4044066495813475`*^9, 3.4044067809801474`*^9, 3.4044072896789474`*^9, 
  3.4044074331731477`*^9, 3.404407546881548*^9, 3.4044077558903475`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQDQN5LY2ORQtr7DdM6EuO7jhj77s5OcVraRWUf8f+
19WGbbf+ldq3vFnV5ZL21F5mS4SF/6cCqPwb++X8DGx66zPs86Qs5SyvfrTf
8TTa2V0kDqr+q31F7xRpTUFb+1n7ZL77f/9h/yF3yfy/yYH7Ifr/2GdHT3I6
rJO8P9mQIWMzD4PDpZCGXRyPMvZDzGN08HmsMmtta8b+SuaiK/vmMjtwego8
zJdM3g8xn9WhxV75aPPcsP39Vx87nNJjd/ifvVpAeaHDfoh9HA6hCybI7g5k
sV+6PHTt1f1cDkucy03UerSg7udxaC6M3LZSXsJ+d+VxyYcBfA5dP1ZmuF6U
hbpHwIHV7f8WDnvD/S+Wyjh/+yDg4BGz57rLayOo+wQdNqy5c+ushfb+L32h
P6t3Cjk8+zbjmoiAGNS9wg7xxgVWexg/2/0r71vP2CTiUCF8JHW6ryA0fEQd
rrW/vB9jKWDPlXg8td1LzOFGZC7T7uT/dhD/iAPxva6Q/FP7RLwYZHiFJRyk
rz97mZ38bR/EfxIOqo0+pUrV3/cpGFtemnRb0uGh5plajqzX+yD+lXKQ25pz
NVz50D4AtxziDA==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotLabel->FormBox["\"2nd Inverse Fourier:\"", TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{3.4043238136905437`*^9, 3.4043239929181433`*^9, 
  3.4044059374101477`*^9, 3.404405981074548*^9, 3.404406032523348*^9, 
  3.4044066495813475`*^9, 3.4044067809801474`*^9, 3.4044072896789474`*^9, 
  3.4044074331731477`*^9, 3.404407546881548*^9, 3.4044077586203475`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"23.68099999999997`", ",", "0.04012033429995382`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.4043240133853436`*^9, 3.404405963976948*^9, 
  3.4044060025557475`*^9, 3.4044060537081475`*^9, 3.4044066551973476`*^9, 
  3.4044067907925477`*^9, 3.4044072995225477`*^9, 3.404407464731948*^9, 
  3.4044075701099477`*^9, 3.404407760289548*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Timing", "[", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"S1", "=", "0.05"}], ",", 
       RowBox[{"S2", "=", "0.05"}], ",", 
       RowBox[{"K", "=", "0.00001"}], ",", 
       RowBox[{"M1", "=", 
        RowBox[{"-", "0.01"}]}], ",", 
       RowBox[{"M2", "=", 
        RowBox[{"-", "0.02"}]}], ",", 
       RowBox[{"\[Theta]1", "=", "0.03"}], ",", 
       RowBox[{"\[Theta]2", "=", "0.041"}], ",", 
       RowBox[{"\[Rho]s", "=", "0.6"}], ",", 
       RowBox[{"\[Rho]sinf", "=", "0.8"}], ",", 
       RowBox[{"\[Rho]m1", "=", "0.3"}], ",", 
       RowBox[{"\[Rho]m2", "=", 
        RowBox[{"-", "0.3"}]}], ",", 
       RowBox[{"\[Rho]1", "=", "0.5"}], ",", 
       RowBox[{"\[Rho]2", "=", "0.8"}], ",", " ", 
       RowBox[{"\[CapitalSigma]1", "=", "0.04"}], ",", 
       RowBox[{"\[CapitalSigma]2", "=", "0.05"}], ",", 
       RowBox[{"\[Tau]", "=", "5"}], ",", 
       RowBox[{"\[Lambda]1", "=", "1.1"}], ",", 
       RowBox[{"\[Lambda]2", "=", "1.2"}], ",", "Q", "\[InvisibleSpace]", ",",
        "M", ",", "\[CapitalSigma]inf", ",", "\[CapitalSigma]", ",", 
       "\[Beta]m", ",", "S", ",", "\[Rho]", ",", 
       RowBox[{"printflag", "=", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "4", ",", "6"}], "}"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"M", "=", 
       RowBox[{"(", GridBox[{
          {"M1", 
           RowBox[{"\[Rho]m1", 
            SqrtBox[
             RowBox[{"M1", " ", "M2"}]]}]},
          {
           RowBox[{"\[Rho]m2", 
            SqrtBox[
             RowBox[{"M1", " ", "M2"}]]}], "M2"}
         }], ")"}]}], ";", 
      RowBox[{"\[CapitalSigma]inf", "=", 
       RowBox[{"(", GridBox[{
          {"\[Theta]1", 
           RowBox[{
            SqrtBox[
             RowBox[{"\[Theta]1", " ", "\[Theta]2"}]], " ", "\[Rho]sinf"}]},
          {
           RowBox[{
            SqrtBox[
             RowBox[{"\[Theta]1", " ", "\[Theta]2"}]], " ", "\[Rho]sinf"}], 
           "\[Theta]2"}
         }], ")"}]}], ";", 
      RowBox[{"\[CapitalSigma]", "=", 
       RowBox[{"(", GridBox[{
          {"\[CapitalSigma]1", 
           RowBox[{
            SqrtBox[
             RowBox[{"\[CapitalSigma]1", " ", "\[CapitalSigma]2"}]], " ", 
            "\[Rho]s"}]},
          {
           RowBox[{
            SqrtBox[
             RowBox[{"\[CapitalSigma]1", " ", "\[CapitalSigma]2"}]], " ", 
            "\[Rho]s"}], "\[CapitalSigma]2"}
         }], ")"}]}], ";", 
      RowBox[{"S", "=", 
       RowBox[{"{", 
        RowBox[{"S1", ",", "S2"}], "}"}]}], ";", 
      RowBox[{"\[Rho]", "=", 
       RowBox[{"{", 
        RowBox[{"\[Rho]1", ",", "\[Rho]2"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Q", "=", "\[InvisibleSpace]", 
       TagBox[
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {"0.0026904562514984886", "0.005910101619402922"},
           {"0.", "0.0016223883650666592"}
          },
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
        Function[BoxForm`e$, 
         MatrixForm[BoxForm`e$]]]}], ";", 
      RowBox[{"Q", "=", "\[InvisibleSpace]", 
       TagBox[
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {"0.002", "0.004"},
           {"0.", "0.001"}
          },
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
        Function[BoxForm`e$, 
         MatrixForm[BoxForm`e$]]]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"BiHestonVanilla2", "[", 
       RowBox[{
       "S", ",", "K", ",", "\[Tau]", ",", "\[CapitalSigma]", ",", "M", ",", 
        "\[CapitalSigma]inf", ",", "Q", ",", "\[Rho]", ",", "printflag"}], 
       "]"}]}]}], "\[IndentingNewLine]", "]"}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.4042179165109076`*^9, 3.4042181225929894`*^9}, {
   3.4042182894711933`*^9, 3.4042183203780365`*^9}, {3.404218428926996*^9, 
   3.4042184428647633`*^9}, {3.4042185056940947`*^9, 3.404218515647411*^9}, 
   3.404218545647987*^9, 3.4042186425092216`*^9, {3.404218786340108*^9, 
   3.4042188084030313`*^9}, {3.4042188562320747`*^9, 
   3.4042188574508486`*^9}, {3.4042189321866584`*^9, 
   3.4042189325616655`*^9}, {3.404219027954122*^9, 3.404219150440849*^9}, 
   3.4042191965042334`*^9, 3.4042193169909215`*^9, {3.404219444149613*^9, 
   3.4042194496028423`*^9}, {3.404220002394706*^9, 3.404220071911666*^9}, {
   3.404223202737401*^9, 3.404223224315941*^9}, {3.4042997958015347`*^9, 
   3.4042998138195343`*^9}, {3.404301200209934*^9, 3.4043012204743347`*^9}, {
   3.4043014521187344`*^9, 3.4043014744267344`*^9}, {3.4043236557873435`*^9, 
   3.4043236664577436`*^9}, {3.4043237018697433`*^9, 
   3.4043237041785436`*^9}, {3.4043237952981434`*^9, 
   3.4043238099153433`*^9}, {3.4043239823881435`*^9, 3.404323989688944*^9}, {
   3.4043241933625436`*^9, 3.404324219102544*^9}, {3.4043242516597433`*^9, 
   3.4043243486761436`*^9}, 3.404324548200144*^9, {3.4043248566901436`*^9, 
   3.4043248778437433`*^9}, {3.4043249842825437`*^9, 
   3.4043250001789436`*^9}, {3.404325055855344*^9, 3.4043250667909436`*^9}, {
   3.4043251312501435`*^9, 3.4043251343545437`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" S=\"\>", "\[InvisibleSpace]", 
   InterpretationBox[GridBox[{
      {"0.05`"},
      {"0.05`"}
     },
     BaselinePosition->{Baseline, {1, 1}},
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}}],
    ColumnForm[{0.05, 0.05}],
    Editable->False], "\[InvisibleSpace]", "\<\" \[CapitalSigma]=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.04`", "0.026832815729997475`"},
       {"0.026832815729997475`", "0.05`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\"M=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", "0.01`"}], "0.004242640687119285`"},
       {
        RowBox[{"-", "0.004242640687119285`"}], 
        RowBox[{"-", "0.02`"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], 
   "\[InvisibleSpace]", "\<\" \[CapitalSigma]inf=\"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.03`", "0.02805708466680029`"},
       {"0.02805708466680029`", "0.041`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\" Q=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.002`", "0.004`"},
       {"0.`", "0.001`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\" \[Rho]=\"\>", 
   "\[InvisibleSpace]", 
   InterpretationBox[GridBox[{
      {"0.5`"},
      {"0.8`"}
     },
     BaselinePosition->{Baseline, {1, 1}},
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}}],
    ColumnForm[{0.5, 0.8}],
    Editable->False], "\[InvisibleSpace]", "\<\" Imaginary Shifts=\"\>", 
   "\[InvisibleSpace]", 
   InterpretationBox[GridBox[{
      {"1.1`"},
      {"1.2`"}
     },
     BaselinePosition->{Baseline, {1, 1}},
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}}],
    ColumnForm[{1.1, 1.2}],
    Editable->False]}],
  SequenceForm[" S=", 
   ColumnForm[{0.05, 0.05}], " \[CapitalSigma]=", 
   MatrixForm[{{0.04, 0.026832815729997475`}, {0.026832815729997475`, 0.05}}],
    "M=", 
   MatrixForm[{{-0.01, 
    0.004242640687119285}, {-0.004242640687119285, -0.02}}], 
   " \[CapitalSigma]inf=", 
   MatrixForm[{{0.03, 0.02805708466680029}, {0.02805708466680029, 0.041}}], 
   " Q=", 
   MatrixForm[{{0.002, 0.004}, {0., 0.001}}], " \[Rho]=", 
   ColumnForm[{0.5, 0.8}], " Imaginary Shifts=", 
   ColumnForm[{1.1, 1.2}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.4043248853629436`*^9, 3.404325008634144*^9, 
  3.4043250714709435`*^9, 3.4043251373809433`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"{NbLegCoef1,NbLegCoef1n,period1,period1n,\[Epsilon]1,imax}=\"\>\
", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "12", ",", "8", ",", "4.4582257006028225`", ",", "4.4582257006028225`", 
     ",", "0.00001`", ",", "10"}], "}"}], 
   "\[InvisibleSpace]", "\<\"{NbLegCoef2,period2,period2n,\[Epsilon]2}=\"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "10", ",", "6.687338550904234`", ",", "0.6687338550904234`", ",", 
     "0.00001`"}], "}"}]}],
  SequenceForm[
  "{NbLegCoef1,NbLegCoef1n,period1,period1n,\[Epsilon]1,imax}=", {
   12, 8, 4.4582257006028225`, 4.4582257006028225`, 0.00001, 10}, 
   "{NbLegCoef2,period2,period2n,\[Epsilon]2}=", {
   10, 6.687338550904234, 0.6687338550904234, 0.00001}],
  Editable->False]], "Print",
 CellChangeTimes->{3.4043248853629436`*^9, 3.404325008634144*^9, 
  3.4043250714709435`*^9, 3.4043251373809433`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
HG1ixS5RyX7N5bXLknr+Ojex/gdqW5+k
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    PlotLabel->FormBox[
     "\"1st Inverse Fourier: K =0.00001 \[Omega]1=0\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
Tey2/ig5v9xllqp5iXnkLR5E+LO5g0a/u1x8qTqPmnyuOlWskOst93PL6Og8
omz2oQiY3UFWsWrPV03n0UtC3U+RMXL95xP3ZzjMo3FO3s6X/Tvo55m19lOe
8ygv6RMXVSu5Hx8tb23dI+PY2GfHa3aQoUA5e87jeVQqPxXhXbqDqP3Ec89l
zaMfYXeYY9/uINKvoONUJfNI/aSGeWTSDvKFkb/va+dRKJVWgUvMDpqnzSEy
TM6j5QqmrnXHHfTWkbmiaGMetVPqOKSfI/ev4cYFO+YFpBpoFKJ9mNy/B6pP
P8svIIHbh/21eXdQa38C5U/dBfRVnPbhs81tVCv779pfkwWU9FnUGQ9uo48V
Xw7xeC6gg2FNPJezttE7FrEsufAFdCZGwnoiYhulmwdyHH62gEI+zZjrOG2j
uHm9PzfKF9CFLU4Gc+ltFKqTdSK0eQENC5Tn7KHeRr4RjJ+eDy0gqy+yAw3k
ebpC+BHxnXYR8SnkBL2L30LI5LyihPEiEtYw4Gae2USaSaVP9tsuov0Ss1YT
FZtIflyY0vjWIlKPF3/06dEmEggcbPN9vIjCWNYX92puovkPTj7tvxfR6H4r
hUaXDZTOfqc63HUJ0U/XbA3lr6GnVr8VkoOWkL5EXYOa1xqKy4InRY+WkAef
t8Eb7TXki2ivDRUvIYk37fw8pH/I1DWO/SDFMopj3sJ65auIpjnVcvbBMlp8
0v818Okyuhr3bf5swQryOLx6rLx8DnFZHTyv+XUF2T94XBm7dw6RZPLL+dtX
0HPKO5xfE2YRX2VSVO/KCnLYV6/l7TSDvi25S9lqryLRQ+dFf7JMIUkLorlz
xSrqFXg2cfHwGBqQvIuDfvxD3IfxMuOeHhQ1v7zn0sA/pKl7nqZ9vgtpll+L
0Zv/h0qfyDqIl3eiODMzC3quNSTHybFw43w7OhSpsBRzbg3p2d1iS5dtRi9m
+6Sf9q+hBhbvGwHjJeh8qVbc+8l1dDn7uu6puRqs6/q+Yn1rHVVjn1ILjTos
tUdqSY99A7mXJUy0eDXgxQfs5n1qG2iGn201Y6oZxzmOSTD4b6CruQe/SJ5s
x9X8CR/t2DdR8A1fK7Y7/fhtE+P4O4lN9Nnn4zNZz184PuSu0JraJhLWHyg8
4fwbX5y7djfOfBP55LlpGsgM4o2aw0Zf0jbRgFt4LvXaEFb2muvnUd9CcZ+z
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
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    PlotLabel->FormBox[
     "\"1st Inverse Fourier: K =0.00001 \[Omega]1=0.2\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    PlotLabel->FormBox[
     "\"1st Inverse Fourier: K =0.00001 \[Omega]1=2\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{Automatic, Automatic}]}], "}"}]], "Print",
 CellChangeTimes->{3.4043248853629436`*^9, 3.404325008634144*^9, 
  3.4043250714709435`*^9, 3.404325159033744*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQ7bE+M4177VN7me0G90Lzt9tvmNCXHN3xxj7czqaF
X3mhfZ6UpZzl1Y/2J7ZUdl4wSLZvebOqyyXtq/2hXX2GG1Ld7Wftk/nu//2H
/VWFf7VPnCZC9f+xT9+612vW+4X2yYYMGZt5GBxkj0fG3/VYBjWP0eHTl2Wv
Hr5bbF/JXHRl31xmh1ipniW1TLOg5rM6rLt4ZIpecKt9/9XHDqf02B3WVmXc
/a8kD7WPw+H22dVf2r5l7V+6PHTt1f1cDoorN5yucg7fD7GfxyGVN0FaJizZ
fnflccmHAXwOLz+Hph7gL4W6R8BB4OdOzvLYcvsXS2Wcv30QcAi/7lccZlIE
dZ+gw/VeOe3XK1Psv/SF/qzeKeQwk+tV2boJ/lD3Cju4zfBayv1M0/5fed96
xiYRh9yMQF6HZVJQ94s6pAm+nn/9j7E9V+Lx1HYvMQf5bvN/65/ZQ/0j7lD7
8oyA5i4HexEvBhleYQmHp/tmSLtaWkH9J+FgemjDOh0JA3sFY8tLk25LOqhY
XparXyJvD/GvlMM96b6eL5bc9gCmIMr2
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotLabel->FormBox["\"2nd Inverse Fourier:\"", TraditionalForm],
  PlotRange->{{0., 6.687338550904234}, {-0.0032913814405845904`, 
   0.09154259371345258}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Print",
 CellChangeTimes->{3.4043248853629436`*^9, 3.404325008634144*^9, 
  3.4043250714709435`*^9, 3.404325161077344*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"26.129999999999992`", ",", "0.00954092806425967`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.4043248211065435`*^9, 3.4043249097769437`*^9, 
  3.4043250330325437`*^9, 3.404325095073744*^9, 3.4043251619041433`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", "  ", 
  RowBox[{
  "utilise", " ", "le", " ", "beta", " ", "comme", " ", "source", " ", "de", 
   " ", "vol", " ", "de", " ", "vol"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.4043007591483345`*^9, 3.4043007916587343`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BiHestonVanilla", "[", 
   RowBox[{
   "S_", ",", "K_", ",", "\[Tau]_", ",", "\[CapitalSigma]_", ",", "M_", ",", 
    "\[CapitalSigma]inf_", ",", "\[Beta]_", ",", "\[Rho]_", ",", 
    "printflag_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "LegendreCoef1", ",", "LegendreCoef1n", ",", "period1", ",", "period1n", 
      ",", "\[Epsilon]1", ",", "LegendreCoef2", ",", "period2", ",", 
      "period2n", ",", "\[Epsilon]2", ",", "imax", ",", "\[Lambda]1", ",", 
      "\[Lambda]2", ",", "Q"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Q", "=", 
      RowBox[{
       RowBox[{"CholeskyDecomposition", "[", 
        RowBox[{"-", 
         RowBox[{"(", 
          FractionBox[
           RowBox[{
            RowBox[{"M", ".", "\[CapitalSigma]inf"}], "+", 
            RowBox[{"\[CapitalSigma]inf", ".", " ", 
             RowBox[{"Transpose", "[", "M", "]"}]}]}], "2"], ")"}]}], "]"}], 
       "/", "\[Beta]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "LegendreCoef1", ",", "LegendreCoef1n", ",", "period1", ",", 
          "period1n", ",", "\[Epsilon]1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "LegendreCoef2", ",", "period2", ",", "period2n", ",", 
          "\[Epsilon]2"}], "}"}], ",", "imax", ",", "\[Lambda]1", ",", 
        "\[Lambda]2"}], "}"}], "=", 
      RowBox[{"BiHestonVanillaOptimalParameters", "[", 
       RowBox[{
       "S", ",", "K", ",", "\[Tau]", ",", "\[CapitalSigma]", ",", "M", ",", 
        "\[CapitalSigma]inf", ",", "Q", ",", "\[Rho]", ",", 
        "\"\<VanillaSpreadoption\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"BiHestonVanilla", "[", 
      RowBox[{
      "S", ",", "K", ",", "\[Tau]", ",", "\[CapitalSigma]", ",", "M", ",", 
       "\[CapitalSigma]inf", ",", "Q", ",", "\[Rho]", ",", "\[Beta]", ",", 
       "\[Lambda]1", ",", "\[Lambda]2", ",", 
       RowBox[{"{", 
        RowBox[{
        "LegendreCoef1", ",", "LegendreCoef1n", ",", "period1", ",", 
         "period1n", ",", "\[Epsilon]1", ",", "imax"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "LegendreCoef2", ",", "period2", ",", "period2n", ",", 
         "\[Epsilon]2"}], "}"}], ",", "printflag"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.4042074577632284`*^9, 3.4042074770760994`*^9}, {
  3.4042075328115444`*^9, 3.4042077538626633`*^9}, {3.404207970241818*^9, 
  3.404207993351637*^9}, {3.4042080286491895`*^9, 3.404208043665103*^9}, {
  3.4042173037335176`*^9, 3.4042173873444977`*^9}, {3.4042175109093704`*^9, 
  3.404217554472707*^9}, {3.4042999349691343`*^9, 3.4042999555923347`*^9}, {
  3.404381253215744*^9, 3.404381270172944*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "utilise", " ", "une", " ", "matrice", " ", "complete", "  ", "comme", " ", 
   "vol", " ", "de", " ", "vol"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.4043007956367345`*^9, 3.4043008208619347`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BiHestonVanilla2", "[", 
   RowBox[{
   "S_", ",", "K_", ",", "\[Tau]_", ",", "\[CapitalSigma]_", ",", "M_", ",", 
    "\[CapitalSigma]inf_", ",", "Q_", ",", "\[Rho]_", ",", "printflag_"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "LegendreCoef1", ",", "LegendreCoef1n", ",", "period1", ",", "period1n", 
      ",", "\[Epsilon]1", ",", "LegendreCoef2", ",", "period2", ",", 
      "period2n", ",", "\[Epsilon]2", ",", "imax", ",", "\[Lambda]1", ",", 
      "\[Lambda]2", ",", "\[Beta]m"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "LegendreCoef1", ",", "LegendreCoef1n", ",", "period1", ",", 
          "period1n", ",", "\[Epsilon]1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "LegendreCoef2", ",", "period2", ",", "period2n", ",", 
          "\[Epsilon]2"}], "}"}], ",", "imax", ",", "\[Lambda]1", ",", 
        "\[Lambda]2"}], "}"}], "=", 
      RowBox[{"BiHestonVanillaOptimalParameters", "[", 
       RowBox[{
       "S", ",", "K", ",", "\[Tau]", ",", "\[CapitalSigma]", ",", "M", ",", 
        "\[CapitalSigma]inf", ",", "Q", ",", "\[Rho]", ",", 
        "\"\<VanillaSpreadoption\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Beta]m", "=", 
      RowBox[{"-", 
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{
           RowBox[{"M", ".", "\[CapitalSigma]inf"}], "+", 
           RowBox[{"\[CapitalSigma]inf", ".", 
            RowBox[{"Transpose", "[", "M", "]"}]}]}], "2"], ")"}], ".", 
        RowBox[{"Inverse", "[", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Transpose", "[", "Q", "]"}], ".", "Q"}], ")"}], 
         "]"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"BiHestonVanilla2", "[", 
      RowBox[{
      "S", ",", "K", ",", "\[Tau]", ",", "\[CapitalSigma]", ",", "M", ",", 
       "\[CapitalSigma]inf", ",", "Q", ",", "\[Rho]", ",", "\[Beta]m", ",", 
       "\[Lambda]1", ",", "\[Lambda]2", ",", 
       RowBox[{"{", 
        RowBox[{
        "LegendreCoef1", ",", "LegendreCoef1n", ",", "period1", ",", 
         "period1n", ",", "\[Epsilon]1", ",", "imax"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "LegendreCoef2", ",", "period2", ",", "period2n", ",", 
         "\[Epsilon]2"}], "}"}], ",", "printflag"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.4042074577632284`*^9, 3.4042074770760994`*^9}, {
  3.4042075328115444`*^9, 3.4042077538626633`*^9}, {3.404207970241818*^9, 
  3.404207993351637*^9}, {3.4042080286491895`*^9, 3.404208043665103*^9}, {
  3.404217016149871*^9, 3.4042170184311647`*^9}, {3.4042174130637417`*^9, 
  3.4042174217982845`*^9}, {3.4042186116648793`*^9, 3.4042186161962166`*^9}, {
  3.4042999781187344`*^9, 3.4042999878063345`*^9}, {3.4043245662649436`*^9, 
  3.4043246043289433`*^9}, {3.404381289891344*^9, 3.404381291201744*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BiHestonVanilla", "[", 
   RowBox[{
   "S_", ",", "K_", ",", "\[Tau]_", ",", "\[CapitalSigma]_", ",", "M_", ",", 
    "\[CapitalSigma]inf_", ",", "Q_", ",", "\[Rho]_", ",", "\[Beta]_", ",", 
    "\[Lambda]1_", ",", "\[Lambda]2_", ",", 
    RowBox[{"{", 
     RowBox[{
     "LegendreCoef1_", ",", "LegendreCoef1n_", ",", "period1_", ",", 
      "period1n_", ",", "\[Epsilon]1_", ",", "imax_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "LegendreCoef2_", ",", "period2_", ",", "period2n_", ",", 
      "\[Epsilon]2_"}], "}"}], ",", "printflag_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"BiHestonVanillaAux", "[", 
    RowBox[{
    "S", ",", "K", ",", "\[Tau]", ",", "\[CapitalSigma]", ",", "M", ",", 
     "\[CapitalSigma]inf", ",", "Q", ",", "\[Rho]", ",", "\[Beta]", ",", 
     "\[Lambda]1", ",", "\[Lambda]2", ",", 
     RowBox[{"{", 
      RowBox[{
      "LegendreCoef1", ",", "LegendreCoef1n", ",", "period1", ",", "period1n",
        ",", "\[Epsilon]1", ",", "imax"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "LegendreCoef2", ",", "period2", ",", "period2n", ",", "\[Epsilon]2"}], 
      "}"}], ",", "printflag"}], "]"}], " ", "/;", " ", 
   RowBox[{"K", "\[GreaterEqual]", "0"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.399897194377056*^9, 3.399897245940546*^9}, {
   3.3998976692611732`*^9, 3.3998976795269957`*^9}, {3.4002144512750473`*^9, 
   3.4002144569782815`*^9}, {3.400238263213356*^9, 3.400238300573448*^9}, {
   3.400408049201395*^9, 3.4004080510451803`*^9}, 3.400504474791651*^9, {
   3.4005667653701477`*^9, 3.400566798886416*^9}, {3.400819839626373*^9, 
   3.4008198425014277`*^9}, {3.4009134614843187`*^9, 
   3.4009134792034087`*^9}, {3.4009135487047434`*^9, 3.400913581252243*^9}, {
   3.4009136129872274`*^9, 3.4009136377220774`*^9}, {3.4009136698945704`*^9, 
   3.400913678910368*^9}, {3.400913713848539*^9, 3.400913720848673*^9}, {
   3.4009138946020093`*^9, 3.400913904914707*^9}, {3.40091789471006*^9, 
   3.400917899053893*^9}, {3.400921389214653*^9, 3.4009214402156324`*^9}, {
   3.400921492029127*^9, 3.4009215467489276`*^9}, {3.4009217594717617`*^9, 
   3.4009217705500994`*^9}, {3.401110611225083*^9, 3.4011106255847335`*^9}, {
   3.4011155613669987`*^9, 3.4011155856330895`*^9}, {3.401425790206461*^9, 
   3.401425813269404*^9}, {3.402046069834562*^9, 3.40204607210023*^9}, {
   3.4022357520580764`*^9, 3.4022357573706784`*^9}, {3.4022370965213895`*^9, 
   3.4022371025371304`*^9}, {3.402294637481146*^9, 3.4022946494188747`*^9}, {
   3.4022947595616145`*^9, 3.4022948086094313`*^9}, {3.4022949118926644`*^9, 
   3.4022949123770485`*^9}, 3.4022950944274187`*^9, {3.4023880298479567`*^9, 
   3.4023880317599564`*^9}, {3.403871467549989*^9, 3.4038715521922393`*^9}, {
   3.4038772034257407`*^9, 3.4038772338482*^9}, {3.4038778690791464`*^9, 
   3.4038778880951366`*^9}, {3.403877923330188*^9, 3.403877959690261*^9}, {
   3.403880525208268*^9, 3.403880528802087*^9}, {3.4039401668863335`*^9, 
   3.403940181277235*^9}, {3.403940658427021*^9, 3.403940660661439*^9}, 
   3.403940704459155*^9, {3.403947868049818*^9, 3.4039479096443667`*^9}, {
   3.404148916726935*^9, 3.404148924370935*^9}, {3.4041938566583424`*^9, 
   3.4041938600646577`*^9}, {3.4043010082023344`*^9, 3.404301032195134*^9}, {
   3.404301326445134*^9, 3.4043013377707343`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BiHestonVanilla", "[", 
   RowBox[{
   "S_", ",", "K_", ",", "\[Tau]_", ",", "\[CapitalSigma]_", ",", "M_", ",", 
    "\[CapitalSigma]inf_", ",", "Q_", ",", "\[Rho]_", ",", "\[Beta]_", ",", 
    "\[Lambda]1_", ",", "\[Lambda]2_", ",", 
    RowBox[{"{", 
     RowBox[{
     "LegendreCoef1_", ",", "LegendreCoef1n_", ",", "period1_", ",", 
      "period1n_", ",", "\[Epsilon]1_", ",", "imax_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "LegendreCoef2_", ",", "period2_", ",", "period2n_", ",", 
      "\[Epsilon]2_"}], "}"}], ",", "printflag_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"BiHestonVanillaAux", "[", 
     RowBox[{
     "S", ",", "K", ",", "\[Tau]", ",", "\[CapitalSigma]", ",", "M", ",", 
      "\[CapitalSigma]inf", ",", "Q", ",", "\[Rho]", ",", "\[Beta]", ",", 
      "\[Lambda]1", ",", "\[Lambda]2", ",", 
      RowBox[{"{", 
       RowBox[{
       "LegendreCoef1", ",", "LegendreCoef1n", ",", "period1", ",", 
        "period1n", ",", "\[Epsilon]1", ",", "imax"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "LegendreCoef2", ",", "period2", ",", "period2n", ",", "\[Epsilon]2"}],
        "}"}], ",", "printflag"}], "]"}], "+", 
    RowBox[{"S", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "-", 
    RowBox[{"S", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "-", "K"}], "/;", " ", 
   RowBox[{"K", "<", "0"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.399897194377056*^9, 3.399897245940546*^9}, {
   3.3998976692611732`*^9, 3.3998976795269957`*^9}, {3.4002144512750473`*^9, 
   3.4002144569782815`*^9}, {3.400238263213356*^9, 3.400238300573448*^9}, {
   3.400408049201395*^9, 3.4004080510451803`*^9}, 3.400504474791651*^9, {
   3.4005667653701477`*^9, 3.400566798886416*^9}, {3.400819839626373*^9, 
   3.4008198425014277`*^9}, {3.4009134614843187`*^9, 
   3.4009134792034087`*^9}, {3.4009135487047434`*^9, 3.400913581252243*^9}, {
   3.4009136129872274`*^9, 3.4009136377220774`*^9}, {3.4009136698945704`*^9, 
   3.400913678910368*^9}, {3.400913713848539*^9, 3.400913720848673*^9}, {
   3.4009138946020093`*^9, 3.400913904914707*^9}, {3.40091789471006*^9, 
   3.400917899053893*^9}, {3.400921389214653*^9, 3.4009214402156324`*^9}, {
   3.400921492029127*^9, 3.4009215467489276`*^9}, {3.4009217594717617`*^9, 
   3.4009217705500994`*^9}, {3.401110611225083*^9, 3.4011106255847335`*^9}, {
   3.4011155613669987`*^9, 3.4011155856330895`*^9}, {3.401425790206461*^9, 
   3.401425813269404*^9}, {3.402046069834562*^9, 3.40204607210023*^9}, {
   3.4022357520580764`*^9, 3.4022357573706784`*^9}, {3.4022370965213895`*^9, 
   3.4022371025371304`*^9}, {3.402294637481146*^9, 3.4022946494188747`*^9}, {
   3.4022947595616145`*^9, 3.4022948086094313`*^9}, {3.402294889173478*^9, 
   3.402294916033369*^9}, 3.4022950990368824`*^9, {3.402301718929607*^9, 
   3.4023017207108912`*^9}, {3.4023166196688204`*^9, 3.402316620778217*^9}, {
   3.4023784653580155`*^9, 3.402378488030326*^9}, {3.402388034046956*^9, 
   3.4023880365689564`*^9}, {3.402388095676956*^9, 3.4023880963469563`*^9}, {
   3.4038714736126056`*^9, 3.4038714752220116`*^9}, {3.4038715635049562`*^9, 
   3.4038715747395473`*^9}, {3.4038772479109697`*^9, 3.40387725705177*^9}, {
   3.403877876657417*^9, 3.403877881095002*^9}, {3.403877937096077*^9, 
   3.4038779566120768`*^9}, {3.403880536192854*^9, 3.403880540802317*^9}, {
   3.403940184714801*^9, 3.403940192839957*^9}, {3.403940656239479*^9, 
   3.403940684099389*^9}, {3.403947936582384*^9, 3.4039479660829506`*^9}, {
   3.404148930517335*^9, 3.404148938223735*^9}, {3.404193865752267*^9, 
   3.4041938692054586`*^9}, {3.4042073013852262`*^9, 3.404207330682664*^9}, {
   3.4043000073687344`*^9, 3.4043000324223347`*^9}, {3.4044076957679477`*^9, 
   3.4044077049251475`*^9}, 3.404455930502843*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BiHestonVanilla2", "[", 
   RowBox[{
   "S_", ",", "K_", ",", "\[Tau]_", ",", "\[CapitalSigma]_", ",", "M_", ",", 
    "\[CapitalSigma]inf_", ",", "Q_", ",", "\[Rho]_", ",", "\[Beta]m_", ",", 
    "\[Lambda]1_", ",", "\[Lambda]2_", ",", 
    RowBox[{"{", 
     RowBox[{
     "LegendreCoef1_", ",", "LegendreCoef1n_", ",", "period1_", ",", 
      "period1n_", ",", "\[Epsilon]1_", ",", "imax_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "LegendreCoef2_", ",", "period2_", ",", "period2n_", ",", 
      "\[Epsilon]2_"}], "}"}], ",", "printflag_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"BiHestonVanillaAux2", "[", 
    RowBox[{
    "S", ",", "K", ",", "\[Tau]", ",", "\[CapitalSigma]", ",", "M", ",", 
     "\[CapitalSigma]inf", ",", "Q", ",", "\[Rho]", ",", "\[Beta]m", ",", 
     "\[Lambda]1", ",", "\[Lambda]2", ",", 
     RowBox[{"{", 
      RowBox[{
      "LegendreCoef1", ",", "LegendreCoef1n", ",", "period1", ",", "period1n",
        ",", "\[Epsilon]1", ",", "imax"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "LegendreCoef2", ",", "period2", ",", "period2n", ",", "\[Epsilon]2"}], 
      "}"}], ",", "printflag"}], "]"}], " ", "/;", " ", 
   RowBox[{"K", "\[GreaterEqual]", "0"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.399897194377056*^9, 3.399897245940546*^9}, {
   3.3998976692611732`*^9, 3.3998976795269957`*^9}, {3.4002144512750473`*^9, 
   3.4002144569782815`*^9}, {3.400238263213356*^9, 3.400238300573448*^9}, {
   3.400408049201395*^9, 3.4004080510451803`*^9}, 3.400504474791651*^9, {
   3.4005667653701477`*^9, 3.400566798886416*^9}, {3.400819839626373*^9, 
   3.4008198425014277`*^9}, {3.4009134614843187`*^9, 
   3.4009134792034087`*^9}, {3.4009135487047434`*^9, 3.400913581252243*^9}, {
   3.4009136129872274`*^9, 3.4009136377220774`*^9}, {3.4009136698945704`*^9, 
   3.400913678910368*^9}, {3.400913713848539*^9, 3.400913720848673*^9}, {
   3.4009138946020093`*^9, 3.400913904914707*^9}, {3.40091789471006*^9, 
   3.400917899053893*^9}, {3.400921389214653*^9, 3.4009214402156324`*^9}, {
   3.400921492029127*^9, 3.4009215467489276`*^9}, {3.4009217594717617`*^9, 
   3.4009217705500994`*^9}, {3.401110611225083*^9, 3.4011106255847335`*^9}, {
   3.4011155613669987`*^9, 3.4011155856330895`*^9}, {3.401425790206461*^9, 
   3.401425813269404*^9}, {3.402046069834562*^9, 3.40204607210023*^9}, {
   3.4022357520580764`*^9, 3.4022357573706784`*^9}, {3.4022370965213895`*^9, 
   3.4022371025371304`*^9}, {3.402294637481146*^9, 3.4022946494188747`*^9}, {
   3.4022947595616145`*^9, 3.4022948086094313`*^9}, {3.4022949118926644`*^9, 
   3.4022949123770485`*^9}, 3.4022950944274187`*^9, {3.4023880298479567`*^9, 
   3.4023880317599564`*^9}, {3.403871467549989*^9, 3.4038715521922393`*^9}, {
   3.4038772034257407`*^9, 3.4038772338482*^9}, {3.4038778690791464`*^9, 
   3.4038778880951366`*^9}, {3.403877923330188*^9, 3.403877959690261*^9}, {
   3.403880525208268*^9, 3.403880528802087*^9}, {3.4039401668863335`*^9, 
   3.403940181277235*^9}, {3.403940658427021*^9, 3.403940660661439*^9}, 
   3.403940704459155*^9, {3.403947868049818*^9, 3.4039479096443667`*^9}, {
   3.404148916726935*^9, 3.404148924370935*^9}, {3.4041938566583424`*^9, 
   3.4041938600646577`*^9}, {3.4043010082023344`*^9, 3.404301032195134*^9}, {
   3.404301326445134*^9, 3.4043013377707343`*^9}, {3.4043247249013433`*^9, 
   3.4043247340897436`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BiHestonVanilla2", "[", 
   RowBox[{
   "S_", ",", "K_", ",", "\[Tau]_", ",", "\[CapitalSigma]_", ",", "M_", ",", 
    "\[CapitalSigma]inf_", ",", "Q_", ",", "\[Rho]_", ",", "\[Beta]m_", ",", 
    "\[Lambda]1_", ",", "\[Lambda]2_", ",", 
    RowBox[{"{", 
     RowBox[{
     "LegendreCoef1_", ",", "LegendreCoef1n_", ",", "period1_", ",", 
      "period1n_", ",", "\[Epsilon]1_", ",", "imax_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "LegendreCoef2_", ",", "period2_", ",", "period2n_", ",", 
      "\[Epsilon]2_"}], "}"}], ",", "printflag_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"BiHestonVanillaAux2", "[", 
     RowBox[{
     "S", ",", "K", ",", "\[Tau]", ",", "\[CapitalSigma]", ",", "M", ",", 
      "\[CapitalSigma]inf", ",", "Q", ",", "\[Rho]", ",", "\[Beta]m", ",", 
      "\[Lambda]1", ",", "\[Lambda]2", ",", 
      RowBox[{"{", 
       RowBox[{
       "LegendreCoef1", ",", "LegendreCoef1n", ",", "period1", ",", 
        "period1n", ",", "\[Epsilon]1", ",", "imax"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "LegendreCoef2", ",", "period2", ",", "period2n", ",", "\[Epsilon]2"}],
        "}"}], ",", "printflag"}], "]"}], "+", 
    RowBox[{"S", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "-", 
    RowBox[{"S", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "-", "K"}], "/;", " ", 
   RowBox[{"K", "<", "0"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.399897194377056*^9, 3.399897245940546*^9}, {
   3.3998976692611732`*^9, 3.3998976795269957`*^9}, {3.4002144512750473`*^9, 
   3.4002144569782815`*^9}, {3.400238263213356*^9, 3.400238300573448*^9}, {
   3.400408049201395*^9, 3.4004080510451803`*^9}, 3.400504474791651*^9, {
   3.4005667653701477`*^9, 3.400566798886416*^9}, {3.400819839626373*^9, 
   3.4008198425014277`*^9}, {3.4009134614843187`*^9, 
   3.4009134792034087`*^9}, {3.4009135487047434`*^9, 3.400913581252243*^9}, {
   3.4009136129872274`*^9, 3.4009136377220774`*^9}, {3.4009136698945704`*^9, 
   3.400913678910368*^9}, {3.400913713848539*^9, 3.400913720848673*^9}, {
   3.4009138946020093`*^9, 3.400913904914707*^9}, {3.40091789471006*^9, 
   3.400917899053893*^9}, {3.400921389214653*^9, 3.4009214402156324`*^9}, {
   3.400921492029127*^9, 3.4009215467489276`*^9}, {3.4009217594717617`*^9, 
   3.4009217705500994`*^9}, {3.401110611225083*^9, 3.4011106255847335`*^9}, {
   3.4011155613669987`*^9, 3.4011155856330895`*^9}, {3.401425790206461*^9, 
   3.401425813269404*^9}, {3.402046069834562*^9, 3.40204607210023*^9}, {
   3.4022357520580764`*^9, 3.4022357573706784`*^9}, {3.4022370965213895`*^9, 
   3.4022371025371304`*^9}, {3.402294637481146*^9, 3.4022946494188747`*^9}, {
   3.4022947595616145`*^9, 3.4022948086094313`*^9}, {3.402294889173478*^9, 
   3.402294916033369*^9}, 3.4022950990368824`*^9, {3.402301718929607*^9, 
   3.4023017207108912`*^9}, {3.4023166196688204`*^9, 3.402316620778217*^9}, {
   3.4023784653580155`*^9, 3.402378488030326*^9}, {3.402388034046956*^9, 
   3.4023880365689564`*^9}, {3.402388095676956*^9, 3.4023880963469563`*^9}, {
   3.4038714736126056`*^9, 3.4038714752220116`*^9}, {3.4038715635049562`*^9, 
   3.4038715747395473`*^9}, {3.4038772479109697`*^9, 3.40387725705177*^9}, {
   3.403877876657417*^9, 3.403877881095002*^9}, {3.403877937096077*^9, 
   3.4038779566120768`*^9}, {3.403880536192854*^9, 3.403880540802317*^9}, {
   3.403940184714801*^9, 3.403940192839957*^9}, {3.403940656239479*^9, 
   3.403940684099389*^9}, {3.403947936582384*^9, 3.4039479660829506`*^9}, {
   3.404148930517335*^9, 3.404148938223735*^9}, {3.404193865752267*^9, 
   3.4041938692054586`*^9}, {3.4042073013852262`*^9, 3.404207330682664*^9}, {
   3.4043000073687344`*^9, 3.4043000324223347`*^9}, {3.4044076957679477`*^9, 
   3.4044077049251475`*^9}, {3.404455930502843*^9, 3.4044559745125523`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BiHestonVanillaAux", "[", 
   RowBox[{
   "S_", ",", "K_", ",", "\[Tau]_", ",", "\[CapitalSigma]_", ",", "M_", ",", 
    "\[CapitalSigma]inf_", ",", "Q_", ",", "\[Rho]_", ",", "\[Beta]_", ",", 
    "\[Lambda]1_", ",", "\[Lambda]2_", ",", 
    RowBox[{"{", 
     RowBox[{
     "LegendreCoef1_", ",", "LegendreCoef1n_", ",", "period1_", ",", 
      "period1n_", ",", "\[Epsilon]1_", ",", "imax_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "LegendreCoef2_", ",", "period2_", ",", "period2n_", ",", 
      "\[Epsilon]2_"}], "}"}], ",", "printflag_"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{
   FractionBox["2", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"2", "\[Pi]"}], ")"}], "2"]], 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "res", ",", "res2", ",", 
       RowBox[{"Y", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Log", "[", 
           RowBox[{"S", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
          RowBox[{"Log", "[", 
           RowBox[{"S", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"printflag", "\[Equal]", "1"}], " ", "||", " ", 
         RowBox[{"MemberQ", "[", 
          RowBox[{"printflag", ",", "1"}], "]"}]}], "  ", ",", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\< S=\>\"", ",", 
           RowBox[{"S", " ", "//", " ", "ColumnForm"}], ",", 
           "\"\< \[CapitalSigma]=\>\"", ",", 
           RowBox[{"\[CapitalSigma]", " ", "//", "MatrixForm"}], ",", 
           "\"\<M=\>\"", ",", 
           RowBox[{"M", "//", "MatrixForm"}], ",", 
           "\"\< \[CapitalSigma]inf=\>\"", ",", 
           RowBox[{"\[CapitalSigma]inf", "//", "MatrixForm"}], " ", ",", 
           "\"\< Q=\>\"", ",", 
           RowBox[{"Q", "//", "MatrixForm"}], " ", ",", "\"\< \[Rho]=\>\"", 
           ",", 
           RowBox[{"\[Rho]", "//", "ColumnForm"}], ",", 
           "\"\< Imaginary Shifts=\>\"", ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\[Lambda]1", ",", "\[Lambda]2"}], "}"}], " ", "//", " ",
             "ColumnForm"}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<{NbLegCoef1,NbLegCoef1n,period1,period1n,\[Epsilon]1,imax}=\>\"\
", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Length", "[", "LegendreCoef1", "]"}], ",", 
             RowBox[{"Length", "[", "LegendreCoef1n", "]"}], ",", "period1", 
             ",", "period1n", ",", "\[Epsilon]1", ",", "imax"}], "}"}], ",", 
           "\"\<{NbLegCoef2,period2,period2n,\[Epsilon]2}=\>\"", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Length", "[", "LegendreCoef2", "]"}], ",", "period2", 
             ",", "period2n", ",", "\[Epsilon]2"}], "}"}]}], "]"}]}]}], "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"printflag", "\[Equal]", "4"}], "||", " ", 
         RowBox[{"MemberQ", "[", 
          RowBox[{"printflag", ",", "4"}], "]"}]}], " ", ",", 
        RowBox[{"Print", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Plot", "[", 
            RowBox[{
             RowBox[{"SymetrizedBiHestonVanillaIntegrand", "[", 
              RowBox[{
              "Y", ",", "K", ",", "\[Tau]", ",", "\[CapitalSigma]", ",", "M", 
               ",", "Q", ",", "\[Rho]", ",", "\[Beta]", ",", "\[Lambda]1", 
               ",", "\[Lambda]2", ",", "\[Omega]1", ",", "\[Omega]2"}], "]"}],
              ",", 
             RowBox[{"{", 
              RowBox[{"\[Omega]2", ",", "0", " ", ",", 
               RowBox[{"2", "period2"}]}], "}"}], ",", 
             RowBox[{"PlotPoints", "\[Rule]", "50"}], ",", 
             RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
             RowBox[{"PlotLabel", "\[Rule]", 
              RowBox[{"\"\<1st Inverse Fourier: K =\>\"", "<>", 
               RowBox[{"ToString", "[", "K", "]"}], "<>", 
               "\"\< \[Omega]1=\>\"", "<>", 
               RowBox[{"ToString", "[", "\[Omega]1", "]"}]}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Omega]1", ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0.2", ",", "2"}], "}"}]}], "}"}]}], "]"}], 
         "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"printflag", "\[Equal]", "6"}], "||", " ", 
         RowBox[{"MemberQ", "[", 
          RowBox[{"printflag", ",", "6"}], "]"}]}], " ", ",", 
        RowBox[{"Print", "[", 
         RowBox[{"ListPlot", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\[Omega]2", ",", 
               RowBox[{
                RowBox[{"AdaptativeIntegrate", "[", 
                 RowBox[{
                  RowBox[{"Function", "[", 
                   RowBox[{"\[Omega]1", ",", 
                    RowBox[{"SymetrizedBiHestonVanillaIntegrand", "[", 
                    RowBox[{
                    "Y", ",", "K", ",", "\[Tau]", ",", "\[CapitalSigma]", ",",
                     "M", ",", "Q", ",", "\[Rho]", ",", "\[Beta]", ",", 
                    "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Omega]1", ",", 
                    "\[Omega]2"}], "]"}]}], "]"}], ",", "LegendreCoef1", ",", 
                  "LegendreCoef1n", ",", "period1", ",", "period1n", ",", 
                  "\[Epsilon]1", ",", "imax"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[Omega]2", ",", "0", ",", "period2", ",", 
               RowBox[{"period2", "/", "30"}]}], "}"}]}], "]"}], ",", 
           RowBox[{"Joined", "\[Rule]", "True"}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", "\"\<2nd Inverse Fourier:\>\""}], 
           ",", 
           RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "]"}]}], "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"res", "=", 
       RowBox[{"AdaptativeIntegrate", "[", 
        RowBox[{
         RowBox[{"Function", "[", 
          RowBox[{"\[Omega]2", ",", 
           RowBox[{
            RowBox[{"a", "=", 
             RowBox[{"AdaptativeIntegrate", "[", 
              RowBox[{
               RowBox[{"Function", "[", 
                RowBox[{"\[Omega]1", ",", 
                 RowBox[{"SymetrizedBiHestonVanillaIntegrand", "[", 
                  RowBox[{
                  "Y", ",", "K", ",", "\[Tau]", ",", "\[CapitalSigma]", ",", 
                   "M", ",", "Q", ",", "\[Rho]", ",", "\[Beta]", ",", 
                   "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Omega]1", ",", 
                   "\[Omega]2"}], "]"}]}], "]"}], ",", "LegendreCoef1", ",", 
               "LegendreCoef1n", ",", "period1", ",", "period1n", ",", 
               "\[Epsilon]1", ",", "imax"}], "]"}]}], ";", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"printflag", "\[Equal]", "7"}], "||", " ", 
               RowBox[{"MemberQ", "[", 
                RowBox[{"printflag", ",", "7"}], "]"}]}], ",", 
              RowBox[{"Print", "[", 
               RowBox[{"\"\<Integ_2=\>\"", ",", "a"}], "]"}]}], "]"}], ";", 
            RowBox[{"a", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], ",", "LegendreCoef2", 
         ",", "period2", ",", "period2n", ",", "\[Epsilon]2", ",", "imax"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"printflag", "\[Equal]", "7"}], "||", " ", 
         RowBox[{"MemberQ", "[", 
          RowBox[{"printflag", ",", "7"}], "]"}]}], ",", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Integ_1=\>\"", ",", "res"}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"res", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.3997288601267104`*^9, 3.39972890803388*^9, {3.3997289692069297`*^9, 
   3.3997289944261637`*^9}, {3.399729087443575*^9, 3.3997291578199263`*^9}, {
   3.399729214633517*^9, 3.3997292559936857`*^9}, {3.399729338917153*^9, 
   3.399729443137904*^9}, {3.3997297921289797`*^9, 3.399729801332281*^9}, 
   3.3997984631978292`*^9, 3.3997986822957864`*^9, {3.399799475623518*^9, 
   3.3997994825611515`*^9}, {3.399813039024555*^9, 3.3998130523841867`*^9}, {
   3.3998138111956306`*^9, 3.399813818523896*^9}, {3.3998138975254135`*^9, 
   3.3998139300104117`*^9}, {3.399814002074295*^9, 3.3998140680286865`*^9}, {
   3.3998141794214506`*^9, 3.399814187827862*^9}, {3.3998161633189154`*^9, 
   3.399816166818983*^9}, {3.399816989678531*^9, 3.39981701069456*^9}, {
   3.3998175772210617`*^9, 3.3998175797054844`*^9}, {3.3998177980534267`*^9, 
   3.3998178039285393`*^9}, 3.3998191717048006`*^9, {3.399819229424659*^9, 
   3.399819249925052*^9}, {3.3998192996916327`*^9, 3.3998193255202537`*^9}, {
   3.3998194002404385`*^9, 3.399819401990472*^9}, {3.399819437022394*^9, 
   3.399819443678772*^9}, {3.3998195847752314`*^9, 3.3998195956035643`*^9}, {
   3.3998937261423693`*^9, 3.3998937440645885`*^9}, {3.399894673945778*^9, 
   3.3998946780865884`*^9}, 3.399895357951172*^9, {3.3998971752360635`*^9, 
   3.399897202986596*^9}, {3.399995099817901*^9, 3.3999951242558703`*^9}, {
   3.3999951653972855`*^9, 3.3999952424143887`*^9}, {3.399995434089944*^9, 
   3.3999954559809895`*^9}, 3.400214359554536*^9, {3.4002194753715076`*^9, 
   3.4002194862310915`*^9}, {3.400221264780864*^9, 3.400221267812172*^9}, {
   3.400221324438259*^9, 3.4002213249851446`*^9}, {3.4002307045682325`*^9, 
   3.4002307106777253`*^9}, {3.4002309417446613`*^9, 
   3.4002309457603636`*^9}, {3.4002355676772275`*^9, 
   3.4002356840075865`*^9}, {3.4002357813375797`*^9, 3.400235782228222*^9}, {
   3.400238239244146*^9, 3.40023824052542*^9}, {3.4004065560321016`*^9, 
   3.400406572266788*^9}, 3.40040661272069*^9, {3.400406710910075*^9, 
   3.400406802349331*^9}, {3.4004079962316275`*^9, 3.400408003981776*^9}, {
   3.4004080367167797`*^9, 3.400408037591797*^9}, {3.400408141500042*^9, 
   3.4004081422656813`*^9}, 3.400504474791651*^9, {3.4008198209228888`*^9, 
   3.4008198369544463`*^9}, {3.401177200473509*^9, 3.401177296365975*^9}, 
   3.4011776191065464`*^9, 3.4011776885297546`*^9, {3.4011777732345057`*^9, 
   3.4011777815627904`*^9}, {3.4015301347651124`*^9, 3.401530142671514*^9}, {
   3.4015342195318975`*^9, 3.4015342774861345`*^9}, {3.4015343731285963`*^9, 
   3.4015343749255056`*^9}, {3.402033437670154*^9, 3.402033457561161*^9}, {
   3.4020334928118377`*^9, 3.402033502483898*^9}, {3.402143403333747*^9, 
   3.402143421193465*^9}, {3.402143489991661*^9, 3.40214349125731*^9}, {
   3.402143653151044*^9, 3.4021436941674557`*^9}, {3.402205803123693*^9, 
   3.402205848499564*^9}, {3.402294611715026*^9, 3.4022946131681786`*^9}, 
   3.402294775718175*^9, {3.4022949263773174`*^9, 3.4022949270960813`*^9}, 
   3.4023779225819693`*^9, 3.402388039487956*^9, 3.4023881114109564`*^9, 
   3.403871476831417*^9, 3.403871589333577*^9, {3.403871732195695*^9, 
   3.4038719361371107`*^9}, 3.40387197021589*^9, {3.4038729130621176`*^9, 
   3.403872917359075*^9}, {3.4038732665532794`*^9, 3.4038732913350053`*^9}, {
   3.40387338716497*^9, 3.403873392790078*^9}, {3.4038739059561806`*^9, 
   3.403873929300379*^9}, {3.4038757265536356`*^9, 3.403875727100521*^9}, {
   3.4038760173873444`*^9, 3.403876028450057*^9}, {3.4038767128225718`*^9, 
   3.4038767355730085`*^9}, {3.403876883685227*^9, 3.403876894872942*^9}, 
   3.4038770811577682`*^9, {3.403877262489375*^9, 3.403877296927536*^9}, {
   3.4038779003609967`*^9, 3.4038779017516484`*^9}, {3.403877950330706*^9, 
   3.403877995722203*^9}, {3.4038805669746947`*^9, 3.4038805816156006`*^9}, {
   3.403940196949411*^9, 3.403940212309081*^9}, {3.4039402503098106`*^9, 
   3.403940330483225*^9}, {3.403940565097104*^9, 3.4039406320983906`*^9}, {
   3.4039477736886315`*^9, 3.4039478349866834`*^9}, 3.403947942238743*^9, {
   3.4039479736924715`*^9, 3.403948027771635*^9}, 3.403948162852353*^9, {
   3.4039491169487963`*^9, 3.4039491206988688`*^9}, {3.4039492631391034`*^9, 
   3.4039493470938406`*^9}, {3.4039496376931696`*^9, 3.403949723882324*^9}, {
   3.4039498424783516`*^9, 3.4039499998719983`*^9}, {3.404147952397335*^9, 
   3.404147980680135*^9}, {3.404148073983735*^9, 3.404148107492535*^9}, {
   3.404148258531735*^9, 3.4041482678605347`*^9}, {3.404148945009735*^9, 
   3.404148946164135*^9}, {3.4041489846337347`*^9, 3.404149017549735*^9}, {
   3.404149060200135*^9, 3.404149083178935*^9}, {3.404151307641535*^9, 
   3.404151309185935*^9}, {3.404151474499135*^9, 3.404151483219535*^9}, 
   3.404151568223935*^9, 3.4041938717523823`*^9, {3.404193912175033*^9, 
   3.404193917190755*^9}, {3.4042041069801445`*^9, 3.4042041521685123`*^9}, {
   3.4042042123415427`*^9, 3.4042042386076717`*^9}, {3.404204276624027*^9, 
   3.4042044284238167`*^9}, {3.40420452156623*^9, 3.4042045494573903`*^9}, {
   3.404204582895532*^9, 3.4042046181149583`*^9}, {3.404204788415103*^9, 
   3.4042048062748213`*^9}, {3.404204841759877*^9, 3.4042048723542147`*^9}, {
   3.404204936324193*^9, 3.4042052265172644`*^9}, {3.4042052790182724`*^9, 
   3.4042052894403477`*^9}, {3.404205340738208*^9, 3.4042053679418545`*^9}, {
   3.404205400817486*^9, 3.404205419677223*^9}, {3.4042054802252607`*^9, 
   3.404205497178711*^9}, 3.40420552863244*^9, {3.4042072185555105`*^9, 
   3.404207235243331*^9}, {3.4043000701119347`*^9, 3.4043000786295347`*^9}, {
   3.4043001168183346`*^9, 3.4043001401871347`*^9}, {3.4043234063901434`*^9, 
   3.404323420461344*^9}, {3.4043237408853436`*^9, 3.4043237568753433`*^9}, {
   3.4043239580841436`*^9, 3.4043239680837436`*^9}, {3.404389056089944*^9, 
   3.404389064997544*^9}, {3.4044553143383374`*^9, 3.4044553173471303`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BiHestonVanillaAux2", "[", 
   RowBox[{
   "S_", ",", "K_", ",", "\[Tau]_", ",", "\[CapitalSigma]_", ",", "M_", ",", 
    "\[CapitalSigma]inf_", ",", "Q_", ",", "\[Rho]_", ",", "\[Beta]m_", ",", 
    "\[Lambda]1_", ",", "\[Lambda]2_", ",", 
    RowBox[{"{", 
     RowBox[{
     "LegendreCoef1_", ",", "LegendreCoef1n_", ",", "period1_", ",", 
      "period1n_", ",", "\[Epsilon]1_", ",", "imax_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "LegendreCoef2_", ",", "period2_", ",", "period2n_", ",", 
      "\[Epsilon]2_"}], "}"}], ",", "printflag_"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{
   FractionBox["2", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"2", "\[Pi]"}], ")"}], "2"]], 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "res", ",", "res2", ",", 
       RowBox[{"Y", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Log", "[", 
           RowBox[{"S", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
          RowBox[{"Log", "[", 
           RowBox[{"S", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"printflag", "\[Equal]", "1"}], " ", "||", " ", 
         RowBox[{"MemberQ", "[", 
          RowBox[{"printflag", ",", "1"}], "]"}]}], "  ", ",", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\< S=\>\"", ",", 
           RowBox[{"S", " ", "//", " ", "ColumnForm"}], ",", 
           "\"\< \[CapitalSigma]=\>\"", ",", 
           RowBox[{"\[CapitalSigma]", " ", "//", "MatrixForm"}], ",", 
           "\"\<M=\>\"", ",", 
           RowBox[{"M", "//", "MatrixForm"}], ",", 
           "\"\< \[CapitalSigma]inf=\>\"", ",", 
           RowBox[{"\[CapitalSigma]inf", "//", "MatrixForm"}], " ", ",", 
           "\"\< Q=\>\"", ",", 
           RowBox[{"Q", "//", "MatrixForm"}], " ", ",", "\"\< \[Rho]=\>\"", 
           ",", 
           RowBox[{"\[Rho]", "//", "ColumnForm"}], ",", 
           "\"\< Imaginary Shifts=\>\"", ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\[Lambda]1", ",", "\[Lambda]2"}], "}"}], " ", "//", " ",
             "ColumnForm"}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<{NbLegCoef1,NbLegCoef1n,period1,period1n,\[Epsilon]1,imax}=\>\"\
", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Length", "[", "LegendreCoef1", "]"}], ",", 
             RowBox[{"Length", "[", "LegendreCoef1n", "]"}], ",", "period1", 
             ",", "period1n", ",", "\[Epsilon]1", ",", "imax"}], "}"}], ",", 
           "\"\<{NbLegCoef2,period2,period2n,\[Epsilon]2}=\>\"", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Length", "[", "LegendreCoef2", "]"}], ",", "period2", 
             ",", "period2n", ",", "\[Epsilon]2"}], "}"}]}], "]"}]}]}], "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"printflag", "\[Equal]", "4"}], "||", " ", 
         RowBox[{"MemberQ", "[", 
          RowBox[{"printflag", ",", "4"}], "]"}]}], " ", ",", 
        RowBox[{"Print", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Plot", "[", 
            RowBox[{
             RowBox[{"SymetrizedBiHestonVanillaIntegrand2", "[", 
              RowBox[{
              "Y", ",", "K", ",", "\[Tau]", ",", "\[CapitalSigma]", ",", "M", 
               ",", "Q", ",", "\[Rho]", ",", "\[Beta]m", ",", "\[Lambda]1", 
               ",", "\[Lambda]2", ",", "\[Omega]1", ",", "\[Omega]2"}], "]"}],
              ",", 
             RowBox[{"{", 
              RowBox[{"\[Omega]2", ",", "0", " ", ",", 
               RowBox[{"2", "period2"}]}], "}"}], ",", 
             RowBox[{"PlotPoints", "\[Rule]", "50"}], ",", 
             RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
             RowBox[{"PlotLabel", "\[Rule]", 
              RowBox[{"\"\<1st Inverse Fourier: K =\>\"", "<>", 
               RowBox[{"ToString", "[", "K", "]"}], "<>", 
               "\"\< \[Omega]1=\>\"", "<>", 
               RowBox[{"ToString", "[", "\[Omega]1", "]"}]}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Omega]1", ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0.2", ",", "2"}], "}"}]}], "}"}]}], "]"}], 
         "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"printflag", "\[Equal]", "6"}], "||", " ", 
         RowBox[{"MemberQ", "[", 
          RowBox[{"printflag", ",", "6"}], "]"}]}], " ", ",", 
        RowBox[{"Print", "[", 
         RowBox[{"ListPlot", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\[Omega]2", ",", 
               RowBox[{
                RowBox[{"AdaptativeIntegrate", "[", 
                 RowBox[{
                  RowBox[{"Function", "[", 
                   RowBox[{"\[Omega]1", ",", 
                    RowBox[{"SymetrizedBiHestonVanillaIntegrand2", "[", 
                    RowBox[{
                    "Y", ",", "K", ",", "\[Tau]", ",", "\[CapitalSigma]", ",",
                     "M", ",", "Q", ",", "\[Rho]", ",", "\[Beta]m", ",", 
                    "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Omega]1", ",", 
                    "\[Omega]2"}], "]"}]}], "]"}], ",", "LegendreCoef1", ",", 
                  "LegendreCoef1n", ",", "period1", ",", "period1n", ",", 
                  "\[Epsilon]1", ",", "imax"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[Omega]2", ",", "0", ",", "period2", ",", 
               RowBox[{"period2", "/", "30"}]}], "}"}]}], "]"}], ",", 
           RowBox[{"Joined", "\[Rule]", "True"}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", "\"\<2nd Inverse Fourier:\>\""}], 
           ",", 
           RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "]"}]}], "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"res", "=", 
       RowBox[{"AdaptativeIntegrate", "[", 
        RowBox[{
         RowBox[{"Function", "[", 
          RowBox[{"\[Omega]2", ",", 
           RowBox[{
            RowBox[{"a", "=", 
             RowBox[{"AdaptativeIntegrate", "[", 
              RowBox[{
               RowBox[{"Function", "[", 
                RowBox[{"\[Omega]1", ",", 
                 RowBox[{"SymetrizedBiHestonVanillaIntegrand2", "[", 
                  RowBox[{
                  "Y", ",", "K", ",", "\[Tau]", ",", "\[CapitalSigma]", ",", 
                   "M", ",", "Q", ",", "\[Rho]", ",", "\[Beta]m", ",", 
                   "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Omega]1", ",", 
                   "\[Omega]2"}], "]"}]}], "]"}], ",", "LegendreCoef1", ",", 
               "LegendreCoef1n", ",", "period1", ",", "period1n", ",", 
               "\[Epsilon]1", ",", "imax"}], "]"}]}], ";", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"printflag", "\[Equal]", "2"}], ",", 
              RowBox[{"Print", "[", 
               RowBox[{"\"\<Integ_2=\>\"", ",", "a"}], "]"}]}], "]"}], ";", 
            RowBox[{"a", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], ",", "LegendreCoef2", 
         ",", "period2", ",", "period2n", ",", "\[Epsilon]2", ",", "imax"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"printflag", "\[Equal]", "2"}], ",", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Integ_1=\>\"", ",", "res"}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"res", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.3997288601267104`*^9, 3.39972890803388*^9, {3.3997289692069297`*^9, 
   3.3997289944261637`*^9}, {3.399729087443575*^9, 3.3997291578199263`*^9}, {
   3.399729214633517*^9, 3.3997292559936857`*^9}, {3.399729338917153*^9, 
   3.399729443137904*^9}, {3.3997297921289797`*^9, 3.399729801332281*^9}, 
   3.3997984631978292`*^9, 3.3997986822957864`*^9, {3.399799475623518*^9, 
   3.3997994825611515`*^9}, {3.399813039024555*^9, 3.3998130523841867`*^9}, {
   3.3998138111956306`*^9, 3.399813818523896*^9}, {3.3998138975254135`*^9, 
   3.3998139300104117`*^9}, {3.399814002074295*^9, 3.3998140680286865`*^9}, {
   3.3998141794214506`*^9, 3.399814187827862*^9}, {3.3998161633189154`*^9, 
   3.399816166818983*^9}, {3.399816989678531*^9, 3.39981701069456*^9}, {
   3.3998175772210617`*^9, 3.3998175797054844`*^9}, {3.3998177980534267`*^9, 
   3.3998178039285393`*^9}, 3.3998191717048006`*^9, {3.399819229424659*^9, 
   3.399819249925052*^9}, {3.3998192996916327`*^9, 3.3998193255202537`*^9}, {
   3.3998194002404385`*^9, 3.399819401990472*^9}, {3.399819437022394*^9, 
   3.399819443678772*^9}, {3.3998195847752314`*^9, 3.3998195956035643`*^9}, {
   3.3998937261423693`*^9, 3.3998937440645885`*^9}, {3.399894673945778*^9, 
   3.3998946780865884`*^9}, 3.399895357951172*^9, {3.3998971752360635`*^9, 
   3.399897202986596*^9}, {3.399995099817901*^9, 3.3999951242558703`*^9}, {
   3.3999951653972855`*^9, 3.3999952424143887`*^9}, {3.399995434089944*^9, 
   3.3999954559809895`*^9}, 3.400214359554536*^9, {3.4002194753715076`*^9, 
   3.4002194862310915`*^9}, {3.400221264780864*^9, 3.400221267812172*^9}, {
   3.400221324438259*^9, 3.4002213249851446`*^9}, {3.4002307045682325`*^9, 
   3.4002307106777253`*^9}, {3.4002309417446613`*^9, 
   3.4002309457603636`*^9}, {3.4002355676772275`*^9, 
   3.4002356840075865`*^9}, {3.4002357813375797`*^9, 3.400235782228222*^9}, {
   3.400238239244146*^9, 3.40023824052542*^9}, {3.4004065560321016`*^9, 
   3.400406572266788*^9}, 3.40040661272069*^9, {3.400406710910075*^9, 
   3.400406802349331*^9}, {3.4004079962316275`*^9, 3.400408003981776*^9}, {
   3.4004080367167797`*^9, 3.400408037591797*^9}, {3.400408141500042*^9, 
   3.4004081422656813`*^9}, 3.400504474791651*^9, {3.4008198209228888`*^9, 
   3.4008198369544463`*^9}, {3.401177200473509*^9, 3.401177296365975*^9}, 
   3.4011776191065464`*^9, 3.4011776885297546`*^9, {3.4011777732345057`*^9, 
   3.4011777815627904`*^9}, {3.4015301347651124`*^9, 3.401530142671514*^9}, {
   3.4015342195318975`*^9, 3.4015342774861345`*^9}, {3.4015343731285963`*^9, 
   3.4015343749255056`*^9}, {3.402033437670154*^9, 3.402033457561161*^9}, {
   3.4020334928118377`*^9, 3.402033502483898*^9}, {3.402143403333747*^9, 
   3.402143421193465*^9}, {3.402143489991661*^9, 3.40214349125731*^9}, {
   3.402143653151044*^9, 3.4021436941674557`*^9}, {3.402205803123693*^9, 
   3.402205848499564*^9}, {3.402294611715026*^9, 3.4022946131681786`*^9}, 
   3.402294775718175*^9, {3.4022949263773174`*^9, 3.4022949270960813`*^9}, 
   3.4023779225819693`*^9, 3.402388039487956*^9, 3.4023881114109564`*^9, 
   3.403871476831417*^9, 3.403871589333577*^9, {3.403871732195695*^9, 
   3.4038719361371107`*^9}, 3.40387197021589*^9, {3.4038729130621176`*^9, 
   3.403872917359075*^9}, {3.4038732665532794`*^9, 3.4038732913350053`*^9}, {
   3.40387338716497*^9, 3.403873392790078*^9}, {3.4038739059561806`*^9, 
   3.403873929300379*^9}, {3.4038757265536356`*^9, 3.403875727100521*^9}, {
   3.4038760173873444`*^9, 3.403876028450057*^9}, {3.4038767128225718`*^9, 
   3.4038767355730085`*^9}, {3.403876883685227*^9, 3.403876894872942*^9}, 
   3.4038770811577682`*^9, {3.403877262489375*^9, 3.403877296927536*^9}, {
   3.4038779003609967`*^9, 3.4038779017516484`*^9}, {3.403877950330706*^9, 
   3.403877995722203*^9}, {3.4038805669746947`*^9, 3.4038805816156006`*^9}, {
   3.403940196949411*^9, 3.403940212309081*^9}, {3.4039402503098106`*^9, 
   3.403940330483225*^9}, {3.403940565097104*^9, 3.4039406320983906`*^9}, {
   3.4039477736886315`*^9, 3.4039478349866834`*^9}, 3.403947942238743*^9, {
   3.4039479736924715`*^9, 3.403948027771635*^9}, 3.403948162852353*^9, {
   3.4039491169487963`*^9, 3.4039491206988688`*^9}, {3.4039492631391034`*^9, 
   3.4039493470938406`*^9}, {3.4039496376931696`*^9, 3.403949723882324*^9}, {
   3.4039498424783516`*^9, 3.4039499998719983`*^9}, {3.404147952397335*^9, 
   3.404147980680135*^9}, {3.404148073983735*^9, 3.404148107492535*^9}, {
   3.404148258531735*^9, 3.4041482678605347`*^9}, {3.404148945009735*^9, 
   3.404148946164135*^9}, {3.4041489846337347`*^9, 3.404149017549735*^9}, {
   3.404149060200135*^9, 3.404149083178935*^9}, {3.404151307641535*^9, 
   3.404151309185935*^9}, {3.404151474499135*^9, 3.404151483219535*^9}, 
   3.404151568223935*^9, 3.4041938717523823`*^9, {3.404193912175033*^9, 
   3.404193917190755*^9}, {3.4042041069801445`*^9, 3.4042041521685123`*^9}, {
   3.4042042123415427`*^9, 3.4042042386076717`*^9}, {3.404204276624027*^9, 
   3.4042044284238167`*^9}, {3.40420452156623*^9, 3.4042045494573903`*^9}, {
   3.404204582895532*^9, 3.4042046181149583`*^9}, {3.404204788415103*^9, 
   3.4042048062748213`*^9}, {3.404204841759877*^9, 3.4042048723542147`*^9}, {
   3.404204936324193*^9, 3.4042052265172644`*^9}, {3.4042052790182724`*^9, 
   3.4042052894403477`*^9}, {3.404205340738208*^9, 3.4042053679418545`*^9}, {
   3.404205400817486*^9, 3.404205419677223*^9}, {3.4042054802252607`*^9, 
   3.404205497178711*^9}, 3.40420552863244*^9, {3.4042072185555105`*^9, 
   3.404207235243331*^9}, {3.4042169113197336`*^9, 3.404216925101248*^9}, {
   3.4043001505299344`*^9, 3.4043002016355343`*^9}, {3.4043234402889433`*^9, 
   3.4043234487441435`*^9}, {3.4043237751273437`*^9, 
   3.4043237822877436`*^9}, {3.404324132304144*^9, 3.4043241429121437`*^9}, {
   3.404324465254944*^9, 3.4043244826177435`*^9}, 3.404324753246544*^9, 
   3.404389086572344*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SymetrizedBiHestonVanillaIntegrand", "[", 
   RowBox[{
   "Y_", ",", "K_", ",", "\[Tau]_", ",", "\[CapitalSigma]_", ",", "M_", ",", 
    "Q_", ",", "\[Rho]_", ",", "\[Beta]_", ",", "\[Lambda]1_", ",", 
    "\[Lambda]2_", ",", "\[Omega]1_", ",", "\[Omega]2_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x1", "=", 
       RowBox[{"Y", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", 
      RowBox[{"x2", "=", 
       RowBox[{"Y", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ",", 
      RowBox[{"k1", "=", 
       RowBox[{"(", 
        RowBox[{"\[Omega]1", "+", 
         RowBox[{"\[ImaginaryI]", " ", "\[Lambda]1"}]}], ")"}]}], ",", 
      RowBox[{"Sk1", "=", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "\[Omega]1"}], "+", 
         RowBox[{"\[ImaginaryI]", " ", "\[Lambda]1"}]}], ")"}]}], ",", 
      RowBox[{"k2", "=", " ", 
       RowBox[{"(", 
        RowBox[{"\[Omega]2", "+", 
         RowBox[{"\[ImaginaryI]", " ", "\[Lambda]2"}]}], ")"}]}], ",", 
      RowBox[{"Sk2", "=", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "\[Omega]2"}], "+", 
         RowBox[{"\[ImaginaryI]", " ", "\[Lambda]2"}]}], ")"}]}], ",", 
      RowBox[{"Sk1A", "=", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "\[Omega]1"}], "+", 
         RowBox[{"\[ImaginaryI]", " ", "\[Lambda]1"}]}], ")"}]}], ",", 
      RowBox[{"k1A", "=", 
       RowBox[{"(", 
        RowBox[{"\[Omega]1", "-", 
         RowBox[{"\[ImaginaryI]", " ", "\[Lambda]1"}]}], ")"}]}], ",", 
      RowBox[{"k2A", "=", 
       RowBox[{"(", 
        RowBox[{"\[Omega]2", "-", 
         RowBox[{"\[ImaginaryI]", " ", "\[Lambda]2"}]}], ")"}]}], ",", 
      "\[Alpha]", ",", "\[Alpha]A", ",", "Sym\[Alpha]", ",", "Sym\[Alpha]A", 
      ",", "\[Alpha]2", ",", "\[Alpha]A2", ",", "Sym\[Alpha]2", ",", 
      "Sym\[Alpha]A2", ",", "propagatorDroit", ",", "SympropagatorDroit", ",",
       "propagatorGauche", ",", "SympropagatorGauche", ",", 
      "propagatorDroit2", ",", "SympropagatorDroit2", ",", 
      "propagatorGauche2", ",", "SympropagatorGauche2"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Re", "[", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"K", ">", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Alpha]", "=", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "x1", " ", "k1"}], "-", 
           RowBox[{"\[ImaginaryI]", " ", "x2", " ", "k2"}]}]]}], ";", 
        RowBox[{"\[Alpha]A", "=", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "x1", " ", "k1"}], "-", 
           RowBox[{"\[ImaginaryI]", " ", "x2", " ", "k2A"}]}]]}], ";", 
        RowBox[{"Sym\[Alpha]", "=", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "x1", " ", "Sk1"}], "-", 
           RowBox[{"\[ImaginaryI]", " ", "x2", " ", "k2"}]}]]}], ";", 
        RowBox[{"Sym\[Alpha]A", "=", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "x1", " ", "Sk1A"}], "-", 
           RowBox[{"\[ImaginaryI]", " ", "x2", " ", "k2A"}]}]]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"propagatorDroit", "=", 
         RowBox[{"BiHestonLaplaceQuickTransform", "[", 
          RowBox[{
          "M", ",", "Q", ",", "\[Rho]", ",", " ", "\[CapitalSigma]", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "k1"}], ",", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "k2"}]}], "}"}], ",", 
           "\[Beta]", ",", "\[Tau]"}], "]"}]}], ";", 
        RowBox[{"SympropagatorDroit", "=", 
         RowBox[{"BiHestonLaplaceQuickTransform", "[", 
          RowBox[{
          "M", ",", "Q", ",", "\[Rho]", ",", " ", "\[CapitalSigma]", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "Sk1"}], ",", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "k2"}]}], "}"}], ",", 
           "\[Beta]", ",", "\[Tau]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"propagatorGauche", "=", 
         RowBox[{"BiHestonLaplaceQuickTransform", "[", 
          RowBox[{
          "M", ",", "Q", ",", "\[Rho]", ",", " ", "\[CapitalSigma]", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "k1"}], ",", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "k2A"}]}], "}"}], ",", 
           "\[Beta]", ",", "\[Tau]"}], "]"}]}], ";", 
        RowBox[{"SympropagatorGauche", "=", 
         RowBox[{"BiHestonLaplaceQuickTransform", "[", 
          RowBox[{
          "M", ",", "Q", ",", "\[Rho]", ",", " ", "\[CapitalSigma]", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "Sk1A"}], ",", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "k2A"}]}], "}"}], ",", 
           "\[Beta]", ",", "\[Tau]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[Alpha]", " ", "propagatorDroit", " ", 
          RowBox[{"VanillaPayOffFourierDroite", "[", 
           RowBox[{"k1", ",", "k2", ",", "K"}], "]"}]}], "+", 
         "\[IndentingNewLine]", 
         RowBox[{"Sym\[Alpha]", " ", "SympropagatorDroit", " ", 
          RowBox[{"VanillaPayOffFourierDroite", "[", 
           RowBox[{"Sk1", ",", "k2", ",", "K"}], "]"}]}], "+", 
         "\[IndentingNewLine]", 
         RowBox[{"\[Alpha]A", " ", "propagatorGauche", " ", 
          RowBox[{"VanillaPayOffFourierGauche", "[", 
           RowBox[{"k1", ",", "k2A", ",", "K"}], "]"}]}], "+", 
         "\[IndentingNewLine]", 
         RowBox[{"Sym\[Alpha]A", " ", "SympropagatorGauche", " ", 
          RowBox[{"VanillaPayOffFourierGauche", "[", 
           RowBox[{"Sk1A", ",", "k2A", ",", "K"}], "]"}]}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"K", "<", "0"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"\[Alpha]2", "=", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "x2", " ", "k1"}], "-", 
             RowBox[{"\[ImaginaryI]", " ", "x1", " ", "k2"}]}]]}], ";", 
          RowBox[{"\[Alpha]A2", "=", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "x2", " ", "k1"}], "-", 
             RowBox[{"\[ImaginaryI]", " ", "x1", " ", "k2A"}]}]]}], ";", 
          RowBox[{"Sym\[Alpha]2", "=", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "x2", " ", "Sk1"}], "-", 
             RowBox[{"\[ImaginaryI]", " ", "x1", " ", "k2"}]}]]}], ";", 
          RowBox[{"Sym\[Alpha]A2", "=", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "x2", " ", "Sk1A"}], "-", 
             RowBox[{"\[ImaginaryI]", " ", "x1", " ", "k2A"}]}]]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"propagatorDroit2", "=", 
           RowBox[{"BiHestonLaplaceQuickTransformReverse", "[", 
            RowBox[{
            "M", ",", "Q", ",", "\[Rho]", ",", " ", "\[CapitalSigma]", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", "k1"}], ",", 
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", "k2"}]}], "}"}], ",", 
             "\[Beta]", ",", "\[Tau]"}], "]"}]}], ";", 
          RowBox[{"SympropagatorDroit2", "=", 
           RowBox[{"BiHestonLaplaceQuickTransformReverse", "[", 
            RowBox[{
            "M", ",", "Q", ",", "\[Rho]", ",", " ", "\[CapitalSigma]", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", "Sk1"}], ",", 
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", "k2"}]}], "}"}], ",", 
             "\[Beta]", ",", "\[Tau]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"propagatorGauche2", "=", 
           RowBox[{"BiHestonLaplaceQuickTransformReverse", "[", 
            RowBox[{
            "M", ",", "Q", ",", "\[Rho]", ",", " ", "\[CapitalSigma]", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", "k1"}], ",", 
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", "k2A"}]}], "}"}], ",", 
             "\[Beta]", ",", "\[Tau]"}], "]"}]}], ";", 
          RowBox[{"SympropagatorGauche2", "=", 
           RowBox[{"BiHestonLaplaceQuickTransformReverse", "[", 
            RowBox[{
            "M", ",", "Q", ",", "\[Rho]", ",", " ", "\[CapitalSigma]", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", "Sk1A"}], ",", 
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", "k2A"}]}], "}"}], ",", 
             "\[Beta]", ",", "\[Tau]"}], "]"}]}], ";", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Alpha]2", " ", 
              RowBox[{"(", 
               RowBox[{"propagatorDroit2", " ", 
                RowBox[{"(", 
                 RowBox[{"VanillaPayOffFourierDroite", "[", 
                  RowBox[{"k1", ",", "k2", ",", 
                   RowBox[{"-", "K"}]}], "]"}], ")"}]}], ")"}]}], "+", 
             RowBox[{"Sym\[Alpha]2", " ", 
              RowBox[{"(", 
               RowBox[{"SympropagatorDroit2", 
                RowBox[{"(", 
                 RowBox[{"VanillaPayOffFourierDroite", "[", 
                  RowBox[{"Sk1", ",", "k2", ",", 
                   RowBox[{"-", "K"}]}], "]"}], ")"}]}], ")"}]}]}], ")"}], 
           " ", "+", "\[IndentingNewLine]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Alpha]A2", " ", "propagatorGauche2", 
              RowBox[{"(", " ", 
               RowBox[{"VanillaPayOffFourierGauche", "[", 
                RowBox[{"k1", ",", "k2A", ",", 
                 RowBox[{"-", "K"}]}], "]"}], ")"}]}], "+", 
             RowBox[{"Sym\[Alpha]A2", " ", "SympropagatorGauche2", 
              RowBox[{"(", 
               RowBox[{"VanillaPayOffFourierGauche", "[", 
                RowBox[{"Sk1A", ",", "k2A", ",", 
                 RowBox[{"-", "K"}]}], "]"}], ")"}]}]}], ")"}]}]}], 
         "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"\[Alpha]", "=", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "x1", " ", "k1"}], "-", 
             RowBox[{"\[ImaginaryI]", " ", "x2", " ", "k2"}]}]]}], ";", 
          RowBox[{"\[Alpha]A", "=", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "x1", " ", "k1"}], "-", 
             RowBox[{"\[ImaginaryI]", " ", "x2", " ", "k2A"}]}]]}], ";", 
          RowBox[{"Sym\[Alpha]", "=", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "x1", " ", "Sk1"}], "-", 
             RowBox[{"\[ImaginaryI]", " ", "x2", " ", "k2"}]}]]}], ";", 
          RowBox[{"Sym\[Alpha]A", "=", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "x1", " ", "Sk1A"}], "-", 
             RowBox[{"\[ImaginaryI]", " ", "x2", " ", "k2A"}]}]]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"propagatorDroit", "=", 
           RowBox[{"BiHestonLaplaceQuickTransform", "[", 
            RowBox[{
            "M", ",", "Q", ",", "\[Rho]", ",", " ", "\[CapitalSigma]", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", "k1"}], ",", 
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", "k2"}]}], "}"}], ",", 
             "\[Beta]", ",", "\[Tau]"}], "]"}]}], ";", 
          RowBox[{"SympropagatorDroit", "=", 
           RowBox[{"BiHestonLaplaceQuickTransform", "[", 
            RowBox[{
            "M", ",", "Q", ",", "\[Rho]", ",", " ", "\[CapitalSigma]", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", "Sk1"}], ",", 
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", "k2"}]}], "}"}], ",", 
             "\[Beta]", ",", "\[Tau]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"propagatorGauche", "=", 
           RowBox[{"BiHestonLaplaceQuickTransform", "[", 
            RowBox[{
            "M", ",", "Q", ",", "\[Rho]", ",", " ", "\[CapitalSigma]", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", "k1"}], ",", 
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", "k2A"}]}], "}"}], ",", 
             "\[Beta]", ",", "\[Tau]"}], "]"}]}], ";", 
          RowBox[{"SympropagatorGauche", "=", 
           RowBox[{"BiHestonLaplaceQuickTransform", "[", 
            RowBox[{
            "M", ",", "Q", ",", "\[Rho]", ",", " ", "\[CapitalSigma]", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", "Sk1A"}], ",", 
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", "k2A"}]}], "}"}], ",", 
             "\[Beta]", ",", "\[Tau]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"\[Alpha]", " ", "propagatorDroit", " ", 
            RowBox[{"VanillaPayOffFourierDroite", "[", 
             RowBox[{"k1", ",", "k2"}], "]"}]}], "+", "\[IndentingNewLine]", 
           RowBox[{"Sym\[Alpha]", " ", "SympropagatorDroit", " ", 
            RowBox[{"VanillaPayOffFourierDroite", "[", 
             RowBox[{"Sk1", ",", "k2"}], "]"}]}], "+", "\[IndentingNewLine]", 
           RowBox[{"\[Alpha]A", " ", "propagatorGauche", " ", 
            RowBox[{"VanillaPayOffFourierGauche", "[", 
             RowBox[{"k1", ",", "k2A"}], "]"}]}], "+", "\[IndentingNewLine]", 
           RowBox[{"Sym\[Alpha]A", " ", "SympropagatorGauche", " ", 
            RowBox[{"VanillaPayOffFourierGauche", "[", 
             RowBox[{"Sk1", ",", "k2A"}], "]"}]}]}]}]}], "]"}]}], "]"}], 
     "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.402140085770051*^9, 3.4021400863013115`*^9}, {
   3.4021401238489075`*^9, 3.4021402363666925`*^9}, {3.402140267929798*^9, 
   3.402140316290102*^9}, {3.4021403621347322`*^9, 3.4021403798069468`*^9}, {
   3.402140442948784*^9, 3.4021404698243*^9}, {3.40214052530974*^9, 
   3.4021405261847568`*^9}, {3.402140572076263*^9, 3.4021405730294065`*^9}, {
   3.40214283290092*^9, 3.402142834900958*^9}, 3.402142878995555*^9, {
   3.4021429531532288`*^9, 3.40214297455989*^9}, {3.4021430512488623`*^9, 
   3.4021430865307894`*^9}, {3.402143143625636*^9, 3.4021431463288126`*^9}, {
   3.402143222267771*^9, 3.402143365629898*^9}, {3.4021439797510643`*^9, 
   3.4021440141579747`*^9}, {3.4021444783543873`*^9, 
   3.4021445164332433`*^9}, {3.4021445469025784`*^9, 3.402144574918741*^9}, {
   3.4021446846239724`*^9, 3.4021446895459423`*^9}, {3.4021447226559525`*^9, 
   3.402144729593586*^9}, {3.402144860127342*^9, 3.402144926378614*^9}, {
   3.4021449572542067`*^9, 3.402145180727247*^9}, {3.402149153412896*^9, 
   3.4021491595067635`*^9}, {3.4021496964233217`*^9, 3.402149821410097*^9}, {
   3.40214987416111*^9, 3.402149884755063*^9}, {3.4021499394279876`*^9, 
   3.4021499498344374`*^9}, {3.402150065133526*^9, 3.402150121790864*^9}, {
   3.4021501655260787`*^9, 3.4021502014486437`*^9}, {3.402150388827241*^9, 
   3.4021504643911915`*^9}, {3.4021505016731577`*^9, 3.402150539877016*^9}, {
   3.402150576221464*^9, 3.4021506145190744`*^9}, 3.402150646160307*^9, {
   3.4021507013801165`*^9, 3.402150701614496*^9}, {3.402150792022482*^9, 
   3.4021508226011944`*^9}, {3.4022048852154446`*^9, 
   3.4022049314194565`*^9}, {3.402223441649846*^9, 3.4022234739004655`*^9}, {
   3.4022235664178667`*^9, 3.4022235977934694`*^9}, {3.402225770632062*^9, 
   3.4022257810853877`*^9}, {3.4022260066522183`*^9, 
   3.4022260340902452`*^9}, {3.402227989127781*^9, 3.4022280025967894`*^9}, 
   3.4022280710668545`*^9, {3.4022281624279833`*^9, 3.4022281629904943`*^9}, {
   3.4023193135668306`*^9, 3.4023194603141108`*^9}, {3.402319603150462*^9, 
   3.40231966787294*^9}, {3.4023197252970443`*^9, 3.4023197324378977`*^9}, {
   3.4023205583495092`*^9, 3.4023206749454975`*^9}, {3.4023207399779963`*^9, 
   3.4023207413373976`*^9}, {3.4023208249015017`*^9, 
   3.4023209920765867`*^9}, {3.4023211800958214`*^9, 3.40232123755005*^9}, {
   3.4023216909806304`*^9, 3.4023216975588818`*^9}, {3.402321742184738*^9, 
   3.4023217427316236`*^9}, {3.4023247260232773`*^9, 
   3.4023248331659594`*^9}, {3.4023253919266872`*^9, 
   3.4023255075695324`*^9}, {3.40237831846457*^9, 3.4023783246678143`*^9}, {
   3.4041932487247953`*^9, 3.4041932623344316`*^9}, {3.40419333647648*^9, 
   3.4041933710083933`*^9}, {3.4041937125305753`*^9, 3.404193749953169*^9}, {
   3.4043002135695343`*^9, 3.4043002231947346`*^9}}],

Cell["\<\
In SymetrizedBiHestonVanillaIntegrand2,  \[Beta]m  is a matrix\
\>", "Text",
 CellChangeTimes->{{3.404216660080535*^9, 3.404216678596515*^9}, {
  3.4043244170353436`*^9, 3.4043244181585436`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SymetrizedBiHestonVanillaIntegrand2", "[", 
   RowBox[{
   "Y_", ",", "K_", ",", "\[Tau]_", ",", "\[CapitalSigma]_", ",", "M_", ",", 
    "Q_", ",", "\[Rho]_", ",", "\[Beta]m_", ",", "\[Lambda]1_", ",", 
    "\[Lambda]2_", ",", "\[Omega]1_", ",", "\[Omega]2_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x1", "=", 
       RowBox[{"Y", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", 
      RowBox[{"x2", "=", 
       RowBox[{"Y", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ",", 
      RowBox[{"k1", "=", 
       RowBox[{"(", 
        RowBox[{"\[Omega]1", "+", 
         RowBox[{"\[ImaginaryI]", " ", "\[Lambda]1"}]}], ")"}]}], ",", 
      RowBox[{"Sk1", "=", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "\[Omega]1"}], "+", 
         RowBox[{"\[ImaginaryI]", " ", "\[Lambda]1"}]}], ")"}]}], ",", 
      RowBox[{"k2", "=", " ", 
       RowBox[{"(", 
        RowBox[{"\[Omega]2", "+", 
         RowBox[{"\[ImaginaryI]", " ", "\[Lambda]2"}]}], ")"}]}], ",", 
      RowBox[{"Sk2", "=", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "\[Omega]2"}], "+", 
         RowBox[{"\[ImaginaryI]", " ", "\[Lambda]2"}]}], ")"}]}], ",", 
      RowBox[{"Sk1A", "=", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "\[Omega]1"}], "+", 
         RowBox[{"\[ImaginaryI]", " ", "\[Lambda]1"}]}], ")"}]}], ",", 
      RowBox[{"k1A", "=", 
       RowBox[{"(", 
        RowBox[{"\[Omega]1", "-", 
         RowBox[{"\[ImaginaryI]", " ", "\[Lambda]1"}]}], ")"}]}], ",", 
      RowBox[{"k2A", "=", 
       RowBox[{"(", 
        RowBox[{"\[Omega]2", "-", 
         RowBox[{"\[ImaginaryI]", " ", "\[Lambda]2"}]}], ")"}]}], ",", 
      "\[Alpha]", ",", "\[Alpha]A", ",", "Sym\[Alpha]", ",", "Sym\[Alpha]A", 
      ",", "\[Alpha]2", ",", "\[Alpha]A2", ",", "Sym\[Alpha]2", ",", 
      "Sym\[Alpha]A2", ",", "propagatorDroit", ",", "SympropagatorDroit", ",",
       "propagatorGauche", ",", "SympropagatorGauche", ",", 
      "propagatorDroit2", ",", "SympropagatorDroit2", ",", 
      "propagatorGauche2", ",", "SympropagatorGauche2"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Re", "[", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"K", ">", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Alpha]", "=", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "x1", " ", "k1"}], "-", 
           RowBox[{"\[ImaginaryI]", " ", "x2", " ", "k2"}]}]]}], ";", 
        RowBox[{"\[Alpha]A", "=", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "x1", " ", "k1"}], "-", 
           RowBox[{"\[ImaginaryI]", " ", "x2", " ", "k2A"}]}]]}], ";", 
        RowBox[{"Sym\[Alpha]", "=", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "x1", " ", "Sk1"}], "-", 
           RowBox[{"\[ImaginaryI]", " ", "x2", " ", "k2"}]}]]}], ";", 
        RowBox[{"Sym\[Alpha]A", "=", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "x1", " ", "Sk1A"}], "-", 
           RowBox[{"\[ImaginaryI]", " ", "x2", " ", "k2A"}]}]]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"propagatorDroit", "=", 
         RowBox[{"BiHestonLaplaceQuickTransform2", "[", 
          RowBox[{
          "M", ",", "Q", ",", "\[Rho]", ",", " ", "\[CapitalSigma]", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "k1"}], ",", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "k2"}]}], "}"}], ",", 
           "\[Beta]m", ",", "\[Tau]"}], "]"}]}], ";", 
        RowBox[{"SympropagatorDroit", "=", 
         RowBox[{"BiHestonLaplaceQuickTransform2", "[", 
          RowBox[{
          "M", ",", "Q", ",", "\[Rho]", ",", " ", "\[CapitalSigma]", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "Sk1"}], ",", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "k2"}]}], "}"}], ",", 
           "\[Beta]m", ",", "\[Tau]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"propagatorGauche", "=", 
         RowBox[{"BiHestonLaplaceQuickTransform2", "[", 
          RowBox[{
          "M", ",", "Q", ",", "\[Rho]", ",", " ", "\[CapitalSigma]", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "k1"}], ",", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "k2A"}]}], "}"}], ",", 
           "\[Beta]m", ",", "\[Tau]"}], "]"}]}], ";", 
        RowBox[{"SympropagatorGauche", "=", 
         RowBox[{"BiHestonLaplaceQuickTransform2", "[", 
          RowBox[{
          "M", ",", "Q", ",", "\[Rho]", ",", " ", "\[CapitalSigma]", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "Sk1A"}], ",", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "k2A"}]}], "}"}], ",", 
           "\[Beta]m", ",", "\[Tau]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[Alpha]", " ", "propagatorDroit", " ", 
          RowBox[{"VanillaPayOffFourierDroite", "[", 
           RowBox[{"k1", ",", "k2", ",", "K"}], "]"}]}], "+", 
         "\[IndentingNewLine]", 
         RowBox[{"Sym\[Alpha]", " ", "SympropagatorDroit", " ", 
          RowBox[{"VanillaPayOffFourierDroite", "[", 
           RowBox[{"Sk1", ",", "k2", ",", "K"}], "]"}]}], "+", 
         "\[IndentingNewLine]", 
         RowBox[{"\[Alpha]A", " ", "propagatorGauche", " ", 
          RowBox[{"VanillaPayOffFourierGauche", "[", 
           RowBox[{"k1", ",", "k2A", ",", "K"}], "]"}]}], "+", 
         "\[IndentingNewLine]", 
         RowBox[{"Sym\[Alpha]A", " ", "SympropagatorGauche", " ", 
          RowBox[{"VanillaPayOffFourierGauche", "[", 
           RowBox[{"Sk1A", ",", "k2A", ",", "K"}], "]"}]}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"K", "<", "0"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"\[Alpha]2", "=", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "x2", " ", "k1"}], "-", 
             RowBox[{"\[ImaginaryI]", " ", "x1", " ", "k2"}]}]]}], ";", 
          RowBox[{"\[Alpha]A2", "=", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "x2", " ", "k1"}], "-", 
             RowBox[{"\[ImaginaryI]", " ", "x1", " ", "k2A"}]}]]}], ";", 
          RowBox[{"Sym\[Alpha]2", "=", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "x2", " ", "Sk1"}], "-", 
             RowBox[{"\[ImaginaryI]", " ", "x1", " ", "k2"}]}]]}], ";", 
          RowBox[{"Sym\[Alpha]A2", "=", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "x2", " ", "Sk1A"}], "-", 
             RowBox[{"\[ImaginaryI]", " ", "x1", " ", "k2A"}]}]]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"propagatorDroit2", "=", 
           RowBox[{"BiHestonLaplaceQuickTransformReverse2", "[", 
            RowBox[{
            "M", ",", "Q", ",", "\[Rho]", ",", " ", "\[CapitalSigma]", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", "k1"}], ",", 
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", "k2"}]}], "}"}], ",", 
             "\[Beta]m", ",", "\[Tau]"}], "]"}]}], ";", 
          RowBox[{"SympropagatorDroit2", "=", 
           RowBox[{"BiHestonLaplaceQuickTransformReverse2", "[", 
            RowBox[{
            "M", ",", "Q", ",", "\[Rho]", ",", " ", "\[CapitalSigma]", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", "Sk1"}], ",", 
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", "k2"}]}], "}"}], ",", 
             "\[Beta]m", ",", "\[Tau]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"propagatorGauche2", "=", 
           RowBox[{"BiHestonLaplaceQuickTransformReverse2", "[", 
            RowBox[{
            "M", ",", "Q", ",", "\[Rho]", ",", " ", "\[CapitalSigma]", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", "k1"}], ",", 
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", "k2A"}]}], "}"}], ",", 
             "\[Beta]m", ",", "\[Tau]"}], "]"}]}], ";", 
          RowBox[{"SympropagatorGauche2", "=", 
           RowBox[{"BiHestonLaplaceQuickTransformReverse2", "[", 
            RowBox[{
            "M", ",", "Q", ",", "\[Rho]", ",", " ", "\[CapitalSigma]", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", "Sk1A"}], ",", 
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", "k2A"}]}], "}"}], ",", 
             "\[Beta]m", ",", "\[Tau]"}], "]"}]}], ";", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Alpha]2", " ", 
              RowBox[{"(", 
               RowBox[{"propagatorDroit2", " ", 
                RowBox[{"(", 
                 RowBox[{"VanillaPayOffFourierDroite", "[", 
                  RowBox[{"k1", ",", "k2", ",", 
                   RowBox[{"-", "K"}]}], "]"}], ")"}]}], ")"}]}], "+", 
             RowBox[{"Sym\[Alpha]2", " ", 
              RowBox[{"(", 
               RowBox[{"SympropagatorDroit2", 
                RowBox[{"(", 
                 RowBox[{"VanillaPayOffFourierDroite", "[", 
                  RowBox[{"Sk1", ",", "k2", ",", 
                   RowBox[{"-", "K"}]}], "]"}], ")"}]}], ")"}]}]}], ")"}], 
           " ", "+", "\[IndentingNewLine]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Alpha]A2", " ", "propagatorGauche2", 
              RowBox[{"(", " ", 
               RowBox[{"VanillaPayOffFourierGauche", "[", 
                RowBox[{"k1", ",", "k2A", ",", 
                 RowBox[{"-", "K"}]}], "]"}], ")"}]}], "+", 
             RowBox[{"Sym\[Alpha]A2", " ", "SympropagatorGauche2", 
              RowBox[{"(", 
               RowBox[{"VanillaPayOffFourierGauche", "[", 
                RowBox[{"Sk1A", ",", "k2A", ",", 
                 RowBox[{"-", "K"}]}], "]"}], ")"}]}]}], ")"}]}]}], 
         "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"\[Alpha]", "=", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "x1", " ", "k1"}], "-", 
             RowBox[{"\[ImaginaryI]", " ", "x2", " ", "k2"}]}]]}], ";", 
          RowBox[{"\[Alpha]A", "=", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "x1", " ", "k1"}], "-", 
             RowBox[{"\[ImaginaryI]", " ", "x2", " ", "k2A"}]}]]}], ";", 
          RowBox[{"Sym\[Alpha]", "=", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "x1", " ", "Sk1"}], "-", 
             RowBox[{"\[ImaginaryI]", " ", "x2", " ", "k2"}]}]]}], ";", 
          RowBox[{"Sym\[Alpha]A", "=", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "x1", " ", "Sk1A"}], "-", 
             RowBox[{"\[ImaginaryI]", " ", "x2", " ", "k2A"}]}]]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"propagatorDroit", "=", 
           RowBox[{"BiHestonLaplaceQuickTransform2", "[", 
            RowBox[{
            "M", ",", "Q", ",", "\[Rho]", ",", " ", "\[CapitalSigma]", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", "k1"}], ",", 
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", "k2"}]}], "}"}], ",", 
             "\[Beta]m", ",", "\[Tau]"}], "]"}]}], ";", 
          RowBox[{"SympropagatorDroit", "=", 
           RowBox[{"BiHestonLaplaceQuickTransform2", "[", 
            RowBox[{
            "M", ",", "Q", ",", "\[Rho]", ",", " ", "\[CapitalSigma]", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", "Sk1"}], ",", 
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", "k2"}]}], "}"}], ",", 
             "\[Beta]m", ",", "\[Tau]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"propagatorGauche", "=", 
           RowBox[{"BiHestonLaplaceQuickTransform2", "[", 
            RowBox[{
            "M", ",", "Q", ",", "\[Rho]", ",", " ", "\[CapitalSigma]", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", "k1"}], ",", 
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", "k2A"}]}], "}"}], ",", 
             "\[Beta]m", ",", "\[Tau]"}], "]"}]}], ";", 
          RowBox[{"SympropagatorGauche", "=", 
           RowBox[{"BiHestonLaplaceQuickTransform2", "[", 
            RowBox[{
            "M", ",", "Q", ",", "\[Rho]", ",", " ", "\[CapitalSigma]", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", "Sk1A"}], ",", 
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", "k2A"}]}], "}"}], ",", 
             "\[Beta]m", ",", "\[Tau]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"\[Alpha]", " ", "propagatorDroit", " ", 
            RowBox[{"VanillaPayOffFourierDroite", "[", 
             RowBox[{"k1", ",", "k2"}], "]"}]}], "+", "\[IndentingNewLine]", 
           RowBox[{"Sym\[Alpha]", " ", "SympropagatorDroit", " ", 
            RowBox[{"VanillaPayOffFourierDroite", "[", 
             RowBox[{"Sk1", ",", "k2"}], "]"}]}], "+", "\[IndentingNewLine]", 
           RowBox[{"\[Alpha]A", " ", "propagatorGauche", " ", 
            RowBox[{"VanillaPayOffFourierGauche", "[", 
             RowBox[{"k1", ",", "k2A"}], "]"}]}], "+", "\[IndentingNewLine]", 
           RowBox[{"Sym\[Alpha]A", " ", "SympropagatorGauche", " ", 
            RowBox[{"VanillaPayOffFourierGauche", "[", 
             RowBox[{"Sk1", ",", "k2A"}], "]"}]}]}]}]}], "]"}]}], "]"}], 
     "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.402140085770051*^9, 3.4021400863013115`*^9}, {
   3.4021401238489075`*^9, 3.4021402363666925`*^9}, {3.402140267929798*^9, 
   3.402140316290102*^9}, {3.4021403621347322`*^9, 3.4021403798069468`*^9}, {
   3.402140442948784*^9, 3.4021404698243*^9}, {3.40214052530974*^9, 
   3.4021405261847568`*^9}, {3.402140572076263*^9, 3.4021405730294065`*^9}, {
   3.40214283290092*^9, 3.402142834900958*^9}, 3.402142878995555*^9, {
   3.4021429531532288`*^9, 3.40214297455989*^9}, {3.4021430512488623`*^9, 
   3.4021430865307894`*^9}, {3.402143143625636*^9, 3.4021431463288126`*^9}, {
   3.402143222267771*^9, 3.402143365629898*^9}, {3.4021439797510643`*^9, 
   3.4021440141579747`*^9}, {3.4021444783543873`*^9, 
   3.4021445164332433`*^9}, {3.4021445469025784`*^9, 3.402144574918741*^9}, {
   3.4021446846239724`*^9, 3.4021446895459423`*^9}, {3.4021447226559525`*^9, 
   3.402144729593586*^9}, {3.402144860127342*^9, 3.402144926378614*^9}, {
   3.4021449572542067`*^9, 3.402145180727247*^9}, {3.402149153412896*^9, 
   3.4021491595067635`*^9}, {3.4021496964233217`*^9, 3.402149821410097*^9}, {
   3.40214987416111*^9, 3.402149884755063*^9}, {3.4021499394279876`*^9, 
   3.4021499498344374`*^9}, {3.402150065133526*^9, 3.402150121790864*^9}, {
   3.4021501655260787`*^9, 3.4021502014486437`*^9}, {3.402150388827241*^9, 
   3.4021504643911915`*^9}, {3.4021505016731577`*^9, 3.402150539877016*^9}, {
   3.402150576221464*^9, 3.4021506145190744`*^9}, 3.402150646160307*^9, {
   3.4021507013801165`*^9, 3.402150701614496*^9}, {3.402150792022482*^9, 
   3.4021508226011944`*^9}, {3.4022048852154446`*^9, 
   3.4022049314194565`*^9}, {3.402223441649846*^9, 3.4022234739004655`*^9}, {
   3.4022235664178667`*^9, 3.4022235977934694`*^9}, {3.402225770632062*^9, 
   3.4022257810853877`*^9}, {3.4022260066522183`*^9, 
   3.4022260340902452`*^9}, {3.402227989127781*^9, 3.4022280025967894`*^9}, 
   3.4022280710668545`*^9, {3.4022281624279833`*^9, 3.4022281629904943`*^9}, {
   3.4023193135668306`*^9, 3.4023194603141108`*^9}, {3.402319603150462*^9, 
   3.40231966787294*^9}, {3.4023197252970443`*^9, 3.4023197324378977`*^9}, {
   3.4023205583495092`*^9, 3.4023206749454975`*^9}, {3.4023207399779963`*^9, 
   3.4023207413373976`*^9}, {3.4023208249015017`*^9, 
   3.4023209920765867`*^9}, {3.4023211800958214`*^9, 3.40232123755005*^9}, {
   3.4023216909806304`*^9, 3.4023216975588818`*^9}, {3.402321742184738*^9, 
   3.4023217427316236`*^9}, {3.4023247260232773`*^9, 
   3.4023248331659594`*^9}, {3.4023253919266872`*^9, 
   3.4023255075695324`*^9}, {3.40237831846457*^9, 3.4023783246678143`*^9}, {
   3.4041932487247953`*^9, 3.4041932623344316`*^9}, {3.40419333647648*^9, 
   3.4041933710083933`*^9}, {3.4041937125305753`*^9, 3.404193749953169*^9}, 
   3.4042166550179377`*^9, {3.4042167133471823`*^9, 3.4042167289099813`*^9}, {
   3.404217748663935*^9, 3.404217760742292*^9}, {3.404300251181134*^9, 
   3.4043002603695345`*^9}, {3.4043244217933435`*^9, 3.4043244467845435`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BiHestonLaplaceQuickTransform", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"M11_", ",", "M12_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"M21_", ",", "M22_"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Q11_", ",", "Q12_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Q21_", ",", "Q22_"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Rho]1_", ",", "\[Rho]2_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[CapitalSigma]11_", ",", "\[CapitalSigma]12_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[CapitalSigma]21_", ",", "\[CapitalSigma]22_"}], "}"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Gamma]1_", ",", "\[Gamma]2_"}], "}"}], ",", "\[Beta]_", ",", 
    "\[Tau]_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"EXPH", "=", 
       RowBox[{"MatrixExp", "[", 
        RowBox[{"\[Tau]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "M11"}], "-", 
                RowBox[{"Q11", " ", "\[Gamma]1", " ", "\[Rho]1"}], "-", 
                RowBox[{"Q21", " ", "\[Gamma]1", " ", "\[Rho]2"}]}], ")"}]}], 
             ",", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "M12"}], "-", 
                RowBox[{"Q11", " ", "\[Gamma]2", " ", "\[Rho]1"}], "-", 
                RowBox[{"Q21", " ", "\[Gamma]2", " ", "\[Rho]2"}]}], ")"}]}], 
             ",", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 SuperscriptBox["Q11", "2"]}], "-", 
                SuperscriptBox["Q21", "2"]}], ")"}]}], ",", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "Q11"}], " ", "Q12"}], "-", 
                RowBox[{"Q21", " ", "Q22"}]}], ")"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "M21"}], "-", 
                RowBox[{"Q12", " ", "\[Gamma]1", " ", "\[Rho]1"}], "-", 
                RowBox[{"Q22", " ", "\[Gamma]1", " ", "\[Rho]2"}]}], ")"}]}], 
             ",", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "M22"}], "-", 
                RowBox[{"Q12", " ", "\[Gamma]2", " ", "\[Rho]1"}], "-", 
                RowBox[{"Q22", " ", "\[Gamma]2", " ", "\[Rho]2"}]}], ")"}]}], 
             ",", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "Q11"}], " ", "Q12"}], "-", 
                RowBox[{"Q21", " ", "Q22"}]}], ")"}]}], ",", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 SuperscriptBox["Q12", "2"]}], "-", 
                SuperscriptBox["Q22", "2"]}], ")"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Gamma]1"}], ")"}], " ", 
              "\[Gamma]1"}], ",", 
             FractionBox[
              RowBox[{"\[Gamma]1", " ", "\[Gamma]2"}], "2"], ",", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{"M11", "+", 
                RowBox[{"Q11", " ", "\[Gamma]1", " ", "\[Rho]1"}], "+", 
                RowBox[{"Q21", " ", "\[Gamma]1", " ", "\[Rho]2"}]}], ")"}]}], 
             ",", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{"M21", "+", 
                RowBox[{"Q12", " ", "\[Gamma]1", " ", "\[Rho]1"}], "+", 
                RowBox[{"Q22", " ", "\[Gamma]1", " ", "\[Rho]2"}]}], 
               ")"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             FractionBox[
              RowBox[{"\[Gamma]1", " ", "\[Gamma]2"}], "2"], ",", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Gamma]2"}], ")"}], " ", 
              "\[Gamma]2"}], ",", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{"M12", "+", 
                RowBox[{"Q11", " ", "\[Gamma]2", " ", "\[Rho]1"}], "+", 
                RowBox[{"Q21", " ", "\[Gamma]2", " ", "\[Rho]2"}]}], ")"}]}], 
             ",", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{"M22", "+", 
                RowBox[{"Q12", " ", "\[Gamma]2", " ", "\[Rho]1"}], "+", 
                RowBox[{"Q22", " ", "\[Gamma]2", " ", "\[Rho]2"}]}], 
               ")"}]}]}], "}"}]}], "}"}]}], "]"}]}], ",", "\[Delta]"}], "}"}],
     ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Delta]", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"EXPH", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "2"}], "]"}], "]"}]}], " ", 
        RowBox[{"EXPH", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"EXPH", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", 
        RowBox[{"EXPH", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "2"}], "]"}], "]"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{
        FractionBox["1", "\[Delta]"], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "2"}], "]"}], "]"}], " ", 
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"3", ",", "1"}], "]"}], "]"}], " ", 
           "\[CapitalSigma]11"}], "-", 
          RowBox[{
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "2"}], "]"}], "]"}], " ", 
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"4", ",", "1"}], "]"}], "]"}], " ", 
           "\[CapitalSigma]11"}], "-", 
          RowBox[{
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "1"}], "]"}], "]"}], " ", 
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"3", ",", "1"}], "]"}], "]"}], " ", 
           "\[CapitalSigma]12"}], "+", 
          RowBox[{
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "2"}], "]"}], "]"}], " ", 
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"3", ",", "2"}], "]"}], "]"}], " ", 
           "\[CapitalSigma]12"}], "+", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", 
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"4", ",", "1"}], "]"}], "]"}], " ", 
           "\[CapitalSigma]12"}], "-", 
          RowBox[{
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "2"}], "]"}], "]"}], " ", 
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"4", ",", "2"}], "]"}], "]"}], " ", 
           "\[CapitalSigma]12"}], "-", 
          RowBox[{
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "1"}], "]"}], "]"}], " ", 
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"3", ",", "2"}], "]"}], "]"}], " ", 
           "\[CapitalSigma]22"}], "+", 
          RowBox[{
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", 
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"4", ",", "2"}], "]"}], "]"}], " ", 
           "\[CapitalSigma]22"}]}], ")"}]}], "-", 
       RowBox[{"2", 
        SuperscriptBox["\[Beta]", "2"], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Log", "[", "\[Delta]", "]"}], "+", 
          RowBox[{
           FractionBox["\[Tau]", "2"], 
           RowBox[{"(", " ", 
            RowBox[{"M11", "+", "M22", "+", 
             RowBox[{"Q11", " ", "\[Gamma]1", " ", "\[Rho]1"}], "+", 
             RowBox[{"Q12", " ", "\[Gamma]2", " ", "\[Rho]1"}], "+", 
             RowBox[{"Q21", " ", "\[Gamma]1", " ", "\[Rho]2"}], "+", 
             RowBox[{"Q22", " ", "\[Gamma]2", " ", "\[Rho]2"}]}], ")"}]}]}], 
         ")"}]}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.398689746086896*^9, 3.39868976571579*^9}, {
   3.398690925586488*^9, 3.3986910907286205`*^9}, {3.398691590593399*^9, 
   3.3986916004234734`*^9}, {3.398692032962397*^9, 3.39869209364631*^9}, {
   3.3986925101195464`*^9, 3.398692518433696*^9}, {3.3986951810712333`*^9, 
   3.398695325084175*^9}, {3.3986953610600605`*^9, 3.3986954393099575`*^9}, {
   3.3986965831453133`*^9, 3.3986966039671736`*^9}, {3.398696639308217*^9, 
   3.3986966879654016`*^9}, {3.3986967213097916`*^9, 
   3.3986967248567348`*^9}, {3.398696770904494*^9, 3.398696889344268*^9}, {
   3.3986970007620354`*^9, 3.3986970489713306`*^9}, {3.3986974823842573`*^9, 
   3.398697532752773*^9}, {3.3987529399727573`*^9, 3.39875299455193*^9}, {
   3.398753037990264*^9, 3.398753063678257*^9}, {3.3987531523205843`*^9, 
   3.3987532912763767`*^9}, {3.3987533420586023`*^9, 
   3.3987534255914555`*^9}, {3.3987534717642174`*^9, 
   3.3987535094368153`*^9}, {3.3987770283161182`*^9, 3.398777119911627*^9}, {
   3.398777173522031*^9, 3.398777249148483*^9}, {3.3990283070466003`*^9, 
   3.399028307655995*^9}, {3.399028744357469*^9, 3.399028747638824*^9}, {
   3.3993525960192556`*^9, 3.39935261708216*^9}, {3.3993530399027777`*^9, 
   3.399353055590579*^9}, 3.3993531000289326`*^9, {3.39935333325216*^9, 
   3.3993533979565277`*^9}, 3.3993534714110627`*^9, {3.399353504239818*^9, 
   3.399353526130863*^9}, 3.399353619663909*^9, {3.3993538043237047`*^9, 
   3.399353861434176*^9}, {3.3993540798758698`*^9, 3.399354117782848*^9}, {
   3.3993543213648815`*^9, 3.399354332724475*^9}, {3.3993544810085716`*^9, 
   3.399354488368088*^9}, 3.39935480565543*^9, 3.3993552721487613`*^9, {
   3.3993666542422934`*^9, 3.3993667471347017`*^9}, {3.39936684574597*^9, 
   3.399366860105621*^9}, {3.3993675282121983`*^9, 3.3993675314310102`*^9}, 
   3.399609417953703*^9, {3.3996423849276905`*^9, 3.399642397068549*^9}, {
   3.3996424279285164`*^9, 3.3996424822108088`*^9}, {3.399703313058091*^9, 
   3.3997033979815965`*^9}, {3.3997034597952833`*^9, 3.399703478998777*^9}, {
   3.3997101596895437`*^9, 3.399710194955846*^9}, {3.399710680543294*^9, 
   3.399710729044225*^9}, 3.3997107627323723`*^9, {3.3997108923442354`*^9, 
   3.3997108934692574`*^9}, {3.3997181401396403`*^9, 3.399718148483551*^9}, {
   3.3997182570481353`*^9, 3.399718312096067*^9}, {3.399718413160507*^9, 
   3.39971842398884*^9}, {3.3997185011465716`*^9, 3.3997185329909334`*^9}, {
   3.3997185745698566`*^9, 3.399718598664069*^9}, {3.39972065528168*^9, 
   3.39972071751725*^9}, {3.3997232187840233`*^9, 3.399723233643684*^9}, {
   3.3997234000531287`*^9, 3.3997234005687637`*^9}, {3.400407907714303*^9, 
   3.400407915261323*^9}, {3.4004155917680845`*^9, 3.400415629628186*^9}, {
   3.4005721179416647`*^9, 3.4005721419890013`*^9}, {3.4005721760052795`*^9, 
   3.4005721845835695`*^9}, {3.4005722273656406`*^9, 
   3.4005722379752197`*^9}, {3.400572305273387*^9, 3.400572337055247*^9}, {
   3.400816614783207*^9, 3.4008166155332212`*^9}, 3.402032114347872*^9, {
   3.402205513305629*^9, 3.402205553790781*^9}, {3.4022056337298155`*^9, 
   3.402205666777325*^9}, {3.402206142427082*^9, 3.4022061429427176`*^9}, 
   3.4022063420090394`*^9, {3.4022063922287536`*^9, 3.4022064283700724`*^9}, {
   3.4022066940001726`*^9, 3.40220669985966*^9}, {3.402206778392418*^9, 
   3.402206820533852*^9}, {3.4022072688549595`*^9, 3.402207376513276*^9}, {
   3.402207470921339*^9, 3.402207504265729*^9}, {3.4022075400945425`*^9, 
   3.4022077664113874`*^9}, {3.402208049729327*^9, 3.4022080663702717`*^9}, {
   3.402208128355837*^9, 3.402208177075522*^9}, {3.4022082700304317`*^9, 
   3.4022083228439455`*^9}, 3.402208385767029*^9, 3.4022084313304033`*^9, 
   3.4022084987535734`*^9, {3.4022085325667224`*^9, 3.402208610474468*^9}, {
   3.402208698179277*^9, 3.402208738242546*^9}, 3.4022087894622793`*^9, {
   3.4022088244473267`*^9, 3.4022088560729337`*^9}, {3.402208910808359*^9, 
   3.4022089956537385`*^9}, {3.4022091015151463`*^9, 
   3.4022091356720514`*^9}, {3.4022092062046556`*^9, 
   3.4022092880812283`*^9}, {3.4022093816924*^9, 3.4022094398497667`*^9}, {
   3.402212688302761*^9, 3.402212777616976*^9}, 3.402212812648898*^9, {
   3.402212853321554*^9, 3.402212883728388*^9}, {3.4022129482452517`*^9, 
   3.4022129494483995`*^9}, {3.402212981558391*^9, 3.4022129823396564`*^9}, {
   3.40221301534029*^9, 3.4022130161059294`*^9}, 3.4022130658881354`*^9, {
   3.4022133357214413`*^9, 3.4022133506904783`*^9}, {3.402213446504818*^9, 
   3.402213611226731*^9}, {3.402213647289923*^9, 3.402213649961849*^9}, 
   3.4022137912145615`*^9, {3.402213823012047*^9, 3.402213851200088*^9}, 
   3.4022139212326827`*^9, 3.402213972827423*^9, {3.402214042563137*^9, 
   3.4022140431412735`*^9}, {3.402214094486009*^9, 3.402214106033106*^9}, {
   3.4022141823158207`*^9, 3.4022141834720926`*^9}, {3.4022142135507956`*^9, 
   3.402214247520197*^9}, {3.4022143135839653`*^9, 3.40221432161537*^9}, {
   3.4022144793683987`*^9, 3.4022144914311304`*^9}, {3.40221462032423*^9, 
   3.4022146326525917`*^9}, {3.4022147606550493`*^9, 
   3.4022147826867228`*^9}, {3.402215189960167*^9, 3.4022152009447527`*^9}, {
   3.4022152632896996`*^9, 3.4022152646178503`*^9}, 3.4022153593227935`*^9, 
   3.4022154124956894`*^9, 3.4022154543558683`*^9, 3.402215741923889*^9, {
   3.402217172654484*^9, 3.402217224858611*^9}, {3.4022173617987404`*^9, 
   3.4022173701426506`*^9}, {3.4041931588011937`*^9, 3.4041931894736576`*^9}}],

Cell[BoxData[
 RowBox[{"the", " ", "\[Beta]", " ", "matrix", " ", "represents", " ", "here",
   "  ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"M", " ", "\[CapitalSigma]inf"}], "+", 
    RowBox[{"\[CapitalSigma]inf", " ", "M"}]}], " ", ")"}], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["Q", "*"], "Q"}], ")"}], 
   RowBox[{"-", "1"}]]}]], "Text",
 CellChangeTimes->{{3.4042164761082525`*^9, 3.4042164949523644`*^9}, {
  3.4042165794071107`*^9, 3.404216580391505*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BiHestonLaplaceQuickTransform2", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"M11_", ",", "M12_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"M21_", ",", "M22_"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Q11_", ",", "Q12_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Q21_", ",", "Q22_"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Rho]1_", ",", "\[Rho]2_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[CapitalSigma]11_", ",", "\[CapitalSigma]12_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[CapitalSigma]21_", ",", "\[CapitalSigma]22_"}], "}"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Gamma]1_", ",", "\[Gamma]2_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Beta]11_", ",", "\[Beta]12_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Beta]21_", ",", "\[Beta]22_"}], "}"}]}], "}"}], ",", 
    "\[Tau]_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"EXPH", "=", 
       RowBox[{"MatrixExp", "[", 
        RowBox[{"\[Tau]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "M11"}], "-", 
                RowBox[{"Q11", " ", "\[Gamma]1", " ", "\[Rho]1"}], "-", 
                RowBox[{"Q21", " ", "\[Gamma]1", " ", "\[Rho]2"}]}], ")"}]}], 
             ",", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "M12"}], "-", 
                RowBox[{"Q11", " ", "\[Gamma]2", " ", "\[Rho]1"}], "-", 
                RowBox[{"Q21", " ", "\[Gamma]2", " ", "\[Rho]2"}]}], ")"}]}], 
             ",", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 SuperscriptBox["Q11", "2"]}], "-", 
                SuperscriptBox["Q21", "2"]}], ")"}]}], ",", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "Q11"}], " ", "Q12"}], "-", 
                RowBox[{"Q21", " ", "Q22"}]}], ")"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "M21"}], "-", 
                RowBox[{"Q12", " ", "\[Gamma]1", " ", "\[Rho]1"}], "-", 
                RowBox[{"Q22", " ", "\[Gamma]1", " ", "\[Rho]2"}]}], ")"}]}], 
             ",", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "M22"}], "-", 
                RowBox[{"Q12", " ", "\[Gamma]2", " ", "\[Rho]1"}], "-", 
                RowBox[{"Q22", " ", "\[Gamma]2", " ", "\[Rho]2"}]}], ")"}]}], 
             ",", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "Q11"}], " ", "Q12"}], "-", 
                RowBox[{"Q21", " ", "Q22"}]}], ")"}]}], ",", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 SuperscriptBox["Q12", "2"]}], "-", 
                SuperscriptBox["Q22", "2"]}], ")"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Gamma]1"}], ")"}], " ", 
              "\[Gamma]1"}], ",", 
             FractionBox[
              RowBox[{"\[Gamma]1", " ", "\[Gamma]2"}], "2"], ",", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{"M11", "+", 
                RowBox[{"Q11", " ", "\[Gamma]1", " ", "\[Rho]1"}], "+", 
                RowBox[{"Q21", " ", "\[Gamma]1", " ", "\[Rho]2"}]}], ")"}]}], 
             ",", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{"M21", "+", 
                RowBox[{"Q12", " ", "\[Gamma]1", " ", "\[Rho]1"}], "+", 
                RowBox[{"Q22", " ", "\[Gamma]1", " ", "\[Rho]2"}]}], 
               ")"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             FractionBox[
              RowBox[{"\[Gamma]1", " ", "\[Gamma]2"}], "2"], ",", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Gamma]2"}], ")"}], " ", 
              "\[Gamma]2"}], ",", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{"M12", "+", 
                RowBox[{"Q11", " ", "\[Gamma]2", " ", "\[Rho]1"}], "+", 
                RowBox[{"Q21", " ", "\[Gamma]2", " ", "\[Rho]2"}]}], ")"}]}], 
             ",", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{"M22", "+", 
                RowBox[{"Q12", " ", "\[Gamma]2", " ", "\[Rho]1"}], "+", 
                RowBox[{"Q22", " ", "\[Gamma]2", " ", "\[Rho]2"}]}], 
               ")"}]}]}], "}"}]}], "}"}]}], "]"}]}], ",", "\[Delta]", ",", 
      "LogA11"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Delta]", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"EXPH", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "2"}], "]"}], "]"}]}], " ", 
        RowBox[{"EXPH", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"EXPH", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", 
        RowBox[{"EXPH", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "2"}], "]"}], "]"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"LogA11", "=", 
      RowBox[{"MatrixLog2", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "}"}]}], "}"}], "]"}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{
        FractionBox["1", "\[Delta]"], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "2"}], "]"}], "]"}], " ", 
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"3", ",", "1"}], "]"}], "]"}], " ", 
           "\[CapitalSigma]11"}], "-", 
          RowBox[{
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "2"}], "]"}], "]"}], " ", 
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"4", ",", "1"}], "]"}], "]"}], " ", 
           "\[CapitalSigma]11"}], "-", 
          RowBox[{
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "1"}], "]"}], "]"}], " ", 
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"3", ",", "1"}], "]"}], "]"}], " ", 
           "\[CapitalSigma]12"}], "+", 
          RowBox[{
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "2"}], "]"}], "]"}], " ", 
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"3", ",", "2"}], "]"}], "]"}], " ", 
           "\[CapitalSigma]12"}], "+", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", 
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"4", ",", "1"}], "]"}], "]"}], " ", 
           "\[CapitalSigma]12"}], "-", 
          RowBox[{
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "2"}], "]"}], "]"}], " ", 
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"4", ",", "2"}], "]"}], "]"}], " ", 
           "\[CapitalSigma]12"}], "-", 
          RowBox[{
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "1"}], "]"}], "]"}], " ", 
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"3", ",", "2"}], "]"}], "]"}], " ", 
           "\[CapitalSigma]22"}], "+", 
          RowBox[{
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", 
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"4", ",", "2"}], "]"}], "]"}], " ", 
           "\[CapitalSigma]22"}]}], ")"}]}], "-", 
       RowBox[{"2", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Beta]11", " ", 
           RowBox[{"LogA11", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "+", 
          RowBox[{"\[Beta]12", " ", 
           RowBox[{"LogA11", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "+", 
          RowBox[{"\[Beta]21", " ", 
           RowBox[{"LogA11", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "+", 
          RowBox[{"\[Beta]22", " ", 
           RowBox[{"LogA11", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "+", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Beta]11", " ", 
              RowBox[{"(", 
               RowBox[{"M11", "+", 
                RowBox[{"Q11", " ", "\[Gamma]1", " ", "\[Rho]1"}], "+", 
                RowBox[{"Q21", " ", "\[Gamma]1", " ", "\[Rho]2"}]}], ")"}]}], 
             "+", 
             RowBox[{"\[Beta]21", " ", 
              RowBox[{"(", 
               RowBox[{"M21", "+", 
                RowBox[{"Q12", " ", "\[Gamma]1", " ", "\[Rho]1"}], "+", 
                RowBox[{"Q22", " ", "\[Gamma]1", " ", "\[Rho]2"}]}], ")"}]}], 
             "+", 
             RowBox[{"\[Beta]12", " ", 
              RowBox[{"(", 
               RowBox[{"M12", "+", 
                RowBox[{"Q11", " ", "\[Gamma]2", " ", "\[Rho]1"}], "+", 
                RowBox[{"Q21", " ", "\[Gamma]2", " ", "\[Rho]2"}]}], ")"}]}], 
             "+", 
             RowBox[{"\[Beta]22", " ", 
              RowBox[{"(", 
               RowBox[{"M22", "+", 
                RowBox[{"Q12", " ", "\[Gamma]2", " ", "\[Rho]1"}], "+", 
                RowBox[{"Q22", " ", "\[Gamma]2", " ", "\[Rho]2"}]}], 
               ")"}]}]}], ")"}], " ", "\[Tau]"}]}], ")"}]}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.398689746086896*^9, 3.39868976571579*^9}, {
   3.398690925586488*^9, 3.3986910907286205`*^9}, {3.398691590593399*^9, 
   3.3986916004234734`*^9}, {3.398692032962397*^9, 3.39869209364631*^9}, {
   3.3986925101195464`*^9, 3.398692518433696*^9}, {3.3986951810712333`*^9, 
   3.398695325084175*^9}, {3.3986953610600605`*^9, 3.3986954393099575`*^9}, {
   3.3986965831453133`*^9, 3.3986966039671736`*^9}, {3.398696639308217*^9, 
   3.3986966879654016`*^9}, {3.3986967213097916`*^9, 
   3.3986967248567348`*^9}, {3.398696770904494*^9, 3.398696889344268*^9}, {
   3.3986970007620354`*^9, 3.3986970489713306`*^9}, {3.3986974823842573`*^9, 
   3.398697532752773*^9}, {3.3987529399727573`*^9, 3.39875299455193*^9}, {
   3.398753037990264*^9, 3.398753063678257*^9}, {3.3987531523205843`*^9, 
   3.3987532912763767`*^9}, {3.3987533420586023`*^9, 
   3.3987534255914555`*^9}, {3.3987534717642174`*^9, 
   3.3987535094368153`*^9}, {3.3987770283161182`*^9, 3.398777119911627*^9}, {
   3.398777173522031*^9, 3.398777249148483*^9}, {3.3990283070466003`*^9, 
   3.399028307655995*^9}, {3.399028744357469*^9, 3.399028747638824*^9}, {
   3.3993525960192556`*^9, 3.39935261708216*^9}, {3.3993530399027777`*^9, 
   3.399353055590579*^9}, 3.3993531000289326`*^9, {3.39935333325216*^9, 
   3.3993533979565277`*^9}, 3.3993534714110627`*^9, {3.399353504239818*^9, 
   3.399353526130863*^9}, 3.399353619663909*^9, {3.3993538043237047`*^9, 
   3.399353861434176*^9}, {3.3993540798758698`*^9, 3.399354117782848*^9}, {
   3.3993543213648815`*^9, 3.399354332724475*^9}, {3.3993544810085716`*^9, 
   3.399354488368088*^9}, 3.39935480565543*^9, 3.3993552721487613`*^9, {
   3.3993666542422934`*^9, 3.3993667471347017`*^9}, {3.39936684574597*^9, 
   3.399366860105621*^9}, {3.3993675282121983`*^9, 3.3993675314310102`*^9}, 
   3.399609417953703*^9, {3.3996423849276905`*^9, 3.399642397068549*^9}, {
   3.3996424279285164`*^9, 3.3996424822108088`*^9}, {3.399703313058091*^9, 
   3.3997033979815965`*^9}, {3.3997034597952833`*^9, 3.399703478998777*^9}, {
   3.3997101596895437`*^9, 3.399710194955846*^9}, {3.399710680543294*^9, 
   3.399710729044225*^9}, 3.3997107627323723`*^9, {3.3997108923442354`*^9, 
   3.3997108934692574`*^9}, {3.3997181401396403`*^9, 3.399718148483551*^9}, {
   3.3997182570481353`*^9, 3.399718312096067*^9}, {3.399718413160507*^9, 
   3.39971842398884*^9}, {3.3997185011465716`*^9, 3.3997185329909334`*^9}, {
   3.3997185745698566`*^9, 3.399718598664069*^9}, {3.39972065528168*^9, 
   3.39972071751725*^9}, {3.3997232187840233`*^9, 3.399723233643684*^9}, {
   3.3997234000531287`*^9, 3.3997234005687637`*^9}, {3.400407907714303*^9, 
   3.400407915261323*^9}, {3.4004155917680845`*^9, 3.400415629628186*^9}, {
   3.4005721179416647`*^9, 3.4005721419890013`*^9}, {3.4005721760052795`*^9, 
   3.4005721845835695`*^9}, {3.4005722273656406`*^9, 
   3.4005722379752197`*^9}, {3.400572305273387*^9, 3.400572337055247*^9}, {
   3.400816614783207*^9, 3.4008166155332212`*^9}, 3.402032114347872*^9, {
   3.402205513305629*^9, 3.402205553790781*^9}, {3.4022056337298155`*^9, 
   3.402205666777325*^9}, {3.402206142427082*^9, 3.4022061429427176`*^9}, 
   3.4022063420090394`*^9, {3.4022063922287536`*^9, 3.4022064283700724`*^9}, {
   3.4022066940001726`*^9, 3.40220669985966*^9}, {3.402206778392418*^9, 
   3.402206820533852*^9}, {3.4022072688549595`*^9, 3.402207376513276*^9}, {
   3.402207470921339*^9, 3.402207504265729*^9}, {3.4022075400945425`*^9, 
   3.4022077664113874`*^9}, {3.402208049729327*^9, 3.4022080663702717`*^9}, {
   3.402208128355837*^9, 3.402208177075522*^9}, {3.4022082700304317`*^9, 
   3.4022083228439455`*^9}, 3.402208385767029*^9, 3.4022084313304033`*^9, 
   3.4022084987535734`*^9, {3.4022085325667224`*^9, 3.402208610474468*^9}, {
   3.402208698179277*^9, 3.402208738242546*^9}, 3.4022087894622793`*^9, {
   3.4022088244473267`*^9, 3.4022088560729337`*^9}, {3.402208910808359*^9, 
   3.4022089956537385`*^9}, {3.4022091015151463`*^9, 
   3.4022091356720514`*^9}, {3.4022092062046556`*^9, 
   3.4022092880812283`*^9}, {3.4022093816924*^9, 3.4022094398497667`*^9}, {
   3.402212688302761*^9, 3.402212777616976*^9}, 3.402212812648898*^9, {
   3.402212853321554*^9, 3.402212883728388*^9}, {3.4022129482452517`*^9, 
   3.4022129494483995`*^9}, {3.402212981558391*^9, 3.4022129823396564`*^9}, {
   3.40221301534029*^9, 3.4022130161059294`*^9}, 3.4022130658881354`*^9, {
   3.4022133357214413`*^9, 3.4022133506904783`*^9}, {3.402213446504818*^9, 
   3.402213611226731*^9}, {3.402213647289923*^9, 3.402213649961849*^9}, 
   3.4022137912145615`*^9, {3.402213823012047*^9, 3.402213851200088*^9}, 
   3.4022139212326827`*^9, 3.402213972827423*^9, {3.402214042563137*^9, 
   3.4022140431412735`*^9}, {3.402214094486009*^9, 3.402214106033106*^9}, {
   3.4022141823158207`*^9, 3.4022141834720926`*^9}, {3.4022142135507956`*^9, 
   3.402214247520197*^9}, {3.4022143135839653`*^9, 3.40221432161537*^9}, {
   3.4022144793683987`*^9, 3.4022144914311304`*^9}, {3.40221462032423*^9, 
   3.4022146326525917`*^9}, {3.4022147606550493`*^9, 
   3.4022147826867228`*^9}, {3.402215189960167*^9, 3.4022152009447527`*^9}, {
   3.4022152632896996`*^9, 3.4022152646178503`*^9}, 3.4022153593227935`*^9, 
   3.4022154124956894`*^9, 3.4022154543558683`*^9, 3.402215741923889*^9, {
   3.402217172654484*^9, 3.402217224858611*^9}, {3.4022173617987404`*^9, 
   3.4022173701426506`*^9}, {3.4041931588011937`*^9, 
   3.4041931894736576`*^9}, {3.404214076921564*^9, 3.4042140775153255`*^9}, 
   3.404214168142065*^9, {3.404214241862231*^9, 3.404214317269929*^9}, {
   3.404214351676839*^9, 3.4042144035840855`*^9}, {3.4042148344204826`*^9, 
   3.404214844608178*^9}, {3.4042157010621223`*^9, 3.404215733297116*^9}, {
   3.404215928207108*^9, 3.4042160022554045`*^9}, 3.4042167475509644`*^9, {
   3.4042183886762233`*^9, 3.4042183946294622`*^9}}],

Cell["\<\
the same procedure but where' underlying 1 is echanged with  underlying 2\
\>", "Text",
 CellChangeTimes->{{3.402321252784717*^9, 3.4023212767226768`*^9}, {
  3.4028325455303326`*^9, 3.4028325754527817`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BiHestonLaplaceQuickTransformReverse", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"M22_", ",", "M21_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"M12_", ",", "M11_"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Q22_", ",", "Q21_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Q12_", ",", "Q11_"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Rho]2_", ",", "\[Rho]1_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[CapitalSigma]22_", ",", "\[CapitalSigma]21_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[CapitalSigma]12_", ",", "\[CapitalSigma]11_"}], "}"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Gamma]1_", ",", "\[Gamma]2_"}], "}"}], ",", "\[Beta]_", ",", 
    "\[Tau]_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"EXPH", "=", 
       RowBox[{"MatrixExp", "[", 
        RowBox[{"\[Tau]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "M11"}], "-", 
                RowBox[{"Q11", " ", "\[Gamma]1", " ", "\[Rho]1"}], "-", 
                RowBox[{"Q21", " ", "\[Gamma]1", " ", "\[Rho]2"}]}], ")"}]}], 
             ",", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "M12"}], "-", 
                RowBox[{"Q11", " ", "\[Gamma]2", " ", "\[Rho]1"}], "-", 
                RowBox[{"Q21", " ", "\[Gamma]2", " ", "\[Rho]2"}]}], ")"}]}], 
             ",", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 SuperscriptBox["Q11", "2"]}], "-", 
                SuperscriptBox["Q21", "2"]}], ")"}]}], ",", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "Q11"}], " ", "Q12"}], "-", 
                RowBox[{"Q21", " ", "Q22"}]}], ")"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "M21"}], "-", 
                RowBox[{"Q12", " ", "\[Gamma]1", " ", "\[Rho]1"}], "-", 
                RowBox[{"Q22", " ", "\[Gamma]1", " ", "\[Rho]2"}]}], ")"}]}], 
             ",", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "M22"}], "-", 
                RowBox[{"Q12", " ", "\[Gamma]2", " ", "\[Rho]1"}], "-", 
                RowBox[{"Q22", " ", "\[Gamma]2", " ", "\[Rho]2"}]}], ")"}]}], 
             ",", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "Q11"}], " ", "Q12"}], "-", 
                RowBox[{"Q21", " ", "Q22"}]}], ")"}]}], ",", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 SuperscriptBox["Q12", "2"]}], "-", 
                SuperscriptBox["Q22", "2"]}], ")"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Gamma]1"}], ")"}], " ", 
              "\[Gamma]1"}], ",", 
             FractionBox[
              RowBox[{"\[Gamma]1", " ", "\[Gamma]2"}], "2"], ",", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{"M11", "+", 
                RowBox[{"Q11", " ", "\[Gamma]1", " ", "\[Rho]1"}], "+", 
                RowBox[{"Q21", " ", "\[Gamma]1", " ", "\[Rho]2"}]}], ")"}]}], 
             ",", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{"M21", "+", 
                RowBox[{"Q12", " ", "\[Gamma]1", " ", "\[Rho]1"}], "+", 
                RowBox[{"Q22", " ", "\[Gamma]1", " ", "\[Rho]2"}]}], 
               ")"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             FractionBox[
              RowBox[{"\[Gamma]1", " ", "\[Gamma]2"}], "2"], ",", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Gamma]2"}], ")"}], " ", 
              "\[Gamma]2"}], ",", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{"M12", "+", 
                RowBox[{"Q11", " ", "\[Gamma]2", " ", "\[Rho]1"}], "+", 
                RowBox[{"Q21", " ", "\[Gamma]2", " ", "\[Rho]2"}]}], ")"}]}], 
             ",", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{"M22", "+", 
                RowBox[{"Q12", " ", "\[Gamma]2", " ", "\[Rho]1"}], "+", 
                RowBox[{"Q22", " ", "\[Gamma]2", " ", "\[Rho]2"}]}], 
               ")"}]}]}], "}"}]}], "}"}]}], "]"}]}], ",", "\[Delta]"}], "}"}],
     ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Delta]", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"EXPH", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "2"}], "]"}], "]"}]}], " ", 
        RowBox[{"EXPH", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"EXPH", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", 
        RowBox[{"EXPH", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "2"}], "]"}], "]"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{
        FractionBox["1", "\[Delta]"], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "2"}], "]"}], "]"}], " ", 
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"3", ",", "1"}], "]"}], "]"}], " ", 
           "\[CapitalSigma]11"}], "-", 
          RowBox[{
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "2"}], "]"}], "]"}], " ", 
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"4", ",", "1"}], "]"}], "]"}], " ", 
           "\[CapitalSigma]11"}], "-", 
          RowBox[{
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "1"}], "]"}], "]"}], " ", 
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"3", ",", "1"}], "]"}], "]"}], " ", 
           "\[CapitalSigma]12"}], "+", 
          RowBox[{
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "2"}], "]"}], "]"}], " ", 
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"3", ",", "2"}], "]"}], "]"}], " ", 
           "\[CapitalSigma]12"}], "+", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", 
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"4", ",", "1"}], "]"}], "]"}], " ", 
           "\[CapitalSigma]12"}], "-", 
          RowBox[{
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "2"}], "]"}], "]"}], " ", 
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"4", ",", "2"}], "]"}], "]"}], " ", 
           "\[CapitalSigma]12"}], "-", 
          RowBox[{
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "1"}], "]"}], "]"}], " ", 
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"3", ",", "2"}], "]"}], "]"}], " ", 
           "\[CapitalSigma]22"}], "+", 
          RowBox[{
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", 
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"4", ",", "2"}], "]"}], "]"}], " ", 
           "\[CapitalSigma]22"}]}], ")"}]}], "-", 
       RowBox[{"2", 
        SuperscriptBox["\[Beta]", "2"], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Log", "[", "\[Delta]", "]"}], "+", 
          RowBox[{
           FractionBox["\[Tau]", "2"], 
           RowBox[{"(", " ", 
            RowBox[{"M11", "+", "M22", "+", 
             RowBox[{"Q11", " ", "\[Gamma]1", " ", "\[Rho]1"}], "+", 
             RowBox[{"Q12", " ", "\[Gamma]2", " ", "\[Rho]1"}], "+", 
             RowBox[{"Q21", " ", "\[Gamma]1", " ", "\[Rho]2"}], "+", 
             RowBox[{"Q22", " ", "\[Gamma]2", " ", "\[Rho]2"}]}], ")"}]}]}], 
         ")"}]}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.4023212887541575`*^9, 3.4023213706151047`*^9}, {
  3.404193196786298*^9, 3.404193201880146*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BiHestonLaplaceQuickTransformReverse2", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"M22_", ",", "M21_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"M12_", ",", "M11_"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Q22_", ",", "Q21_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Q12_", ",", "Q11_"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Rho]2_", ",", "\[Rho]1_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[CapitalSigma]22_", ",", "\[CapitalSigma]21_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[CapitalSigma]12_", ",", "\[CapitalSigma]11_"}], "}"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Gamma]1_", ",", "\[Gamma]2_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Beta]11_", ",", "\[Beta]12_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Beta]21_", ",", "\[Beta]22_"}], "}"}]}], "}"}], ",", 
    "\[Tau]_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"EXPH", "=", 
       RowBox[{"MatrixExp", "[", 
        RowBox[{"\[Tau]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "M11"}], "-", 
                RowBox[{"Q11", " ", "\[Gamma]1", " ", "\[Rho]1"}], "-", 
                RowBox[{"Q21", " ", "\[Gamma]1", " ", "\[Rho]2"}]}], ")"}]}], 
             ",", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "M12"}], "-", 
                RowBox[{"Q11", " ", "\[Gamma]2", " ", "\[Rho]1"}], "-", 
                RowBox[{"Q21", " ", "\[Gamma]2", " ", "\[Rho]2"}]}], ")"}]}], 
             ",", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 SuperscriptBox["Q11", "2"]}], "-", 
                SuperscriptBox["Q21", "2"]}], ")"}]}], ",", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "Q11"}], " ", "Q12"}], "-", 
                RowBox[{"Q21", " ", "Q22"}]}], ")"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "M21"}], "-", 
                RowBox[{"Q12", " ", "\[Gamma]1", " ", "\[Rho]1"}], "-", 
                RowBox[{"Q22", " ", "\[Gamma]1", " ", "\[Rho]2"}]}], ")"}]}], 
             ",", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "M22"}], "-", 
                RowBox[{"Q12", " ", "\[Gamma]2", " ", "\[Rho]1"}], "-", 
                RowBox[{"Q22", " ", "\[Gamma]2", " ", "\[Rho]2"}]}], ")"}]}], 
             ",", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "Q11"}], " ", "Q12"}], "-", 
                RowBox[{"Q21", " ", "Q22"}]}], ")"}]}], ",", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 SuperscriptBox["Q12", "2"]}], "-", 
                SuperscriptBox["Q22", "2"]}], ")"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Gamma]1"}], ")"}], " ", 
              "\[Gamma]1"}], ",", 
             FractionBox[
              RowBox[{"\[Gamma]1", " ", "\[Gamma]2"}], "2"], ",", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{"M11", "+", 
                RowBox[{"Q11", " ", "\[Gamma]1", " ", "\[Rho]1"}], "+", 
                RowBox[{"Q21", " ", "\[Gamma]1", " ", "\[Rho]2"}]}], ")"}]}], 
             ",", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{"M21", "+", 
                RowBox[{"Q12", " ", "\[Gamma]1", " ", "\[Rho]1"}], "+", 
                RowBox[{"Q22", " ", "\[Gamma]1", " ", "\[Rho]2"}]}], 
               ")"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             FractionBox[
              RowBox[{"\[Gamma]1", " ", "\[Gamma]2"}], "2"], ",", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Gamma]2"}], ")"}], " ", 
              "\[Gamma]2"}], ",", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{"M12", "+", 
                RowBox[{"Q11", " ", "\[Gamma]2", " ", "\[Rho]1"}], "+", 
                RowBox[{"Q21", " ", "\[Gamma]2", " ", "\[Rho]2"}]}], ")"}]}], 
             ",", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{"M22", "+", 
                RowBox[{"Q12", " ", "\[Gamma]2", " ", "\[Rho]1"}], "+", 
                RowBox[{"Q22", " ", "\[Gamma]2", " ", "\[Rho]2"}]}], 
               ")"}]}]}], "}"}]}], "}"}]}], "]"}]}], ",", "\[Delta]", ",", 
      "LogA11"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Delta]", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"EXPH", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "2"}], "]"}], "]"}]}], " ", 
        RowBox[{"EXPH", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"EXPH", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", 
        RowBox[{"EXPH", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "2"}], "]"}], "]"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"LogA11", "=", 
      RowBox[{"MatrixLog2", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "}"}]}], "}"}], "]"}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{
        FractionBox["1", "\[Delta]"], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "2"}], "]"}], "]"}], " ", 
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"3", ",", "1"}], "]"}], "]"}], " ", 
           "\[CapitalSigma]11"}], "-", 
          RowBox[{
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "2"}], "]"}], "]"}], " ", 
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"4", ",", "1"}], "]"}], "]"}], " ", 
           "\[CapitalSigma]11"}], "-", 
          RowBox[{
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "1"}], "]"}], "]"}], " ", 
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"3", ",", "1"}], "]"}], "]"}], " ", 
           "\[CapitalSigma]12"}], "+", 
          RowBox[{
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "2"}], "]"}], "]"}], " ", 
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"3", ",", "2"}], "]"}], "]"}], " ", 
           "\[CapitalSigma]12"}], "+", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", 
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"4", ",", "1"}], "]"}], "]"}], " ", 
           "\[CapitalSigma]12"}], "-", 
          RowBox[{
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "2"}], "]"}], "]"}], " ", 
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"4", ",", "2"}], "]"}], "]"}], " ", 
           "\[CapitalSigma]12"}], "-", 
          RowBox[{
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "1"}], "]"}], "]"}], " ", 
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"3", ",", "2"}], "]"}], "]"}], " ", 
           "\[CapitalSigma]22"}], "+", 
          RowBox[{
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", 
           RowBox[{"EXPH", "[", 
            RowBox[{"[", 
             RowBox[{"4", ",", "2"}], "]"}], "]"}], " ", 
           "\[CapitalSigma]22"}]}], ")"}]}], "-", 
       RowBox[{"2", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Beta]11", " ", 
           RowBox[{"LogA11", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "+", 
          RowBox[{"\[Beta]12", " ", 
           RowBox[{"LogA11", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "+", 
          RowBox[{"\[Beta]21", " ", 
           RowBox[{"LogA11", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "+", 
          RowBox[{"\[Beta]22", " ", 
           RowBox[{"LogA11", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "+", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Beta]11", " ", 
              RowBox[{"(", 
               RowBox[{"M11", "+", 
                RowBox[{"Q11", " ", "\[Gamma]1", " ", "\[Rho]1"}], "+", 
                RowBox[{"Q21", " ", "\[Gamma]1", " ", "\[Rho]2"}]}], ")"}]}], 
             "+", 
             RowBox[{"\[Beta]21", " ", 
              RowBox[{"(", 
               RowBox[{"M21", "+", 
                RowBox[{"Q12", " ", "\[Gamma]1", " ", "\[Rho]1"}], "+", 
                RowBox[{"Q22", " ", "\[Gamma]1", " ", "\[Rho]2"}]}], ")"}]}], 
             "+", 
             RowBox[{"\[Beta]12", " ", 
              RowBox[{"(", 
               RowBox[{"M12", "+", 
                RowBox[{"Q11", " ", "\[Gamma]2", " ", "\[Rho]1"}], "+", 
                RowBox[{"Q21", " ", "\[Gamma]2", " ", "\[Rho]2"}]}], ")"}]}], 
             "+", 
             RowBox[{"\[Beta]22", " ", 
              RowBox[{"(", 
               RowBox[{"M22", "+", 
                RowBox[{"Q12", " ", "\[Gamma]2", " ", "\[Rho]1"}], "+", 
                RowBox[{"Q22", " ", "\[Gamma]2", " ", "\[Rho]2"}]}], 
               ")"}]}]}], ")"}], " ", "\[Tau]"}]}], ")"}]}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.4023212887541575`*^9, 3.4023213706151047`*^9}, {
   3.404193196786298*^9, 3.404193201880146*^9}, 3.404216316495813*^9, {
   3.404216386669035*^9, 3.4042163977786236`*^9}, 3.404216446451433*^9, 
   3.404216755988626*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"VanillaPayOffFourierDroite", "[", 
   RowBox[{"k1_", ",", "k2_", ",", "K_"}], "]"}], ":=", 
  RowBox[{
   FractionBox[
    SuperscriptBox["K", 
     RowBox[{"\[ImaginaryI]", " ", "k1"}]], 
    RowBox[{"k1", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], "+", "k1"}], ")"}], " ", "k2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], "+", "k2"}], ")"}]}]], 
   RowBox[{"(", " ", 
    RowBox[{
     RowBox[{
      FractionBox[
       SuperscriptBox["K", 
        RowBox[{
         RowBox[{"\[ImaginaryI]", " ", "k2"}], "+", "1"}]], 
       RowBox[{"Gamma", "[", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "k1"}], "]"}]], " ", 
      RowBox[{"(", " ", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"\[ImaginaryI]", " ", "k2"}]}], ")"}], " ", 
         RowBox[{"Gamma", "[", 
          RowBox[{"1", "+", 
           RowBox[{"\[ImaginaryI]", " ", "k2"}]}], "]"}], " ", 
         RowBox[{"(", " ", 
          RowBox[{"Gamma", "[", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", 
            RowBox[{"(", 
             RowBox[{"k1", "+", "k2"}], ")"}]}], "]"}], ")"}]}], "+", 
        RowBox[{"\[ImaginaryI]", "  ", "k2", " ", 
         RowBox[{"Gamma", "[", 
          RowBox[{"2", "+", 
           RowBox[{"\[ImaginaryI]", " ", "k2"}]}], "]"}], " ", 
         RowBox[{"(", "  ", 
          RowBox[{"Gamma", "[", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], "+", "k1", "+", "k2"}], ")"}]}],
            "]"}], ")"}]}]}], ")"}]}], "-", "\[IndentingNewLine]", "  ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[ImaginaryI]", "  ", "k2", " ", 
        RowBox[{"Hypergeometric2F1", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "k1"}], ",", 
          RowBox[{"1", "+", 
           RowBox[{"\[ImaginaryI]", " ", "k2"}]}], ",", 
          RowBox[{"2", "+", 
           RowBox[{"\[ImaginaryI]", " ", "k2"}]}], ",", 
          RowBox[{"-", 
           FractionBox["1", "K"]}]}], "]"}]}], "+", 
       RowBox[{"K", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"\[ImaginaryI]", " ", "k2"}]}], ")"}], " ", 
        RowBox[{"Hypergeometric2F1", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "k1"}], ",", 
          RowBox[{"\[ImaginaryI]", " ", "k2"}], ",", 
          RowBox[{"1", "+", 
           RowBox[{"\[ImaginaryI]", " ", "k2"}]}], ",", 
          RowBox[{"-", 
           FractionBox["1", "K"]}]}], "]"}]}]}], ")"}]}], ")"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.402129369923686*^9, 3.4021293978304715`*^9}, {
  3.4021327352695494`*^9, 3.4021327364258213`*^9}, {3.402145383371763*^9, 
  3.4021453940594683`*^9}, {3.404193487354377*^9, 3.404193496745182*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"VanillaPayOffFourierDroite", "[", 
   RowBox[{"k1_", ",", "k2_"}], "]"}], ":=", 
  FractionBox["1", 
   RowBox[{"k1", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], "+", "k1"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"\[ImaginaryI]", " ", "k1"}], "+", 
      RowBox[{"\[ImaginaryI]", " ", "k2"}]}], ")"}]}]]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.402131985411402*^9, 3.4021320184432864`*^9}, 
   3.4021321853996167`*^9, {3.4021327406602774`*^9, 3.4021327441915956`*^9}, 
   3.404193509792308*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"VanillaPayOffFourierGauche", "[", 
   RowBox[{"k1_", ",", "k2_", ",", "K_"}], "]"}], ":=", 
  RowBox[{
   FractionBox[
    SuperscriptBox["K", 
     RowBox[{"\[ImaginaryI]", " ", "k1"}]], 
    RowBox[{"k1", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], "+", "k1"}], ")"}], " ", "k2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], "+", "k2"}], ")"}]}]], "  ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"\[ImaginaryI]", "  ", "k2", " ", 
      RowBox[{"Hypergeometric2F1", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "k1"}], ",", 
        RowBox[{"1", "+", 
         RowBox[{"\[ImaginaryI]", " ", "k2"}]}], ",", 
        RowBox[{"2", "+", 
         RowBox[{"\[ImaginaryI]", " ", "k2"}]}], ",", 
        RowBox[{"-", 
         FractionBox["1", "K"]}]}], "]"}]}], "+", 
     RowBox[{"K", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"\[ImaginaryI]", " ", "k2"}]}], ")"}], " ", 
      RowBox[{"Hypergeometric2F1", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "k1"}], ",", 
        RowBox[{"\[ImaginaryI]", " ", "k2"}], ",", 
        RowBox[{"1", "+", 
         RowBox[{"\[ImaginaryI]", " ", "k2"}]}], ",", 
        RowBox[{"-", 
         FractionBox["1", "K"]}]}], "]"}]}]}], ")"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.402129369923686*^9, 3.4021293978304715`*^9}, {
   3.4021327352695494`*^9, 3.4021327364258213`*^9}, {3.402132803098976*^9, 
   3.4021328046771317`*^9}, 3.4021328900850215`*^9, {3.4021454338102317`*^9, 
   3.4021454357946444`*^9}, 3.4041935274801474`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"VanillaPayOffFourierGauche", "[", 
   RowBox[{"k1_", ",", "k2_"}], "]"}], ":=", 
  FractionBox[
   RowBox[{"-", "1"}], 
   RowBox[{"k1", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], "+", "k1"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"\[ImaginaryI]", " ", "k1"}], "+", 
      RowBox[{"\[ImaginaryI]", " ", "k2"}]}], ")"}]}]]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.402131985411402*^9, 3.4021320184432864`*^9}, 
   3.4021321853996167`*^9, {3.4021327406602774`*^9, 3.4021327441915956`*^9}, 
   3.4021328143491926`*^9, 3.40213289627264*^9, 3.4041935336521406`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 " Vanilla Underlying 1 Option:  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"payoff", "=", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["S", "1"], "-", "K"}], ")"}], "+"]}], TraditionalForm]]]
}], "Subtitle",
 CellChangeTimes->{{3.399795779284771*^9, 3.3997957832385283`*^9}, {
  3.4039536500202045`*^9, 3.403953704380624*^9}, {3.404383238804744*^9, 
  3.404383259552744*^9}, {3.4043833006275434`*^9, 3.4043833053387437`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Timing", "[", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"S1", "=", "0.01"}], ",", 
       RowBox[{"S2", "=", "0.05"}], ",", 
       RowBox[{"K", "=", "0.01"}], ",", 
       RowBox[{"M1", "=", 
        RowBox[{"-", "0.01"}]}], ",", 
       RowBox[{"M2", "=", 
        RowBox[{"-", "0.02"}]}], ",", 
       RowBox[{"\[Theta]1", "=", "0.03"}], ",", 
       RowBox[{"\[Theta]2", "=", "0.041"}], ",", 
       RowBox[{"\[Rho]s", "=", "0.6"}], ",", 
       RowBox[{"\[Rho]sinf", "=", "0.8"}], ",", 
       RowBox[{"\[Rho]m1", "=", "0.3"}], ",", 
       RowBox[{"\[Rho]m2", "=", 
        RowBox[{"-", "0.3"}]}], ",", 
       RowBox[{"\[Rho]1", "=", "0.5"}], ",", 
       RowBox[{"\[Rho]2", "=", "0.8"}], ",", " ", 
       RowBox[{"\[CapitalSigma]1", "=", "0.04"}], ",", 
       RowBox[{"\[CapitalSigma]2", "=", "0.05"}], ",", 
       RowBox[{"\[Beta]", "=", "5"}], ",", 
       RowBox[{"\[Tau]", "=", "5"}], ",", 
       RowBox[{"\[Lambda]1", "=", "1.1"}], ",", 
       RowBox[{"\[Lambda]2", "=", "1.2"}], ",", 
       RowBox[{"\[Nu]1", "=", "0.01"}], ",", 
       RowBox[{"\[Nu]2", "=", "0.01"}], ",", "M", ",", "\[CapitalSigma]inf", 
       ",", "\[CapitalSigma]", ",", "Q", ",", "\[Beta]m", ",", "S", ",", 
       "\[Rho]", ",", 
       RowBox[{"printflag", "=", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "4", ",", "6"}], "}"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"M", "=", 
       RowBox[{"(", GridBox[{
          {"M1", 
           RowBox[{"\[Rho]m1", 
            SqrtBox[
             RowBox[{"M1", " ", "M2"}]]}]},
          {
           RowBox[{"\[Rho]m2", 
            SqrtBox[
             RowBox[{"M1", " ", "M2"}]]}], "M2"}
         }], ")"}]}], ";", 
      RowBox[{"\[CapitalSigma]inf", "=", 
       RowBox[{"(", GridBox[{
          {"\[Theta]1", 
           RowBox[{
            SqrtBox[
             RowBox[{"\[Theta]1", " ", "\[Theta]2"}]], " ", "\[Rho]sinf"}]},
          {
           RowBox[{
            SqrtBox[
             RowBox[{"\[Theta]1", " ", "\[Theta]2"}]], " ", "\[Rho]sinf"}], 
           "\[Theta]2"}
         }], ")"}]}], ";", 
      RowBox[{"\[CapitalSigma]", "=", 
       RowBox[{"(", GridBox[{
          {"\[CapitalSigma]1", 
           RowBox[{
            SqrtBox[
             RowBox[{"\[CapitalSigma]1", " ", "\[CapitalSigma]2"}]], " ", 
            "\[Rho]s"}]},
          {
           RowBox[{
            SqrtBox[
             RowBox[{"\[CapitalSigma]1", " ", "\[CapitalSigma]2"}]], " ", 
            "\[Rho]s"}], "\[CapitalSigma]2"}
         }], ")"}]}], ";", 
      RowBox[{"S", "=", 
       RowBox[{"{", 
        RowBox[{"S1", ",", "S2"}], "}"}]}], ";", 
      RowBox[{"\[Rho]", "=", 
       RowBox[{"{", 
        RowBox[{"\[Rho]1", ",", "\[Rho]2"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"BiHestonUnderlying1Vanilla", "[", 
       RowBox[{
       "S", ",", "K", ",", "\[Tau]", ",", "\[CapitalSigma]", ",", "M", ",", 
        "\[CapitalSigma]inf", ",", "\[Beta]", ",", "\[Rho]", ",", 
        "printflag"}], "]"}]}]}], "]"}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.4042179165109076`*^9, 3.4042181225929894`*^9}, {
   3.4042182894711933`*^9, 3.4042183203780365`*^9}, {3.404218428926996*^9, 
   3.4042184428647633`*^9}, {3.4042185056940947`*^9, 3.404218515647411*^9}, 
   3.404218545647987*^9, 3.4042186425092216`*^9, {3.404218786340108*^9, 
   3.4042188084030313`*^9}, {3.4042188562320747`*^9, 
   3.4042188574508486`*^9}, {3.4042189321866584`*^9, 
   3.4042189325616655`*^9}, {3.404219027954122*^9, 3.404219150440849*^9}, 
   3.4042191965042334`*^9, 3.4042193169909215`*^9, {3.404219444149613*^9, 
   3.4042194496028423`*^9}, {3.404220002394706*^9, 3.404220071911666*^9}, {
   3.404223202737401*^9, 3.404223224315941*^9}, {3.4042997958015347`*^9, 
   3.4042998138195343`*^9}, {3.404301200209934*^9, 3.4043012204743347`*^9}, {
   3.4043014521187344`*^9, 3.4043014744267344`*^9}, {3.4043236557873435`*^9, 
   3.4043236664577436`*^9}, {3.4043237018697433`*^9, 
   3.4043237041785436`*^9}, {3.4043237952981434`*^9, 
   3.4043238099153433`*^9}, {3.4043239823881435`*^9, 3.404323989688944*^9}, {
   3.404324531757744*^9, 3.404324533068144*^9}, {3.404325260106144*^9, 
   3.4043252745985436`*^9}, 3.4043254213945436`*^9, {3.4043265313085437`*^9, 
   3.4043265321197433`*^9}, {3.404326685826544*^9, 3.4043266937825437`*^9}, {
   3.4044081401339474`*^9, 3.4044081404771476`*^9}, {3.404408187245948*^9, 
   3.4044082371191473`*^9}, {3.404408300533148*^9, 3.4044083343071475`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" S=\"\>", "\[InvisibleSpace]", 
   InterpretationBox[GridBox[{
      {"0.01`"},
      {"0.05`"}
     },
     BaselinePosition->{Baseline, {1, 1}},
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}}],
    ColumnForm[{0.01, 0.05}],
    Editable->False], "\[InvisibleSpace]", "\<\" \[CapitalSigma]=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.04`", "0.026832815729997475`"},
       {"0.026832815729997475`", "0.05`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\"M=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", "0.01`"}], "0.004242640687119285`"},
       {
        RowBox[{"-", "0.004242640687119285`"}], 
        RowBox[{"-", "0.02`"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], 
   "\[InvisibleSpace]", "\<\" \[CapitalSigma]inf=\"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.03`", "0.02805708466680029`"},
       {"0.02805708466680029`", "0.041`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\" Q=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.0026904562514984886`", "0.005910101619402922`"},
       {"0.`", "0.0016223883650666592`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\" \[Rho]=\"\>", 
   "\[InvisibleSpace]", 
   InterpretationBox[GridBox[{
      {"0.5`"},
      {"0.8`"}
     },
     BaselinePosition->{Baseline, {1, 1}},
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}}],
    ColumnForm[{0.5, 0.8}],
    Editable->False], "\[InvisibleSpace]", "\<\" Imaginary Shifts=\"\>", 
   "\[InvisibleSpace]", 
   InterpretationBox[GridBox[{
      {"1.1`"},
      {"1.2`"}
     },
     BaselinePosition->{Baseline, {1, 1}},
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}}],
    ColumnForm[{1.1, 1.2}],
    Editable->False]}],
  SequenceForm[" S=", 
   ColumnForm[{0.01, 0.05}], " \[CapitalSigma]=", 
   MatrixForm[{{0.04, 0.026832815729997475`}, {0.026832815729997475`, 0.05}}],
    "M=", 
   MatrixForm[{{-0.01, 
    0.004242640687119285}, {-0.004242640687119285, -0.02}}], 
   " \[CapitalSigma]inf=", 
   MatrixForm[{{0.03, 0.02805708466680029}, {0.02805708466680029, 0.041}}], 
   " Q=", 
   MatrixForm[{{0.0026904562514984886`, 0.005910101619402922}, {0., 
    0.0016223883650666592`}}], " \[Rho]=", 
   ColumnForm[{0.5, 0.8}], " Imaginary Shifts=", 
   ColumnForm[{1.1, 1.2}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.4043272124357433`*^9, 3.4044081431291475`*^9, {3.404408189726348*^9, 
   3.4044082395371475`*^9}, {3.4044083081615477`*^9, 3.4044083367563477`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"{NbLegCoef1,NbLegCoef1n,period1,period1n,\[Epsilon]1,imax}=\"\>\
", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "12", ",", "8", ",", "6.687338550904234`", ",", "6.687338550904234`", ",",
      "0.00001`", ",", "10"}], "}"}], 
   "\[InvisibleSpace]", "\<\"{NbLegCoef2,period2,period2n,\[Epsilon]2}=\"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "12", ",", "8.916451401205645`", ",", "0.8916451401205645`", ",", 
     "0.00001`"}], "}"}]}],
  SequenceForm[
  "{NbLegCoef1,NbLegCoef1n,period1,period1n,\[Epsilon]1,imax}=", {
   12, 8, 6.687338550904234, 6.687338550904234, 0.00001, 10}, 
   "{NbLegCoef2,period2,period2n,\[Epsilon]2}=", {
   12, 8.916451401205645, 0.8916451401205645, 0.00001}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.4043272124357433`*^9, 3.4044081431291475`*^9, {3.404408189726348*^9, 
   3.4044082395371475`*^9}, {3.4044083081615477`*^9, 3.4044083367563477`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
q42uvqz/ASGUGis=
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    PlotLabel->FormBox[
     "\"1st Inverse Fourier: K =0.01 \[Omega]1=0\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
eryBqpO6noz/AcwegXc=
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    PlotLabel->FormBox[
     "\"1st Inverse Fourier: K =0.01 \[Omega]1=0.2\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
WeQ=
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    PlotLabel->FormBox[
     "\"1st Inverse Fourier: K =0.01 \[Omega]1=2\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{Automatic, Automatic}]}], "}"}]], "Print",
 CellChangeTimes->{
  3.4043272124357433`*^9, 3.4044081431291475`*^9, {3.404408189726348*^9, 
   3.4044082395371475`*^9}, 3.4044083081615477`*^9, 3.4044083459603477`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQDQP/BP1+bz592V6BO95pEutle4mf/nd0552D8h/b
1zJx7pmWvsl+w4S+5OiON/ZL9/e+X6a5Yz9E/rP9+/1f+JrNju1/cfbbpW/H
vtszZi3vC8g6tB+i/o89X/xSlU1HVu7foyn86/4SBgcOAeElqX8XQc1ndjDg
W7TSrHSTfcubVV0uaawOV2y1k3+krraHmMfu0DAt/I9YVoe9z3on6ZXqXA7L
HZ47ZwtOgZrPA5Tn3CRgOXu/SNGt1bwv+Ryeb0ja8uFqH9Q+AYd/3NLTTsjo
2+dJWcpZXhV0WJSUpDsrthFqv7DDnZBPDg+FG+wv/W5Je20q4sDpOuOF5Ms0
qHtEHRSPst8/dzxiv9ndC+vmThNzqJeeslhrXRrUv+IOKw+mi/bURO+ftU/m
u/93CYdtlkoe7bGS+yHulXI42NYg41znbv9vfoY9U4S0w/xOZbuMmy7Q8JRx
+K95Y3NMqYZ9UuOW9i07ZB0MX71YOOWWItQ/cg6l0sWPryVr7E82ZMjYzKPg
MMN7tcPSGlGo/xQc3q1oeDeB4ZOdqJJaD4+tooP30vK1QY/Zof5VdKh6Hz11
heUvOwBRVOFa
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotLabel->FormBox["\"2nd Inverse Fourier:\"", TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{
  3.4043272124357433`*^9, 3.4044081431291475`*^9, {3.404408189726348*^9, 
   3.4044082395371475`*^9}, 3.4044083081615477`*^9, 3.4044083466935472`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"11.902999999999984`", ",", "0.001980141208068715`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.4043254409569435`*^9, {3.404326650024544*^9, 3.4043266978853436`*^9}, 
   3.4043272218893433`*^9, 3.4044081535967474`*^9, 3.4044081914891477`*^9, {
   3.4044082222991476`*^9, 3.4044082515491476`*^9}, {3.4044083183171473`*^9, 
   3.4044083469899473`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Timing", "[", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"S1", "=", "0.05"}], ",", 
       RowBox[{"S2", "=", "0.05"}], ",", 
       RowBox[{"K", "=", "0.06"}], ",", 
       RowBox[{"M1", "=", 
        RowBox[{"-", "0.01"}]}], ",", 
       RowBox[{"M2", "=", 
        RowBox[{"-", "0.02"}]}], ",", 
       RowBox[{"\[Theta]1", "=", "0.03"}], ",", 
       RowBox[{"\[Theta]2", "=", "0.041"}], ",", 
       RowBox[{"\[Rho]s", "=", "0.6"}], ",", 
       RowBox[{"\[Rho]sinf", "=", "0.8"}], ",", 
       RowBox[{"\[Rho]m1", "=", "0.3"}], ",", 
       RowBox[{"\[Rho]m2", "=", 
        RowBox[{"-", "0.3"}]}], ",", 
       RowBox[{"\[Rho]1", "=", "0.5"}], ",", 
       RowBox[{"\[Rho]2", "=", "0.8"}], ",", " ", 
       RowBox[{"\[CapitalSigma]1", "=", "0.04"}], ",", 
       RowBox[{"\[CapitalSigma]2", "=", "0.05"}], ",", 
       RowBox[{"\[Tau]", "=", "5"}], ",", 
       RowBox[{"\[Lambda]1", "=", "1.1"}], ",", 
       RowBox[{"\[Lambda]2", "=", "1.2"}], ",", "Q", "\[InvisibleSpace]", ",",
        "M", ",", "\[CapitalSigma]inf", ",", "\[CapitalSigma]", ",", 
       "\[Beta]m", ",", "S", ",", "\[Rho]", ",", 
       RowBox[{"printflag", "=", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "4", ",", "6"}], "}"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"M", "=", 
       RowBox[{"(", GridBox[{
          {"M1", 
           RowBox[{"\[Rho]m1", 
            SqrtBox[
             RowBox[{"M1", " ", "M2"}]]}]},
          {
           RowBox[{"\[Rho]m2", 
            SqrtBox[
             RowBox[{"M1", " ", "M2"}]]}], "M2"}
         }], ")"}]}], ";", 
      RowBox[{"\[CapitalSigma]inf", "=", 
       RowBox[{"(", GridBox[{
          {"\[Theta]1", 
           RowBox[{
            SqrtBox[
             RowBox[{"\[Theta]1", " ", "\[Theta]2"}]], " ", "\[Rho]sinf"}]},
          {
           RowBox[{
            SqrtBox[
             RowBox[{"\[Theta]1", " ", "\[Theta]2"}]], " ", "\[Rho]sinf"}], 
           "\[Theta]2"}
         }], ")"}]}], ";", 
      RowBox[{"\[CapitalSigma]", "=", 
       RowBox[{"(", GridBox[{
          {"\[CapitalSigma]1", 
           RowBox[{
            SqrtBox[
             RowBox[{"\[CapitalSigma]1", " ", "\[CapitalSigma]2"}]], " ", 
            "\[Rho]s"}]},
          {
           RowBox[{
            SqrtBox[
             RowBox[{"\[CapitalSigma]1", " ", "\[CapitalSigma]2"}]], " ", 
            "\[Rho]s"}], "\[CapitalSigma]2"}
         }], ")"}]}], ";", 
      RowBox[{"S", "=", 
       RowBox[{"{", 
        RowBox[{"S1", ",", "S2"}], "}"}]}], ";", 
      RowBox[{"\[Rho]", "=", 
       RowBox[{"{", 
        RowBox[{"\[Rho]1", ",", "\[Rho]2"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Q", "=", "\[InvisibleSpace]", 
       TagBox[
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {"0.0026904562514984886", "0.005910101619402922"},
           {"0.", "0.0016223883650666592"}
          },
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
        Function[BoxForm`e$, 
         MatrixForm[BoxForm`e$]]]}], ";", 
      RowBox[{"Q", "=", "\[InvisibleSpace]", 
       TagBox[
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {"0.002", "0.004"},
           {"0.", "0.001"}
          },
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
        Function[BoxForm`e$, 
         MatrixForm[BoxForm`e$]]]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"BiHestonUnderlying1Vanilla2", "[", 
       RowBox[{
       "S", ",", "K", ",", "\[Tau]", ",", "\[CapitalSigma]", ",", "M", ",", 
        "\[CapitalSigma]inf", ",", "Q", ",", "\[Rho]", ",", "printflag"}], 
       "]"}]}]}], "\[IndentingNewLine]", "]"}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.4042179165109076`*^9, 3.4042181225929894`*^9}, {
   3.4042182894711933`*^9, 3.4042183203780365`*^9}, {3.404218428926996*^9, 
   3.4042184428647633`*^9}, {3.4042185056940947`*^9, 3.404218515647411*^9}, 
   3.404218545647987*^9, 3.4042186425092216`*^9, {3.404218786340108*^9, 
   3.4042188084030313`*^9}, {3.4042188562320747`*^9, 
   3.4042188574508486`*^9}, {3.4042189321866584`*^9, 
   3.4042189325616655`*^9}, {3.404219027954122*^9, 3.404219150440849*^9}, 
   3.4042191965042334`*^9, 3.4042193169909215`*^9, {3.404219444149613*^9, 
   3.4042194496028423`*^9}, {3.404220002394706*^9, 3.404220071911666*^9}, {
   3.404223202737401*^9, 3.404223224315941*^9}, {3.4042997958015347`*^9, 
   3.4042998138195343`*^9}, {3.404301200209934*^9, 3.4043012204743347`*^9}, {
   3.4043014521187344`*^9, 3.4043014744267344`*^9}, {3.4043236557873435`*^9, 
   3.4043236664577436`*^9}, {3.4043237018697433`*^9, 
   3.4043237041785436`*^9}, {3.4043237952981434`*^9, 
   3.4043238099153433`*^9}, {3.4043239823881435`*^9, 3.404323989688944*^9}, {
   3.4043241933625436`*^9, 3.404324219102544*^9}, {3.4043242516597433`*^9, 
   3.4043243486761436`*^9}, 3.404324548200144*^9, {3.4043248566901436`*^9, 
   3.4043248778437433`*^9}, {3.4043249842825437`*^9, 
   3.4043250001789436`*^9}, {3.404325055855344*^9, 3.4043250667909436`*^9}, {
   3.4043251312501435`*^9, 3.4043251343545437`*^9}, {3.4043275799561434`*^9, 
   3.4043275829357433`*^9}, {3.4043294901793437`*^9, 
   3.4043294926441436`*^9}, {3.4043295500833435`*^9, 3.404329552080144*^9}, {
   3.4043298803197436`*^9, 3.4043298822853436`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" S=\"\>", "\[InvisibleSpace]", 
   InterpretationBox[GridBox[{
      {"0.05`"},
      {"0.05`"}
     },
     BaselinePosition->{Baseline, {1, 1}},
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}}],
    ColumnForm[{0.05, 0.05}],
    Editable->False], "\[InvisibleSpace]", "\<\" \[CapitalSigma]=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.04`", "0.026832815729997475`"},
       {"0.026832815729997475`", "0.05`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\"M=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", "0.01`"}], "0.004242640687119285`"},
       {
        RowBox[{"-", "0.004242640687119285`"}], 
        RowBox[{"-", "0.02`"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], 
   "\[InvisibleSpace]", "\<\" \[CapitalSigma]inf=\"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.03`", "0.02805708466680029`"},
       {"0.02805708466680029`", "0.041`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\" Q=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.002`", "0.004`"},
       {"0.`", "0.001`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\" \[Rho]=\"\>", 
   "\[InvisibleSpace]", 
   InterpretationBox[GridBox[{
      {"0.5`"},
      {"0.8`"}
     },
     BaselinePosition->{Baseline, {1, 1}},
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}}],
    ColumnForm[{0.5, 0.8}],
    Editable->False], "\[InvisibleSpace]", "\<\" Imaginary Shifts=\"\>", 
   "\[InvisibleSpace]", 
   InterpretationBox[GridBox[{
      {"1.1`"},
      {"1.2`"}
     },
     BaselinePosition->{Baseline, {1, 1}},
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}}],
    ColumnForm[{1.1, 1.2}],
    Editable->False]}],
  SequenceForm[" S=", 
   ColumnForm[{0.05, 0.05}], " \[CapitalSigma]=", 
   MatrixForm[{{0.04, 0.026832815729997475`}, {0.026832815729997475`, 0.05}}],
    "M=", 
   MatrixForm[{{-0.01, 
    0.004242640687119285}, {-0.004242640687119285, -0.02}}], 
   " \[CapitalSigma]inf=", 
   MatrixForm[{{0.03, 0.02805708466680029}, {0.02805708466680029, 0.041}}], 
   " Q=", 
   MatrixForm[{{0.002, 0.004}, {0., 0.001}}], " \[Rho]=", 
   ColumnForm[{0.5, 0.8}], " Imaginary Shifts=", 
   ColumnForm[{1.1, 1.2}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.4043275908761435`*^9, 3.4043294958733435`*^9, 
  3.4043295547321434`*^9, 3.4043298850621433`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"{NbLegCoef1,NbLegCoef1n,period1,period1n,\[Epsilon]1,imax}=\"\>\
", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "12", ",", "8", ",", "4.4582257006028225`", ",", "4.4582257006028225`", 
     ",", "0.00001`", ",", "10"}], "}"}], 
   "\[InvisibleSpace]", "\<\"{NbLegCoef2,period2,period2n,\[Epsilon]2}=\"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "10", ",", "6.687338550904234`", ",", "0.6687338550904234`", ",", 
     "0.00001`"}], "}"}]}],
  SequenceForm[
  "{NbLegCoef1,NbLegCoef1n,period1,period1n,\[Epsilon]1,imax}=", {
   12, 8, 4.4582257006028225`, 4.4582257006028225`, 0.00001, 10}, 
   "{NbLegCoef2,period2,period2n,\[Epsilon]2}=", {
   10, 6.687338550904234, 0.6687338550904234, 0.00001}],
  Editable->False]], "Print",
 CellChangeTimes->{3.4043275908761435`*^9, 3.4043294958733435`*^9, 
  3.4043295547321434`*^9, 3.4043298850621433`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
CeEHpm9kPDNE4XMZPQmuJHxZUorQO3MQnSXTn86dJ6FZcHDhoLUmij6r4KB5
kYQ5la6kiFiECsrSpIIukcAvMFzdFKKOxg6kelGukbBnq8KD7VUqyN0paTcz
kIQLf6IY1hriKLpg/Y8zwSTIlIsu853/xS74m5hYEsrV3/WSbXw9Lx4PTpjT
iCLh/baQ82K6CtjjcdyLY/EkCEx/kaFv3oFvj0ueSUokwWGD+NSBblVctPuO
7GASCQ9ve4stuO3Gk80x10/fJ8EjM1xFzQJhCcoa5eIHJKQe9y2imQPeYXm7
/+9DErbXRgkGXtbEnj+iNQOySeCxvyRtlaKNY1XEJppzSXAmmpxl0vfhkitR
6aJPSNj4Zn82O2k/nhKMXH6vmIRtXV82HfY8gKUOry7pf0qCgmWrToSpLla9
F36KXk4CKdNNqyMP4ouKYQ2FlSQkkMKTpWV6OO684MUZTIKZgrJHlYc+Lq0I
obNrSKBf6qo3pxngGf3goKYGEviswlU7zxlimVgBNZEmEs7lXJtYFDLCan2B
3w63kJCpIlRsnGKEL7ndPPi/1yS0Bjz6MZtzCMeX8M0Sb0joHtpb/XqNMS6f
98926eTmrcmKsWBojN/vW25V8Jabl9oVlHsBxvhfuJ/QdDcJt9tY7c/LjPG6
tzyVe3pJOL3jVvqZr8ZYfeMNtxt9JHz3UylpWmOCr+RdbxUeIGFk/4G2MjsT
nDi1eM10iIQj+trl7jdN8HO2j1L8ZxJCtaOTpB+a4N6bC58+fiVhDeMViWtM
8FyrdxT1B9cPvTdfL3wwwRuk5jWcR0iI2OqgbzxhgvfaXh3LHyWBGfAvzXaF
KbbOnE37M0aC+y5XySJpU+w9etlEfZJ7H8QGiqzopjhJ9R+P7xQJvW+z/nNT
McWVPpeKGmZIeDsp9/HPHlPcx5mxE5ol4ZV4KYdf2xQviHitMZknoUz4a/ST
A6ZY1my6Lm6RhJV7DwXz6plilHrBs28ZA978qG8X4bLt1z/EpuUMyHp+7dQw
t95nq+dbR34GLHxCa2K4/Z5+vfM5UIABj4r3P89im+KR1LKph6sYsFdc5Pz0
TlNMNe/hbxBiQEtVY3HYZlNsKTYnObyaAZtKDdrPK5jiW00b6MvFGGDeWfDv
uYQpbvJFqpsoDIhe7Gaf5u6/pHZcR1OCAbGplKC4aROsOn7j2HEpBqyyrb6n
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
XKbE/U9DrqqJ/X/i43DK
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    PlotLabel->FormBox[
     "\"1st Inverse Fourier: K =0.06 \[Omega]1=0\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{Automatic, Automatic},
    ImageCache->GraphicsData["CompressedBitmap", "\<\
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
eFXs\
\>"]], ",", 
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
uKhBrzaajgsvW/09ClToyPdK//eO9utbC3fffQr8mOqJCDVopCUb3hNcfkCB
Ywa7UuN0G2hritzSyvEUmKoIV8nWqKPRxjh2xabQ/duFnzxNotEun2jaU5BG
gdNpJ/nVKqtoMu9C4X0GBSKZdpURB17TAnPYjq7nUOB6Jq8In345Td+Rxd6h
kAJP4yg3Qhxe0ha66p1vFlFgx/tkC7GbL2g5+nfcEkso4G2+Od+i95TGJsfk
87GcAkM+AvOSC5m05iHCg501FPAxahWzFI6m+R6riTeppQBnfmHWWssdmnLt
rcfO9RRYozw0lzp5lRaVvpH7+D0Fzs6p665+8aaan12nMbdTIErcxWNDN5nK
2PamXrqTAuHB057c7KnUYuTbrPOZAgL/pfqZ/kinCpNWP1/8RoHa5063CA45
1K+9S1NdgxSI05z56NRRQA0zLp/985MCapX77tw+/5K6p9prmX2UAom7bY2P
ny6iPnq8wLRvggKshtcWCrRLqLan5sSzZymw1F3T1JL2isr3oVgGz1MgpYp1
Jd+1nFqz54r8t0UK7G8yqr+uVkEli8+o86xR4KuKNPv2vEpqR9hLbYV/FFgl
g8OOU6+pQSuX9+ltUoD0ZivpLPsb6vDXP4c9mWShxCL3eLx5FTXucIHJfRZZ
GPd2ZHz9u4p6sOLS8Xw2Wej6xehhcqeampswdaaXSxaSTbW8udJpVCu2545L
PLJgG8JkaqGAqezerq4C/LIwOa/qcCwPU10sJ7wMhGVBs2Nx6bhxDXV/3bZX
kaKy8JTrSdPr8BqquNqFhU4xWTjYagXKDTXUZo7xq3ZSsnDUdojXVv0tNcNL
oSSfJAsXkhx9dtq/pfr8PD87TZaFk0Kdhftj3lK3V4+435KXhX/Koqsa42+p
zEpbXzYqysLpa7Ont/PVUn/EO/zl2S4LU4JnFUI1a6mlTFkqFjvo+Tsrgo9b
1FIj3X9eeqwqCz8YP754dK2W6tBLefFTXRZ+38Ktzg9q/9dwmYfV1IVRvJI0
l+oqhHLnK0mRirN7RZM0XSShFCUNJKmENEmjJpK+RDQgkgaa7lb3akClOSFS
mVNppvCdP3/Ps4e11rv2eZ6DNm1zGeKsowK/cWZJfT4fKT3OWuWrSwWPKgl+
jYCPhqgfPMr1qHAgP3v0YA8fPU1Uuyu0kQphfy6/LBvio4w/Tl9NCSqUtQrC
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
/wFLsYc3
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    PlotLabel->FormBox[
     "\"1st Inverse Fourier: K =0.06 \[Omega]1=0.2\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{Automatic, Automatic},
    ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzNWmloHVUUfpk3b97LnqYRxAUCivjTn/4RBXFDRP0hCiIYg5AI2lKjiBv1
h4krYivWgs2u4gJWJC1CRbGgFsSAWBQVSgWJPywFi0hAiO/c5dxzZs6ZOy+N
y4OXmTn33O/s5947eTeNTU3ce//Y1OT42Oh1u8Z2TkyOPzh67Y5dbVK9q1ar
rbS/D4/W4H6jfev+rNQ2NjZg0FwGzaVuh9p38F2yQxlcUhhowF0CPMt2qGln
1fwsZMohdVva6Nra7y/t3fN5a339r9o+N6OOM+GT1JAUYOGb6rCr4/e8N7P/
tWNvPbX7iIftFiAMrEFomefG9ce+/PnwQ1OH4Om7u+58+9KTJ0/XXo0A5HRw
UGDWznff+QaeQJdH3lhe9VCZM4BOUxzl0E7cftub4Cx4umr1618+2fHAhx7N
+Ny4KcNw2Gn1oTNn1k/feMOceUos7c9rrn7d+BueXtGD7UJJXeIhQDpoUREC
TAcXUAh0SR6Cqg/xu+PjIz/RifBs4lpNNqTCZT/+8BuFgKhCdCtCrN1689K5
p079QSMOTgXnmqe9OkQmxMEl7heTEwcvP/7trwUI4wEnG2NNJu578YWjEx8c
PF5RNnOYg4DEhAStCMECmAp5oak/NzP96d2HD31PJ4IrwaV0omGvazXgtABp
INVWhBCHPRasVbFZOFiscwLLYuNgO+pLRlIm6NgQYtih3g0hpzIhrpuDhWKB
oqGwtxz97MT7jz36USXYhJjOkiQTqm8PiX9oYbJm4C/wG61N1sxe1hPZLlS7
52a/auX6gg1j+zMiGLQd9RrBu2HM1QRpg0iTsuSCiF65OrGmZeBwcDziuauk
57Bzf25B6YycCMD9TiNKy+nDzKPBZ/VqjWKrIgIYL6d498/ZwWkS3/nRULEF
pSlkpgQ7lKOFOBa0DymnOKOqeVJvOi9qHlvsnHnQCaEjquZt42VS7zyUW2UU
zb+NK6/Yj0zOFGyamtBgyjlnXWe6UZVYS4IlLaV2f5riauM+vTa6sHmEjgLD
0G1MjBuC1NDoQiYO410d7wYF2oVRjVkquR01W2ytuk1QFyoNGiBYA80RFg1T
eU/mA+7sYKuNA2cNp8fSYMGATZURWg+JATQj4ImoHaAPuJGKYl3AiWILcspF
mR304xFRZs1yYGwz2B1sgcOBiWfGBZjmOxAcj7uc+6zQPrgcAJl9uhbkiIPb
8UTla1Ia7SWGnhZ56O6L8AxTHrARnAgJAXTgBxr4AxwMtnr9IDC+PZPUgFtg
Nz5PzF9DA++afVg90JBPoiVbzPdfzdX5mpQGX1+bJiT90dJgh8NmMeJ0X2Po
mZDdrg1AJIEHsgS2ejAOmWDwhwQdRgTa9op8LYG2LWouPZn7qmeHW+ko9LTS
wdhRwYGx81sWqh54zdZ3Olq8wAbuI641r15AdwrLuloclkH0CRY4q9hGcDpv
urQyODC2BSZrHgg1ps9EdWRHlz69KTNaHJZ5qk+wQDrkz4immw4/IHjPdVl2
IHsmqhlb8PqF3HOw7N1KHJaxu1MBq9j2l4XmWSXOrD1Ysxt0T426PmcBTFXW
w8ogasfO8BY09eEAQFiWn7d4VV/jORrbDw+GiODhfXOwbG96IAJhEBKh5mY7
ky0l1OYgWORnSaDMNjC8FZaqZVbPtUSoxTg767aUnarASiCOyVpWnJ2VuaYC
WynimCxFGHvG2Ntff6qZL+XyqeO4zLqUYmElJMlYeOdIeHNH2FQW5Fes+Vhu
FWb6yLuZPcLMBCvCgmD0Y3OK0nxPow4pHs0UI30fm9ezPxHiPlcaIv86iwWy
QbnwALuQzzLrDizuBRUCl0SdBStQZ0G/K4pgwekQWGQ6C/pugcSozt2c298s
xPIg9QL8m8jFyjO86xbFoLusxNYF32gNILZ/JVxdG991Fst8w96QMkcbdfFt
7FJhCLs2HXKo2EplVNybFlGxqxaHELAgcDnKu9LpJUFvhbvwJiNFmtvE0o8N
RU1+axNeCgdc10PIJ0hq8KiFnU6zkvRggdgnOV8/t7SQj37A3GWoYlH9ANmr
QtqJOOAuDSbS87nEZmNehdIp8lhdhlOk5L2neVT2WcdGWXL5K3VlaneJNFP9
LS22VYTq8wqKKA5OS3VQJrH0EGaolZZGfZ/lZWkh18Ibipn8X8d68l/LBekl
rbJVGSzRID2rDOjIqt6SKZnqODE/Nmg/3uL4p1omhLfa4UcuWuw2Ee5MnFKm
kPSrmqH/f6ylIklorDexGMjpQVYod5VWIzXWTlMlWfRuQQLWeR6Ifa1UzbDd
NJvDSLNX00xtqB007fJOLxV5Fw28tlUp7jSk7ic15Nw/5MmoOiBMU36YFTZF
BIirqpCLwVbyNW8nfOIl3tJizHTS67CjcpZ+8VESVUmq1MYvEmiXyNrF17ey
MuQiBgVa2f6qxPoQV+mYp9ssC7q4ZGxgkw6Q4tOPWpcFPY6qgxuSMdX0omGB
b4BXVu6UkuFdA5UdEFB6hBmuwsSzX63rb1kT17E=\
\>"]], ",", 
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwUV3k4lG8Xtu/7bqwzpJJkJ2WeUwmpSIs92SuEIlkSCgkhEtFPkURljezz
2Fss2SMhUtYYImXJN99fc53r3M85932f87zzvkRHr5MuDHR0dAPMdHT//62L
5dUwNkskr89D/zOhcezg1KMa2e6NXhti77O0+OA6Od6hPRQ5/iAYhQuO4x79
+8x0GndQhfxOF4LAOFZ7u6xn2p6AKL5Z/TJ843jNXSYggy4ZMVQTi+9zj+NG
PuPSn+oPUZeuHG8AxziOLfNd2H/+PxR6gpG/nWUcK+abChu0P0Eu2za/JDCM
47itiZKfP7JQQfqOx02bY3jJLPBEMt0zVB/pf+fCnzFsns07v5/wHCmrVvRc
XxrD1b+zYybU89BIVVQ1/dwYlj2iuzP2+Eukj+zCVyfGcHj6xxb18/lorvn6
NbvhMawguxl6oL0I3WJ7LB3WNoYt3781Ff5cjNRbxG/qNY7h6CuJ0tM/SlDY
sUZPj8oxPN+0vSaBrgyZFTSGyWXT6nsuRTtzv0H6mt4Rr1LH8EnRWisdQjna
YzfXlhc7hssvnlwdVa9EM8Lmsow+Y3hGQKrlNVQhQmq3lr3LGJasmbx/+3g1
eqynkqNuMYZDeYLV9pyvRRXxf8fQ3jGcPdijhdrrUOFY08Gt31+xnvJe6bxT
9UjHWtFT9vtX3H8zg1nwcz3aL+Gxrbb7K2ZTutj740cDelN/TNvj1VfscePf
5Ti6ZnSROZOr3OorZu5xsvoT2YxG4mKSPxz6ijO2vwdH7hZUoS6uar/7K+7s
TOLVIrxFXaP5UYr/RrGm3M78YfX3KL4sePDm3lHccS3uvmHVe/TcImBxi3kU
X2j7FVQMH5BLLX9tQtcITrtKMY443opKqttnVlxG8L+3p6aUzrejtS0CHVf4
MHbSwvzk9k50fjWu3zNlCD+KuKxJEOlCwuTz6SUnhnBvr5zVb7sulDd+/BI3
+xA28Il6UkDtQqerZ8uFr33GO4rM9sgI9aBXUx2pXUaDeH7nxDE6mz40xeHJ
KdHSj/2l2KMapgYRY8eo4ruDXdjg5s4QuZtjyChF+uNyWSk2ebkzZnv2GHK7
zcu72+g1PtO7M2VXyxh615Mt1/q5GDsrKBaqc4yjzMnZF18ZCvDND4qjhxLH
0e/k38caXmZhioAScs76hrbJxLN2xgQjrafKW9kN39GpOHp5pFOOyG3KnHkT
3xH5C3d0eEgFOryiLJrP8gP9qx0of9tUiU4b7tlTZvwDyS9v+yB+pAZdmd1z
rrn7BzpvxDA4mF6HCtRV8ffxSVSuMhvwyqwZvbFVbZ1mmkL1/3LnCsebUW2E
6qefClNIxWlo6uyVFtT2SXVhxW0KVTZ8y8q5+xbNBKnJsPyaQsfy//vn9vo9
UmhSD1FgnEFBBAnWtfJ29OjOn8oQ+RkkEjTFrr2nAwmY1i4PHJ5BbUQLp9ns
DrQ1aOAWEzWDVMlJ1a9iPqKBBaszVO5ZlMnirSv5tBOZlEknHNkzixJEIvnc
BzpRU+C3D1knZpECT5H8NFcXKma+BGeSZtHvS9a3Lvl0oWiJ0F1VYnPorOGJ
lCta3YhuTN9VUHcOmaWtp4q4dCO/HPZMD5s5pPdFvHU0sRs5qSaJyGTMIZ0Q
yyvDs91ov2EOfbjcT7TTKaPjYlIPKuFy3z+s/xMp+JnyS1T3oJ3de65puf5E
BSttk9NjPUjkbOXcVO5PxMM6ojes1IsWrrR9Oq48jxTWT+5jrehFrjr3BJ6b
zqORpq+37g30oi+bZ47TXZ5H6gp+ZI0/vehd1GhDyet5pCyhqFWv0YfIJtmb
nH3zSO3VxawXZn2oTPCijsvveVSXsDDy4lIfyspYyhfdu4DKW4Pvz2f1ITHn
8ilv6wV0zndPrGpNH4rbeV3uQ9AC4jb2MYvu7UNBpcwPr1MWUGPRVMF1hn60
FPChp290Aa3tHhUSEetHpY8Nb6fQUdE28uS3JqV+pOjC1UAlUlGkUkOT46l+
9P2t57n/1KjIU+zjkplLP3qi2LVx5BAVnU0+1WDu149s7qqn/T5FRX/Nqq0u
R/YjEWqy9lNnKircJTWdmdyPuk7+6TW9SkUgo/Zi6mk/ii2zvrIRQUUWzMe/
Hi7uR4xBMvlnnlOR9WLOlP77fkQZDjNmqKCiK8Malyd7+lEgTEwWvKOiuBqz
oczhfqT51CDCZpCKck5UP/T90Y+ozHkkthkq6oiK3mE/349eXuCsK12jooQz
27ldVvqRa+ulsw6ciyi1cX//rfV+RFTuXOOWXETtDq8kauk+oS8JaqlVSouo
/FHoDX7mT6j7y336LvIiKtvw/1DP9gm927HqNnliEfEnDni5cn6i/c9Y9W46
LqK/dCb2dNyfUFldtZ7Q1UV0dvb7wwRa/IpL+rni7UUkuG9ZQYwWZ1mG8h14
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
4mvZqn5bPSKganzn7vbJs/h+9p2+GwMi0LQZePidtR0uyR7T+PdFBBZWGcLG
Ptjh+ex7vza+i8DBnx2DMU/OYddni95rqyLg3SPVK3rPHhdHxMUrbYhAZPni
K8kqe7zhsqvAjk4Uin8fmc0Zs8dJCi6zDWyiEPz21dApJQc8wsLAscIlCv5a
jwYDTR2w4mTGju38oqBwUqN3z2UHXPd8wCVGXBRkTjhxHC9ywJxRV8NrpUSB
fneiQFW7Aza/IPB0gSgK3D6/CinTDvjnjmNfTynS8j2Xp1KlHLEO+/S/CGVR
CP/r1+Kj6YjDpyOkKtREwU1lgEI96ogJL7C15D5RKGJRkPji64hdom0DTBCN
76GJ3SduO+Iit78poYdEYeeH9fLLqY54w/jBmxJDUbhO+l14KNcRG+5S75s4
KgpeJvvE3r9xxImcnb9ETojCLgP8j6nJEY/MeggcOS0KQf8VXl/76Ih3trGr
BlmKgqEZ8c2rz47Y91WOab6tKBR8pwxKTzhiHHvIc9ReFFyS/GRPzzlijktf
Y/ldRMF0eke76S9HbH48+OWhi6JwMN5CSfivI87cTfhw9ZIoJFv0Jj3fdMRz
3OVTzy+Lwuxzb0cOeiesM3+K9fNVUeBXzt8CRid8q4O6jStQFK5sXRwyYXLC
HQV39ck3ROHd5weXtGmxeLyik/dNUWAWmND8x+CEnb3ehmVFisLQI5/qHDon
XGTq/KQ3mqa/LjpWg9ZvfQ89ZokXBd2lQ+SXfxyxAV/GsE6SKOw1P+DBQ+Ob
SNXdcEsRhR0x5yocaHqGOz8R/ksXhWvEix9yaXp3FPvu/fhYFCbRB9PJIUfs
c4/fkj6bNj+2w+uy3Y6YcrnATz1XFBhtcsKt3tL8OHk02eWVKHw6FJR7v9oR
n1Gbep1SJAoLhS3b+wsc8ROBiO73paJgslL+lphJ82OJuLheQduvFw5mQYmO
+OZrG2X7elFIuTJpcf6KI25P+nMssVkULhE7r9E7OGIx32T3pvc0vakbLRUm
jrhQ42Pujm5R4MxNM4/b7ojXhDzeWveLguQBIZNSAZreFbYfsZ9FITDNcpxl
0wF/KTsotzguChmzQ/YHPjrg7Q9GD8hNioL2q3hu1XIHfMXvuv2ZWVHIU/Yd
ss1wwOzab/6r/EXzb3LMxd/NAWtV7BS7ySQG1netNnet2ePOxJY8HnYx0DMw
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
KR94nLNc+R+SSCf/D+I60fk=
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    PlotLabel->FormBox[
     "\"1st Inverse Fourier: K =0.06 \[Omega]1=2\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{Automatic, Automatic},
    ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzNWltoHFUYnuxcdpM0aRMtVn0JKOKjj76IgngpIuqDKIhgDELyUBNqxFof
jFIt1LQRxTapYh684QWsSFuEimJBLYgFsSgqlAoSHywFi0hAWPf759z+mf+c
s5u04sJuZs7l+++XOZM7x2cnH9k2Pjs1MT522/bxmcmpicfGbp3e3hlK+5Ik
Odz5zowluG53LtXPZUm73U7S8qZzhe+r9Jt0N7Xp/PlVz9Rn049+3Fpd/YdN
NQgvvf3E178a1KXa1oeOHvlxeffznwuo1/380x8nJx7+gE9lms2/b7n5NRA9
KM5+NTV56PpT3/9+sM7Rgb3zxyc/OnSqzpHZveOtN0/uXlo8IWPfffyL0x8+
tfMTeVazLc+CY3Au8IXLlXvuemPL2bN/cb5y1zRaMr2kSRAGIckT1460pPMp
6kAQAaJooHJJxrabnSkbzupoUBfUptEUN/pDDHZ402Mub4SWmfnSEdOZ99/7
buHll76kZYtBFrMKix6B7//02C/vPDN3LCJwbhQqYNx08tvf4O7rwRhbWfnz
9H33vl23YLM7XePbvvGGJeYl5EWNEsC4Ee4OuK5UVHF+ePCBd689c+bcYnAV
RIbo4VUIZAR0eBWMCuMuepjXwdcF8zp7hAlqm4VX6bj1sQV9Qq91tnjmVMvJ
Pnpsvxyq3GNTGyEiIjPq/rj7VeADyNoHXOQe4tefIURq2pe6kEOKB+IrdQyj
vW49eDKn2lO7QM6ChqiDN+aWX/9mYzmLmgCFUAl9ruoqBb+SOTVlFHfD5djR
x2ePQNf4q2EDDotCTUtxN0S/ua50uDNlc1c1QJQGUZRQnFwA19YmgHZFeTEZ
EncbyjH0H+fu2LrsrjMlDHfPRmF18aW7QfxmifUjUx4cHTJ7jhpLXGKuRsgb
DQqNDZsxKYiu8LOpFAkpTbc1aBkh7TsMQxysJb+RGB6RnbK34YYAXJqkycbc
zFCVk9xEpQTYFfZ1paM2T29OBdtaY41eXJn4mLTu8qj9WIIbKDlgrmdjhsXt
YIWa8bS6ANYVPfroVsJqIcJ3y5okNJ0Rl5CVzQ08gtLeDXpx5WKlZMBygNyn
OVBubNpwYzmS69J1h6Ffwq6WxoVkVW3ACp7oT9m8okANCQRs7rNOOGKuUnM1
LIxd6ckJrOUbEBSs6igrMXNRSVl0KVj92Eh3qqKyhPt0FJZVyv5yDO0T2ii6
a3q9qdASoD3EF3uwZjpK1TwOO1Td+qypsjLWbxWB2CR9ll6TgWNwiHwMnG1R
DlhV7hcspziAKhHypOYW1xmNldbMgQfugYnaRs1tbrMJuIYXQpompRZSKYbw
TbbSb2qKiYnEJNmMP69AiEG/WOrJivXVbRVa6rGNOaGeU72extIKb1oSZktD
IKs6SLANKTEH8oE+VDJGdF1LGBtax15pTNq7OaZw/rihYJkR1Bh8Bb5h/YKS
0hNRAqw8OU5p2scBA5bZxGJOsVwClKVyIZ6bQlSqFAN+ISOllIYlj3XkrDui
ErAcLQV26dYF2NFjIIsQQ6g9GaFAsreEEFaVBmPIlDAL8HZGOWa5VnHMTtqG
rFHN3jislOGYefd4jCUlZNZ67onSZq1LYdk3fdwLfgj94OeeAuSCy8QhGNO5
oJU4hFRKmdVdCFKikhauBbdzNzKjxmmzoFFjrLVXEOSM4bMR6UxBkiYX0oyi
0lT2rTRS0nlJgBqLxExwjPkgNem8xJ5qKBqsnc4Enw7TkE46pGytqLHSLoXe
haGmTzDcqEgFC4apec5aJIMVQgylgh/PV53QnrpIRziFEFepMDZfjSspMUpP
/e5GmTbTl3REuTcKwdxYOgWKQ7BcpiDYwX0AotRFwRrytn0tsa+qu7JcFSys
2/YAe1+MUu5q3ahqIbrNrWxGZfFtbkiZJLhQFapsozPoEKrHBigjAN+ymtfV
OXnRv7ynd3zVqcO9/qG2xB6HpSafN0yEllnCniTrT+lBifxUaw/XLK4KeOdj
KeVmlb2i5c2uqFsJJD4q8g1xSWuJXU+kPK/U2beQ1EjmFlK1ZfKrPfU8x+YS
8wQT2CLPpTKch0pVST7FyarpWaiGijBpS2Rrf4AahWzLZ8JuiPr31RjxKFh0
z7ph/Kdd3uDJonouasQ85vWZ0sanc+Rdau0/s3u1ibPka3AbAxxk67J2T1JJ
x2vMylkVzabRC2xj90VIRSwtr31D77PPGkxaiFtCDFU9Cp9N/w97Su9gGq49
15DAZRdwiof6Kz01ee2plOhxCH/UO0bp3dZifgqyadtxKoiRBO11JW9i9Bel
QHaWoq/PNbKvY6gXfCljSUm08n6x9lZRmBC2ed5c297EAeKseobrhvX4pvR4
HQ/Zls+ejCf/o6cn63dtOf8/4/Cxq4Sxa0IchIQOhRUnIUkjFRQloX1F1d+T
XDJDVwfmhtcopBSNQ4brwehO0Yi2OSdxKEeMCuvsO3upsS/Mlf3HLinZD5h1
KgbEh6Sk71893yX4\
\>"]]}], "}"}]], "Print",
 CellChangeTimes->{3.4043275908761435`*^9, 3.4043294958733435`*^9, 
  3.4043295547321434`*^9, 3.4043298968089437`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBWIQrZRz/FfHvnv2bfVpi5U4bti3vFnV5ZL21N5q/Xt2
i68b7TdM6EuO7nhj//x4VUf7vvP786Qs5SyvfrS3T1601Gri7f0Q9V/tY1Zl
fAyvurN/1j6Z7/7ff9i/+tbHeabzyn6I/j/2TySSFbl3HNifbMiQsZmHwWGu
ntR5l4vL7SHmMTokBG2vtDxz2L6SuejKvrnMDiucE1LfLzwGdQ+rw8PEmh8P
zx2w77/62OGUHrvDhVtV4sVZa+wh9nE4ZH5efqlAqWf/0uWha6/u53JQOzpZ
pbVpNdR+Hod6ZZWNE0+t27+78rjkwwA+hwnpda3nLiyFukfAocn6rdqUPRP2
v1gq4/ztg4CD0P2fOudMy6HuE3RY0P7kPKfbRPsvfaE/q3cKOejFMV8P2TUR
6l5hBy7FX9f2XW6z/1fet56xScShRrnwofPfbKj7RR2e+i5e/GFq0n6uxOOp
7V5iDilhxqJTzxfth/hH3MFhevfXqzcL9ot4McjwCks4XF7Cl1DXkQQNTwkH
fV3254JVlvsVjC0vTbot6XB0rtCKldM87CH+lXIQ7PrF1MsfaA8A+W7hpA==

     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotLabel->FormBox["\"2nd Inverse Fourier:\"", TraditionalForm],
  PlotRange->{{0., 6.687338550904234}, {-0.44496725630839307`, 
   0.37549653966015517`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Print",
 CellChangeTimes->{3.4043275908761435`*^9, 3.4043294958733435`*^9, 
  3.4043295547321434`*^9, 3.4043298981193438`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"15.194000000000015`", ",", "0.0053748768874671456`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.4043276044013433`*^9, 3.4043295094921436`*^9, 
  3.404329568366544*^9, 3.4043298986653433`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", "  ", 
  RowBox[{
  "utilise", " ", "le", " ", "beta", " ", "comme", " ", "source", " ", "de", 
   " ", "vol", " ", "de", " ", "vol"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.4043007591483345`*^9, 3.4043007916587343`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BiHestonUnderlying1Vanilla", "[", 
   RowBox[{
   "S_", ",", "K_", ",", "\[Tau]_", ",", "\[CapitalSigma]_", ",", "M_", ",", 
    "\[CapitalSigma]inf_", ",", "\[Beta]_", ",", "\[Rho]_", ",", 
    "printflag_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "LegendreCoef1", ",", "LegendreCoef1n", ",", "period1", ",", "period1n", 
      ",", "\[Epsilon]1", ",", "LegendreCoef2", ",", "period2", ",", 
      "period2n", ",", "\[Epsilon]2", ",", "imax", ",", "\[Lambda]1", ",", 
      "\[Lambda]2", ",", "Q"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Q", "=", 
      RowBox[{
       RowBox[{"CholeskyDecomposition", "[", 
        RowBox[{"-", 
         RowBox[{"(", 
          FractionBox[
           RowBox[{
            RowBox[{"M", ".", "\[CapitalSigma]inf"}], "+", 
            RowBox[{"\[CapitalSigma]inf", ".", " ", 
             RowBox[{"Transpose", "[", "M", "]"}]}]}], "2"], ")"}]}], "]"}], 
       "/", "\[Beta]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "LegendreCoef1", ",", "LegendreCoef1n", ",", "period1", ",", 
          "period1n", ",", "\[Epsilon]1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "LegendreCoef2", ",", "period2", ",", "period2n", ",", 
          "\[Epsilon]2"}], "}"}], ",", "imax", ",", "\[Lambda]1", ",", 
        "\[Lambda]2"}], "}"}], "=", 
      RowBox[{"BiHestonVanillaOptimalParameters", "[", 
       RowBox[{
       "S", ",", "K", ",", "\[Tau]", ",", "\[CapitalSigma]", ",", "M", ",", 
        "\[CapitalSigma]inf", ",", "Q", ",", "\[Rho]", ",", 
        "\"\<Underlying1Option\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"BiHestonUnderlying1Vanilla", "[", 
      RowBox[{
      "S", ",", "K", ",", "\[Tau]", ",", "\[CapitalSigma]", ",", "M", ",", 
       "\[CapitalSigma]inf", ",", "Q", ",", "\[Rho]", ",", "\[Beta]", ",", 
       "\[Lambda]1", ",", "\[Lambda]2", ",", 
       RowBox[{"{", 
        RowBox[{
        "LegendreCoef1", ",", "LegendreCoef1n", ",", "period1", ",", 
         "period1n", ",", "\[Epsilon]1", ",", "imax"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "LegendreCoef2", ",", "period2", ",", "period2n", ",", 
         "\[Epsilon]2"}], "}"}], ",", "printflag"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.4042074577632284`*^9, 3.4042074770760994`*^9}, {
   3.4042075328115444`*^9, 3.4042077538626633`*^9}, {3.404207970241818*^9, 
   3.404207993351637*^9}, {3.4042080286491895`*^9, 3.404208043665103*^9}, {
   3.4042173037335176`*^9, 3.4042173873444977`*^9}, {3.4042175109093704`*^9, 
   3.404217554472707*^9}, {3.4042999349691343`*^9, 3.4042999555923347`*^9}, 
   3.404325362832144*^9, 3.4043253935953436`*^9, {3.4043813496393437`*^9, 
   3.4043813704653435`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "utilise", " ", "une", " ", "matrice", " ", "complete", "  ", "comme", " ", 
   "vol", " ", "de", " ", "vol"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.4043007956367345`*^9, 3.4043008208619347`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BiHestonUnderlying1Vanilla2", "[", 
   RowBox[{
   "S_", ",", "K_", ",", "\[Tau]_", ",", "\[CapitalSigma]_", ",", "M_", ",", 
    "\[CapitalSigma]inf_", ",", "Q_", ",", "\[Rho]_", ",", "printflag_"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "LegendreCoef1", ",", "LegendreCoef1n", ",", "period1", ",", "period1n", 
      ",", "\[Epsilon]1", ",", "LegendreCoef2", ",", "period2", ",", 
      "period2n", ",", "\[Epsilon]2", ",", "imax", ",", "\[Lambda]1", ",", 
      "\[Lambda]2", ",", "\[Beta]m"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "LegendreCoef1", ",", "LegendreCoef1n", ",", "period1", ",", 
          "period1n", ",", "\[Epsilon]1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "LegendreCoef2", ",", "period2", ",", "period2n", ",", 
          "\[Epsilon]2"}], "}"}], ",", "imax", ",", "\[Lambda]1", ",", 
        "\[Lambda]2"}], "}"}], "=", 
      RowBox[{"BiHestonVanillaOptimalParameters", "[", 
       RowBox[{
       "S", ",", "K", ",", "\[Tau]", ",", "\[CapitalSigma]", ",", "M", ",", 
        "\[CapitalSigma]inf", ",", "Q", ",", "\[Rho]", ",", 
        "\"\<Underlying1Option\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Beta]m", "=", 
      RowBox[{"-", 
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{
           RowBox[{"M", ".", "\[CapitalSigma]inf"}], "+", 
           RowBox[{"\[CapitalSigma]inf", ".", 
            RowBox[{"Transpose", "[", "M", "]"}]}]}], "2"], ")"}], ".", 
        RowBox[{"Inverse", "[", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Transpose", "[", "Q", "]"}], ".", "Q"}], ")"}], 
         "]"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"BiHestonUnderlying1Vanilla2", "[", 
      RowBox[{
      "S", ",", "K", ",", "\[Tau]", ",", "\[CapitalSigma]", ",", "M", ",", 
       "\[CapitalSigma]inf", ",", "Q", ",", "\[Rho]", ",", "\[Beta]m", ",", 
       "\[Lambda]1", ",", "\[Lambda]2", ",", 
       RowBox[{"{", 
        RowBox[{
        "LegendreCoef1", ",", "LegendreCoef1n", ",", "period1", ",", 
         "period1n", ",", "\[Epsilon]1", ",", "imax"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "LegendreCoef2", ",", "period2", ",", "period2n", ",", 
         "\[Epsilon]2"}], "}"}], ",", "printflag"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.4042074577632284`*^9, 3.4042074770760994`*^9}, {
   3.4042075328115444`*^9, 3.4042077538626633`*^9}, {3.404207970241818*^9, 
   3.404207993351637*^9}, {3.4042080286491895`*^9, 3.404208043665103*^9}, {
   3.404217016149871*^9, 3.4042170184311647`*^9}, {3.4042174130637417`*^9, 
   3.4042174217982845`*^9}, {3.4042186116648793`*^9, 
   3.4042186161962166`*^9}, {3.4042999781187344`*^9, 
   3.4042999878063345`*^9}, {3.4043245662649436`*^9, 
   3.4043246043289433`*^9}, {3.4043253661237435`*^9, 3.4043253674653435`*^9}, 
   3.4043254021597433`*^9, {3.404381400183344*^9, 3.404381400776144*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BiHestonUnderlying1Vanilla", "[", 
   RowBox[{
   "S_", ",", "K_", ",", "\[Tau]_", ",", "\[CapitalSigma]_", ",", "M_", ",", 
    "\[CapitalSigma]inf_", ",", "Q_", ",", "\[Rho]_", ",", "\[Beta]_", ",", 
    "\[Lambda]1_", ",", "\[Lambda]2_", ",", 
    RowBox[{"{", 
     RowBox[{
     "LegendreCoef1_", ",", "LegendreCoef1n_", ",", "period1_", ",", 
      "period1n_", ",", "\[Epsilon]1_", ",", "imax_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "LegendreCoef2_", ",", "period2_", ",", "period2n_", ",", 
      "\[Epsilon]2_"}], "}"}], ",", "printflag_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"BiHestonUnderlying1VanillaAux", "[", 
    RowBox[{
    "S", ",", "K", ",", "\[Tau]", ",", "\[CapitalSigma]", ",", "M", ",", 
     "\[CapitalSigma]inf", ",", "Q", ",", "\[Rho]", ",", "\[Beta]", ",", 
     "\[Lambda]1", ",", "\[Lambda]2", ",", 
     RowBox[{"{", 
      RowBox[{
      "LegendreCoef1", ",", "LegendreCoef1n", ",", "period1", ",", "period1n",
        ",", "\[Epsilon]1", ",", "imax"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "LegendreCoef2", ",", "period2", ",", "period2n", ",", "\[Epsilon]2"}], 
      "}"}], ",", "printflag"}], "]"}], " ", "/;", " ", 
   RowBox[{"K", "\[GreaterEqual]", "0"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.399897194377056*^9, 3.399897245940546*^9}, {
   3.3998976692611732`*^9, 3.3998976795269957`*^9}, {3.4002144512750473`*^9, 
   3.4002144569782815`*^9}, {3.400238263213356*^9, 3.400238300573448*^9}, {
   3.400408049201395*^9, 3.4004080510451803`*^9}, 3.400504474791651*^9, {
   3.4005667653701477`*^9, 3.400566798886416*^9}, {3.400819839626373*^9, 
   3.4008198425014277`*^9}, {3.4009134614843187`*^9, 
   3.4009134792034087`*^9}, {3.4009135487047434`*^9, 3.400913581252243*^9}, {
   3.4009136129872274`*^9, 3.4009136377220774`*^9}, {3.4009136698945704`*^9, 
   3.400913678910368*^9}, {3.400913713848539*^9, 3.400913720848673*^9}, {
   3.4009138946020093`*^9, 3.400913904914707*^9}, {3.40091789471006*^9, 
   3.400917899053893*^9}, {3.400921389214653*^9, 3.4009214402156324`*^9}, {
   3.400921492029127*^9, 3.4009215467489276`*^9}, {3.4009217594717617`*^9, 
   3.4009217705500994`*^9}, {3.401110611225083*^9, 3.4011106255847335`*^9}, {
   3.4011155613669987`*^9, 3.4011155856330895`*^9}, {3.401425790206461*^9, 
   3.401425813269404*^9}, {3.402046069834562*^9, 3.40204607210023*^9}, {
   3.4022357520580764`*^9, 3.4022357573706784`*^9}, {3.4022370965213895`*^9, 
   3.4022371025371304`*^9}, {3.402294637481146*^9, 3.4022946494188747`*^9}, {
   3.4022947595616145`*^9, 3.4022948086094313`*^9}, {3.4022949118926644`*^9, 
   3.4022949123770485`*^9}, 3.4022950944274187`*^9, {3.4023880298479567`*^9, 
   3.4023880317599564`*^9}, {3.403871467549989*^9, 3.4038715521922393`*^9}, {
   3.4038772034257407`*^9, 3.4038772338482*^9}, {3.4038778690791464`*^9, 
   3.4038778880951366`*^9}, {3.403877923330188*^9, 3.403877959690261*^9}, {
   3.403880525208268*^9, 3.403880528802087*^9}, {3.4039401668863335`*^9, 
   3.403940181277235*^9}, {3.403940658427021*^9, 3.403940660661439*^9}, 
   3.403940704459155*^9, {3.403947868049818*^9, 3.4039479096443667`*^9}, {
   3.4039621859965925`*^9, 3.4039621885122657`*^9}, {3.404149535953335*^9, 
   3.404149547107335*^9}, {3.404198055801464*^9, 3.4041980594734097`*^9}, {
   3.4043002987767344`*^9, 3.4043003215995345`*^9}, {3.404325523574544*^9, 
   3.4043255265385437`*^9}, 3.4043255927293434`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BiHestonUnderlying1Vanilla2", "[", 
   RowBox[{
   "S_", ",", "K_", ",", "\[Tau]_", ",", "\[CapitalSigma]_", ",", "M_", ",", 
    "\[CapitalSigma]inf_", ",", "Q_", ",", "\[Rho]_", ",", "\[Beta]m_", ",", 
    "\[Lambda]1_", ",", "\[Lambda]2_", ",", 
    RowBox[{"{", 
     RowBox[{
     "LegendreCoef1_", ",", "LegendreCoef1n_", ",", "period1_", ",", 
      "period1n_", ",", "\[Epsilon]1_", ",", "imax_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "LegendreCoef2_", ",", "period2_", ",", "period2n_", ",", 
      "\[Epsilon]2_"}], "}"}], ",", "printflag_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"BiHestonUnderlying1VanillaAux2", "[", 
    RowBox[{
    "S", ",", "K", ",", "\[Tau]", ",", "\[CapitalSigma]", ",", "M", ",", 
     "\[CapitalSigma]inf", ",", "Q", ",", "\[Rho]", ",", "\[Beta]m", ",", 
     "\[Lambda]1", ",", "\[Lambda]2", ",", 
     RowBox[{"{", 
      RowBox[{
      "LegendreCoef1", ",", "LegendreCoef1n", ",", "period1", ",", "period1n",
        ",", "\[Epsilon]1", ",", "imax"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "LegendreCoef2", ",", "period2", ",", "period2n", ",", "\[Epsilon]2"}], 
      "}"}], ",", "printflag"}], "]"}], " ", "/;", " ", 
   RowBox[{"K", "\[GreaterEqual]", "0"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.399897194377056*^9, 3.399897245940546*^9}, {
   3.3998976692611732`*^9, 3.3998976795269957`*^9}, {3.4002144512750473`*^9, 
   3.4002144569782815`*^9}, {3.400238263213356*^9, 3.400238300573448*^9}, {
   3.400408049201395*^9, 3.4004080510451803`*^9}, 3.400504474791651*^9, {
   3.4005667653701477`*^9, 3.400566798886416*^9}, {3.400819839626373*^9, 
   3.4008198425014277`*^9}, {3.4009134614843187`*^9, 
   3.4009134792034087`*^9}, {3.4009135487047434`*^9, 3.400913581252243*^9}, {
   3.4009136129872274`*^9, 3.4009136377220774`*^9}, {3.4009136698945704`*^9, 
   3.400913678910368*^9}, {3.400913713848539*^9, 3.400913720848673*^9}, {
   3.4009138946020093`*^9, 3.400913904914707*^9}, {3.40091789471006*^9, 
   3.400917899053893*^9}, {3.400921389214653*^9, 3.4009214402156324`*^9}, {
   3.400921492029127*^9, 3.4009215467489276`*^9}, {3.4009217594717617`*^9, 
   3.4009217705500994`*^9}, {3.401110611225083*^9, 3.4011106255847335`*^9}, {
   3.4011155613669987`*^9, 3.4011155856330895`*^9}, {3.401425790206461*^9, 
   3.401425813269404*^9}, {3.402046069834562*^9, 3.40204607210023*^9}, {
   3.4022357520580764`*^9, 3.4022357573706784`*^9}, {3.4022370965213895`*^9, 
   3.4022371025371304`*^9}, {3.402294637481146*^9, 3.4022946494188747`*^9}, {
   3.4022947595616145`*^9, 3.4022948086094313`*^9}, {3.4022949118926644`*^9, 
   3.4022949123770485`*^9}, 3.4022950944274187`*^9, {3.4023880298479567`*^9, 
   3.4023880317599564`*^9}, {3.403871467549989*^9, 3.4038715521922393`*^9}, {
   3.4038772034257407`*^9, 3.4038772338482*^9}, {3.4038778690791464`*^9, 
   3.4038778880951366`*^9}, {3.403877923330188*^9, 3.403877959690261*^9}, {
   3.403880525208268*^9, 3.403880528802087*^9}, {3.4039401668863335`*^9, 
   3.403940181277235*^9}, {3.403940658427021*^9, 3.403940660661439*^9}, 
   3.403940704459155*^9, {3.403947868049818*^9, 3.4039479096443667`*^9}, {
   3.4039621859965925`*^9, 3.4039621885122657`*^9}, {3.404149535953335*^9, 
   3.404149547107335*^9}, {3.404198055801464*^9, 3.4041980594734097`*^9}, {
   3.4043002987767344`*^9, 3.4043003215995345`*^9}, {3.404325523574544*^9, 
   3.4043255265385437`*^9}, 3.4043255927293434`*^9, {3.4043273738021436`*^9, 
   3.4043273906969433`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BiHestonUnderlying1VanillaAux", "[", 
   RowBox[{
   "S_", ",", "K_", ",", "\[Tau]_", ",", "\[CapitalSigma]_", ",", "M_", ",", 
    "\[CapitalSigma]inf_", ",", "Q_", ",", "\[Rho]_", ",", "\[Beta]_", ",", 
    "\[Lambda]1_", ",", "\[Lambda]2_", ",", 
    RowBox[{"{", 
     RowBox[{
     "LegendreCoef1_", ",", "LegendreCoef1n_", ",", "period1_", ",", 
      "period1n_", ",", "\[Epsilon]1_", ",", "imax_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "LegendreCoef2_", ",", "period2_", ",", "period2n_", ",", 
      "\[Epsilon]2_"}], "}"}], ",", "printflag_"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{
   FractionBox["2", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"2", "\[Pi]"}], ")"}], "2"]], 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "res", ",", "res2", ",", 
       RowBox[{"Y", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Log", "[", 
           RowBox[{"S", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
          RowBox[{"Log", "[", 
           RowBox[{"S", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"printflag", "\[Equal]", "1"}], " ", "||", " ", 
         RowBox[{"MemberQ", "[", 
          RowBox[{"printflag", ",", "1"}], "]"}]}], "  ", ",", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\< S=\>\"", ",", 
           RowBox[{"S", " ", "//", " ", "ColumnForm"}], ",", 
           "\"\< \[CapitalSigma]=\>\"", ",", 
           RowBox[{"\[CapitalSigma]", " ", "//", "MatrixForm"}], ",", 
           "\"\<M=\>\"", ",", 
           RowBox[{"M", "//", "MatrixForm"}], ",", 
           "\"\< \[CapitalSigma]inf=\>\"", ",", 
           RowBox[{"\[CapitalSigma]inf", "//", "MatrixForm"}], " ", ",", 
           "\"\< Q=\>\"", ",", 
           RowBox[{"Q", "//", "MatrixForm"}], " ", ",", "\"\< \[Rho]=\>\"", 
           ",", 
           RowBox[{"\[Rho]", "//", "ColumnForm"}], ",", 
           "\"\< Imaginary Shifts=\>\"", ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\[Lambda]1", ",", "\[Lambda]2"}], "}"}], " ", "//", " ",
             "ColumnForm"}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<{NbLegCoef1,NbLegCoef1n,period1,period1n,\[Epsilon]1,imax}=\>\"\
", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Length", "[", "LegendreCoef1", "]"}], ",", 
             RowBox[{"Length", "[", "LegendreCoef1n", "]"}], ",", "period1", 
             ",", "period1n", ",", "\[Epsilon]1", ",", "imax"}], "}"}], ",", 
           "\"\<{NbLegCoef2,period2,period2n,\[Epsilon]2}=\>\"", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Length", "[", "LegendreCoef2", "]"}], ",", "period2", 
             ",", "period2n", ",", "\[Epsilon]2"}], "}"}]}], "]"}]}]}], "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"printflag", "\[Equal]", "4"}], "||", " ", 
         RowBox[{"MemberQ", "[", 
          RowBox[{"printflag", ",", "4"}], "]"}]}], " ", ",", 
        RowBox[{"Print", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Plot", "[", 
            RowBox[{
             RowBox[{"SymetrizedBiHestonUnderlying1VanillaIntegrand", "[", 
              RowBox[{
              "Y", ",", "K", ",", "\[Tau]", ",", "\[CapitalSigma]", ",", "M", 
               ",", "Q", ",", "\[Rho]", ",", "\[Beta]", ",", "\[Lambda]1", 
               ",", "\[Lambda]2", ",", "\[Omega]1", ",", "\[Omega]2"}], "]"}],
              ",", 
             RowBox[{"{", 
              RowBox[{"\[Omega]2", ",", "0", " ", ",", 
               RowBox[{"2", "period2"}]}], "}"}], ",", 
             RowBox[{"PlotPoints", "\[Rule]", "50"}], ",", 
             RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
             RowBox[{"PlotLabel", "\[Rule]", 
              RowBox[{"\"\<1st Inverse Fourier: K =\>\"", "<>", 
               RowBox[{"ToString", "[", "K", "]"}], "<>", 
               "\"\< \[Omega]1=\>\"", "<>", 
               RowBox[{"ToString", "[", "\[Omega]1", "]"}]}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Omega]1", ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0.2", ",", "2"}], "}"}]}], "}"}]}], "]"}], 
         "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"printflag", "\[Equal]", "6"}], "||", " ", 
         RowBox[{"MemberQ", "[", 
          RowBox[{"printflag", ",", "6"}], "]"}]}], " ", ",", 
        RowBox[{"Print", "[", 
         RowBox[{"ListPlot", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\[Omega]2", ",", 
               RowBox[{
                RowBox[{"AdaptativeIntegrate", "[", 
                 RowBox[{
                  RowBox[{"Function", "[", 
                   RowBox[{"\[Omega]1", ",", 
                    RowBox[{
                    "SymetrizedBiHestonUnderlying1VanillaIntegrand", "[", 
                    RowBox[{
                    "Y", ",", "K", ",", "\[Tau]", ",", "\[CapitalSigma]", ",",
                     "M", ",", "Q", ",", "\[Rho]", ",", "\[Beta]", ",", 
                    "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Omega]1", ",", 
                    "\[Omega]2"}], "]"}]}], "]"}], ",", "LegendreCoef1", ",", 
                  "LegendreCoef1n", ",", "period1", ",", "period1n", ",", 
                  "\[Epsilon]1", ",", "imax"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[Omega]2", ",", "0", ",", "period2", ",", 
               RowBox[{"period2", "/", "30"}]}], "}"}]}], "]"}], ",", 
           RowBox[{"Joined", "\[Rule]", "True"}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", "\"\<2nd Inverse Fourier:\>\""}], 
           ",", 
           RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "]"}]}], "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"res", "=", 
       RowBox[{"AdaptativeIntegrate", "[", 
        RowBox[{
         RowBox[{"Function", "[", 
          RowBox[{"\[Omega]2", ",", 
           RowBox[{
            RowBox[{"a", "=", 
             RowBox[{"AdaptativeIntegrate", "[", 
              RowBox[{
               RowBox[{"Function", "[", 
                RowBox[{"\[Omega]1", ",", 
                 RowBox[{"SymetrizedBiHestonUnderlying1VanillaIntegrand", "[", 
                  RowBox[{
                  "Y", ",", "K", ",", "\[Tau]", ",", "\[CapitalSigma]", ",", 
                   "M", ",", "Q", ",", "\[Rho]", ",", "\[Beta]", ",", 
                   "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Omega]1", ",", 
                   "\[Omega]2"}], "]"}]}], "]"}], ",", "LegendreCoef1", ",", 
               "LegendreCoef1n", ",", "period1", ",", "period1n", ",", 
               "\[Epsilon]1", ",", "imax"}], "]"}]}], ";", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"printflag", "\[Equal]", "7"}], "||", " ", 
               RowBox[{"MemberQ", "[", 
                RowBox[{"printflag", ",", "7"}], "]"}]}], ",", 
              RowBox[{"Print", "[", 
               RowBox[{"\"\<Integ_2=\>\"", ",", "a"}], "]"}]}], "]"}], ";", 
            RowBox[{"a", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], ",", "LegendreCoef2", 
         ",", "period2", ",", "period2n", ",", "\[Epsilon]2", ",", "imax"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"printflag", "\[Equal]", "7"}], "||", " ", 
         RowBox[{"MemberQ", "[", 
          RowBox[{"printflag", ",", "7"}], "]"}]}], ",", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Integ_1=\>\"", ",", "res"}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"res", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.3997288601267104`*^9, 3.39972890803388*^9, {3.3997289692069297`*^9, 
   3.3997289944261637`*^9}, {3.399729087443575*^9, 3.3997291578199263`*^9}, {
   3.399729214633517*^9, 3.3997292559936857`*^9}, {3.399729338917153*^9, 
   3.399729443137904*^9}, {3.3997297921289797`*^9, 3.399729801332281*^9}, 
   3.3997984631978292`*^9, 3.3997986822957864`*^9, {3.399799475623518*^9, 
   3.3997994825611515`*^9}, {3.399813039024555*^9, 3.3998130523841867`*^9}, {
   3.3998138111956306`*^9, 3.399813818523896*^9}, {3.3998138975254135`*^9, 
   3.3998139300104117`*^9}, {3.399814002074295*^9, 3.3998140680286865`*^9}, {
   3.3998141794214506`*^9, 3.399814187827862*^9}, {3.3998161633189154`*^9, 
   3.399816166818983*^9}, {3.399816989678531*^9, 3.39981701069456*^9}, {
   3.3998175772210617`*^9, 3.3998175797054844`*^9}, {3.3998177980534267`*^9, 
   3.3998178039285393`*^9}, 3.3998191717048006`*^9, {3.399819229424659*^9, 
   3.399819249925052*^9}, {3.3998192996916327`*^9, 3.3998193255202537`*^9}, {
   3.3998194002404385`*^9, 3.399819401990472*^9}, {3.399819437022394*^9, 
   3.399819443678772*^9}, {3.3998195847752314`*^9, 3.3998195956035643`*^9}, {
   3.3998937261423693`*^9, 3.3998937440645885`*^9}, {3.399894673945778*^9, 
   3.3998946780865884`*^9}, 3.399895357951172*^9, {3.3998971752360635`*^9, 
   3.399897202986596*^9}, {3.399995099817901*^9, 3.3999951242558703`*^9}, {
   3.3999951653972855`*^9, 3.3999952424143887`*^9}, {3.399995434089944*^9, 
   3.3999954559809895`*^9}, 3.400214359554536*^9, {3.4002194753715076`*^9, 
   3.4002194862310915`*^9}, {3.400221264780864*^9, 3.400221267812172*^9}, {
   3.400221324438259*^9, 3.4002213249851446`*^9}, {3.4002307045682325`*^9, 
   3.4002307106777253`*^9}, {3.4002309417446613`*^9, 
   3.4002309457603636`*^9}, {3.4002355676772275`*^9, 
   3.4002356840075865`*^9}, {3.4002357813375797`*^9, 3.400235782228222*^9}, {
   3.400238239244146*^9, 3.40023824052542*^9}, {3.4004065560321016`*^9, 
   3.400406572266788*^9}, 3.40040661272069*^9, {3.400406710910075*^9, 
   3.400406802349331*^9}, {3.4004079962316275`*^9, 3.400408003981776*^9}, {
   3.4004080367167797`*^9, 3.400408037591797*^9}, {3.400408141500042*^9, 
   3.4004081422656813`*^9}, 3.400504474791651*^9, {3.4008198209228888`*^9, 
   3.4008198369544463`*^9}, {3.401177200473509*^9, 3.401177296365975*^9}, 
   3.4011776191065464`*^9, 3.4011776885297546`*^9, {3.4011777732345057`*^9, 
   3.4011777815627904`*^9}, {3.4015301347651124`*^9, 3.401530142671514*^9}, {
   3.4015342195318975`*^9, 3.4015342774861345`*^9}, {3.4015343731285963`*^9, 
   3.4015343749255056`*^9}, {3.402033437670154*^9, 3.402033457561161*^9}, {
   3.4020334928118377`*^9, 3.402033502483898*^9}, {3.402143403333747*^9, 
   3.402143421193465*^9}, {3.402143489991661*^9, 3.40214349125731*^9}, {
   3.402143653151044*^9, 3.4021436941674557`*^9}, {3.402205803123693*^9, 
   3.402205848499564*^9}, {3.402294611715026*^9, 3.4022946131681786`*^9}, 
   3.402294775718175*^9, {3.4022949263773174`*^9, 3.4022949270960813`*^9}, 
   3.4023779225819693`*^9, 3.402388039487956*^9, 3.4023881114109564`*^9, 
   3.403871476831417*^9, 3.403871589333577*^9, {3.403871732195695*^9, 
   3.4038719361371107`*^9}, 3.40387197021589*^9, {3.4038729130621176`*^9, 
   3.403872917359075*^9}, {3.4038732665532794`*^9, 3.4038732913350053`*^9}, {
   3.40387338716497*^9, 3.403873392790078*^9}, {3.4038739059561806`*^9, 
   3.403873929300379*^9}, {3.4038757265536356`*^9, 3.403875727100521*^9}, {
   3.4038760173873444`*^9, 3.403876028450057*^9}, {3.4038767128225718`*^9, 
   3.4038767355730085`*^9}, {3.403876883685227*^9, 3.403876894872942*^9}, 
   3.4038770811577682`*^9, {3.403877262489375*^9, 3.403877296927536*^9}, {
   3.4038779003609967`*^9, 3.4038779017516484`*^9}, {3.403877950330706*^9, 
   3.403877995722203*^9}, {3.4038805669746947`*^9, 3.4038805816156006`*^9}, {
   3.403940196949411*^9, 3.403940212309081*^9}, {3.4039402503098106`*^9, 
   3.403940330483225*^9}, {3.403940565097104*^9, 3.4039406320983906`*^9}, {
   3.4039477736886315`*^9, 3.4039478349866834`*^9}, 3.403947942238743*^9, {
   3.4039479736924715`*^9, 3.403948027771635*^9}, 3.403948162852353*^9, {
   3.4039491169487963`*^9, 3.4039491206988688`*^9}, {3.4039492631391034`*^9, 
   3.4039493470938406`*^9}, {3.4039496376931696`*^9, 3.403949723882324*^9}, {
   3.4039498424783516`*^9, 3.4039499998719983`*^9}, 3.403962196184288*^9, 
   3.403962253482263*^9, {3.4041495661393347`*^9, 3.404149603407735*^9}, {
   3.4041552539579353`*^9, 3.404155264519135*^9}, {3.404197468258934*^9, 
   3.404197471821502*^9}, 3.4041980689267163`*^9, {3.404300362346734*^9, 
   3.4043004127347345`*^9}, 3.4043255380825434`*^9, {3.4043255819497433`*^9, 
   3.404325585849744*^9}, {3.4043271034385433`*^9, 3.4043271075257435`*^9}, {
   3.4043271542477436`*^9, 3.4043271966641436`*^9}, 3.4043891110643435`*^9, {
   3.4044552967844477`*^9, 3.404455299699703*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BiHestonUnderlying1VanillaAux2", "[", 
   RowBox[{
   "S_", ",", "K_", ",", "\[Tau]_", ",", "\[CapitalSigma]_", ",", "M_", ",", 
    "\[CapitalSigma]inf_", ",", "Q_", ",", "\[Rho]_", ",", "\[Beta]m_", ",", 
    "\[Lambda]1_", ",", "\[Lambda]2_", ",", 
    RowBox[{"{", 
     RowBox[{
     "LegendreCoef1_", ",", "LegendreCoef1n_", ",", "period1_", ",", 
      "period1n_", ",", "\[Epsilon]1_", ",", "imax_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "LegendreCoef2_", ",", "period2_", ",", "period2n_", ",", 
      "\[Epsilon]2_"}], "}"}], ",", "printflag_"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{
   FractionBox["2", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"2", "\[Pi]"}], ")"}], "2"]], 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "res", ",", "res2", ",", 
       RowBox[{"Y", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Log", "[", 
           RowBox[{"S", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
          RowBox[{"Log", "[", 
           RowBox[{"S", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"printflag", "\[Equal]", "1"}], " ", "||", " ", 
         RowBox[{"MemberQ", "[", 
          RowBox[{"printflag", ",", "1"}], "]"}]}], "  ", ",", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\< S=\>\"", ",", 
           RowBox[{"S", " ", "//", " ", "ColumnForm"}], ",", 
           "\"\< \[CapitalSigma]=\>\"", ",", 
           RowBox[{"\[CapitalSigma]", " ", "//", "MatrixForm"}], ",", 
           "\"\<M=\>\"", ",", 
           RowBox[{"M", "//", "MatrixForm"}], ",", 
           "\"\< \[CapitalSigma]inf=\>\"", ",", 
           RowBox[{"\[CapitalSigma]inf", "//", "MatrixForm"}], " ", ",", 
           "\"\< Q=\>\"", ",", 
           RowBox[{"Q", "//", "MatrixForm"}], " ", ",", "\"\< \[Rho]=\>\"", 
           ",", 
           RowBox[{"\[Rho]", "//", "ColumnForm"}], ",", 
           "\"\< Imaginary Shifts=\>\"", ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\[Lambda]1", ",", "\[Lambda]2"}], "}"}], " ", "//", " ",
             "ColumnForm"}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<{NbLegCoef1,NbLegCoef1n,period1,period1n,\[Epsilon]1,imax}=\>\"\
", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Length", "[", "LegendreCoef1", "]"}], ",", 
             RowBox[{"Length", "[", "LegendreCoef1n", "]"}], ",", "period1", 
             ",", "period1n", ",", "\[Epsilon]1", ",", "imax"}], "}"}], ",", 
           "\"\<{NbLegCoef2,period2,period2n,\[Epsilon]2}=\>\"", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Length", "[", "LegendreCoef2", "]"}], ",", "period2", 
             ",", "period2n", ",", "\[Epsilon]2"}], "}"}]}], "]"}]}]}], "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"printflag", "\[Equal]", "4"}], "||", " ", 
         RowBox[{"MemberQ", "[", 
          RowBox[{"printflag", ",", "4"}], "]"}]}], " ", ",", 
        RowBox[{"Print", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Plot", "[", 
            RowBox[{
             RowBox[{"SymetrizedBiHestonUnderlying1VanillaIntegrand2", "[", 
              RowBox[{
              "Y", ",", "K", ",", "\[Tau]", ",", "\[CapitalSigma]", ",", "M", 
               ",", "Q", ",", "\[Rho]", ",", "\[Beta]m", ",", "\[Lambda]1", 
               ",", "\[Lambda]2", ",", "\[Omega]1", ",", "\[Omega]2"}], "]"}],
              ",", 
             RowBox[{"{", 
              RowBox[{"\[Omega]2", ",", "0", " ", ",", 
               RowBox[{"2", "period2"}]}], "}"}], ",", 
             RowBox[{"PlotPoints", "\[Rule]", "50"}], ",", 
             RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
             RowBox[{"PlotLabel", "\[Rule]", 
              RowBox[{"\"\<1st Inverse Fourier: K =\>\"", "<>", 
               RowBox[{"ToString", "[", "K", "]"}], "<>", 
               "\"\< \[Omega]1=\>\"", "<>", 
               RowBox[{"ToString", "[", "\[Omega]1", "]"}]}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Omega]1", ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0.2", ",", "2"}], "}"}]}], "}"}]}], "]"}], 
         "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"printflag", "\[Equal]", "6"}], "||", " ", 
         RowBox[{"MemberQ", "[", 
          RowBox[{"printflag", ",", "6"}], "]"}]}], " ", ",", 
        RowBox[{"Print", "[", 
         RowBox[{"ListPlot", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\[Omega]2", ",", 
               RowBox[{
                RowBox[{"AdaptativeIntegrate", "[", 
                 RowBox[{
                  RowBox[{"Function", "[", 
                   RowBox[{"\[Omega]1", ",", 
                    RowBox[{
                    "SymetrizedBiHestonUnderlying1VanillaIntegrand2", "[", 
                    RowBox[{
                    "Y", ",", "K", ",", "\[Tau]", ",", "\[CapitalSigma]", ",",
                     "M", ",", "Q", ",", "\[Rho]", ",", "\[Beta]m", ",", 
                    "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Omega]1", ",", 
                    "\[Omega]2"}], "]"}]}], "]"}], ",", "LegendreCoef1", ",", 
                  "LegendreCoef1n", ",", "period1", ",", "period1n", ",", 
                  "\[Epsilon]1", ",", "imax"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[Omega]2", ",", "0", ",", "period2", ",", 
               RowBox[{"period2", "/", "30"}]}], "}"}]}], "]"}], ",", 
           RowBox[{"Joined", "\[Rule]", "True"}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", "\"\<2nd Inverse Fourier:\>\""}]}],
           "]"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"res", "=", 
       RowBox[{"AdaptativeIntegrate", "[", 
        RowBox[{
         RowBox[{"Function", "[", 
          RowBox[{"\[Omega]2", ",", 
           RowBox[{
            RowBox[{"a", "=", 
             RowBox[{"AdaptativeIntegrate", "[", 
              RowBox[{
               RowBox[{"Function", "[", 
                RowBox[{"\[Omega]1", ",", 
                 RowBox[{
                 "SymetrizedBiHestonUnderlying1VanillaIntegrand2", "[", 
                  RowBox[{
                  "Y", ",", "K", ",", "\[Tau]", ",", "\[CapitalSigma]", ",", 
                   "M", ",", "Q", ",", "\[Rho]", ",", "\[Beta]m", ",", 
                   "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Omega]1", ",", 
                   "\[Omega]2"}], "]"}]}], "]"}], ",", "LegendreCoef1", ",", 
               "LegendreCoef1n", ",", "period1", ",", "period1n", ",", 
               "\[Epsilon]1", ",", "imax"}], "]"}]}], ";", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"printflag", "\[Equal]", "7"}], "||", " ", 
               RowBox[{"MemberQ", "[", 
                RowBox[{"printflag", ",", "7"}], "]"}]}], ",", 
              RowBox[{"Print", "[", 
               RowBox[{"\"\<Integ_2=\>\"", ",", "a"}], "]"}]}], "]"}], ";", 
            RowBox[{"a", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], ",", "LegendreCoef2", 
         ",", "period2", ",", "period2n", ",", "\[Epsilon]2", ",", "imax"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"printflag", "\[Equal]", "7"}], "||", " ", 
         RowBox[{"MemberQ", "[", 
          RowBox[{"printflag", ",", "7"}], "]"}]}], ",", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Integ_1=\>\"", ",", "res"}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"res", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.3997288601267104`*^9, 3.39972890803388*^9, {3.3997289692069297`*^9, 
   3.3997289944261637`*^9}, {3.399729087443575*^9, 3.3997291578199263`*^9}, {
   3.399729214633517*^9, 3.3997292559936857`*^9}, {3.399729338917153*^9, 
   3.399729443137904*^9}, {3.3997297921289797`*^9, 3.399729801332281*^9}, 
   3.3997984631978292`*^9, 3.3997986822957864`*^9, {3.399799475623518*^9, 
   3.3997994825611515`*^9}, {3.399813039024555*^9, 3.3998130523841867`*^9}, {
   3.3998138111956306`*^9, 3.399813818523896*^9}, {3.3998138975254135`*^9, 
   3.3998139300104117`*^9}, {3.399814002074295*^9, 3.3998140680286865`*^9}, {
   3.3998141794214506`*^9, 3.399814187827862*^9}, {3.3998161633189154`*^9, 
   3.399816166818983*^9}, {3.399816989678531*^9, 3.39981701069456*^9}, {
   3.3998175772210617`*^9, 3.3998175797054844`*^9}, {3.3998177980534267`*^9, 
   3.3998178039285393`*^9}, 3.3998191717048006`*^9, {3.399819229424659*^9, 
   3.399819249925052*^9}, {3.3998192996916327`*^9, 3.3998193255202537`*^9}, {
   3.3998194002404385`*^9, 3.399819401990472*^9}, {3.399819437022394*^9, 
   3.399819443678772*^9}, {3.3998195847752314`*^9, 3.3998195956035643`*^9}, {
   3.3998937261423693`*^9, 3.3998937440645885`*^9}, {3.399894673945778*^9, 
   3.3998946780865884`*^9}, 3.399895357951172*^9, {3.3998971752360635`*^9, 
   3.399897202986596*^9}, {3.399995099817901*^9, 3.3999951242558703`*^9}, {
   3.3999951653972855`*^9, 3.3999952424143887`*^9}, {3.399995434089944*^9, 
   3.3999954559809895`*^9}, 3.400214359554536*^9, {3.4002194753715076`*^9, 
   3.4002194862310915`*^9}, {3.400221264780864*^9, 3.400221267812172*^9}, {
   3.400221324438259*^9, 3.4002213249851446`*^9}, {3.4002307045682325`*^9, 
   3.4002307106777253`*^9}, {3.4002309417446613`*^9, 
   3.4002309457603636`*^9}, {3.4002355676772275`*^9, 
   3.4002356840075865`*^9}, {3.4002357813375797`*^9, 3.400235782228222*^9}, {
   3.400238239244146*^9, 3.40023824052542*^9}, {3.4004065560321016`*^9, 
   3.400406572266788*^9}, 3.40040661272069*^9, {3.400406710910075*^9, 
   3.400406802349331*^9}, {3.4004079962316275`*^9, 3.400408003981776*^9}, {
   3.4004080367167797`*^9, 3.400408037591797*^9}, {3.400408141500042*^9, 
   3.4004081422656813`*^9}, 3.400504474791651*^9, {3.4008198209228888`*^9, 
   3.4008198369544463`*^9}, {3.401177200473509*^9, 3.401177296365975*^9}, 
   3.4011776191065464`*^9, 3.4011776885297546`*^9, {3.4011777732345057`*^9, 
   3.4011777815627904`*^9}, {3.4015301347651124`*^9, 3.401530142671514*^9}, {
   3.4015342195318975`*^9, 3.4015342774861345`*^9}, {3.4015343731285963`*^9, 
   3.4015343749255056`*^9}, {3.402033437670154*^9, 3.402033457561161*^9}, {
   3.4020334928118377`*^9, 3.402033502483898*^9}, {3.402143403333747*^9, 
   3.402143421193465*^9}, {3.402143489991661*^9, 3.40214349125731*^9}, {
   3.402143653151044*^9, 3.4021436941674557`*^9}, {3.402205803123693*^9, 
   3.402205848499564*^9}, {3.402294611715026*^9, 3.4022946131681786`*^9}, 
   3.402294775718175*^9, {3.4022949263773174`*^9, 3.4022949270960813`*^9}, 
   3.4023779225819693`*^9, 3.402388039487956*^9, 3.4023881114109564`*^9, 
   3.403871476831417*^9, 3.403871589333577*^9, {3.403871732195695*^9, 
   3.4038719361371107`*^9}, 3.40387197021589*^9, {3.4038729130621176`*^9, 
   3.403872917359075*^9}, {3.4038732665532794`*^9, 3.4038732913350053`*^9}, {
   3.40387338716497*^9, 3.403873392790078*^9}, {3.4038739059561806`*^9, 
   3.403873929300379*^9}, {3.4038757265536356`*^9, 3.403875727100521*^9}, {
   3.4038760173873444`*^9, 3.403876028450057*^9}, {3.4038767128225718`*^9, 
   3.4038767355730085`*^9}, {3.403876883685227*^9, 3.403876894872942*^9}, 
   3.4038770811577682`*^9, {3.403877262489375*^9, 3.403877296927536*^9}, {
   3.4038779003609967`*^9, 3.4038779017516484`*^9}, {3.403877950330706*^9, 
   3.403877995722203*^9}, {3.4038805669746947`*^9, 3.4038805816156006`*^9}, {
   3.403940196949411*^9, 3.403940212309081*^9}, {3.4039402503098106`*^9, 
   3.403940330483225*^9}, {3.403940565097104*^9, 3.4039406320983906`*^9}, {
   3.4039477736886315`*^9, 3.4039478349866834`*^9}, 3.403947942238743*^9, {
   3.4039479736924715`*^9, 3.403948027771635*^9}, 3.403948162852353*^9, {
   3.4039491169487963`*^9, 3.4039491206988688`*^9}, {3.4039492631391034`*^9, 
   3.4039493470938406`*^9}, {3.4039496376931696`*^9, 3.403949723882324*^9}, {
   3.4039498424783516`*^9, 3.4039499998719983`*^9}, 3.403962196184288*^9, 
   3.403962253482263*^9, {3.4041495661393347`*^9, 3.404149603407735*^9}, {
   3.4041552539579353`*^9, 3.404155264519135*^9}, {3.404197468258934*^9, 
   3.404197471821502*^9}, 3.4041980689267163`*^9, {3.404300362346734*^9, 
   3.4043004127347345`*^9}, 3.4043255380825434`*^9, {3.4043255819497433`*^9, 
   3.404325585849744*^9}, {3.4043271034385433`*^9, 3.4043271075257435`*^9}, {
   3.4043271542477436`*^9, 3.4043271966641436`*^9}, {3.4043274203057437`*^9, 
   3.4043274586505437`*^9}, {3.404455285310502*^9, 3.4044552892234917`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SymetrizedBiHestonUnderlying1VanillaIntegrand", "[", 
    RowBox[{
    "Y_", ",", "K_", ",", "\[Tau]_", ",", "\[CapitalSigma]_", ",", "M_", ",", 
     "Q_", ",", "\[Rho]_", ",", "\[Beta]_", ",", "\[Lambda]1_", ",", 
     "\[Lambda]2_", ",", "\[Omega]1_", ",", "\[Omega]2_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x1", "=", 
        RowBox[{"Y", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"x2", "=", 
        RowBox[{"Y", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ",", 
       RowBox[{"k1", "=", 
        RowBox[{"(", 
         RowBox[{"\[Omega]1", "+", 
          RowBox[{"\[ImaginaryI]", " ", "\[Lambda]1"}]}], ")"}]}], ",", 
       RowBox[{"Sk1", "=", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Omega]1"}], "+", 
          RowBox[{"\[ImaginaryI]", " ", "\[Lambda]1"}]}], ")"}]}], ",", 
       RowBox[{"k2", "=", " ", 
        RowBox[{"(", 
         RowBox[{"\[Omega]2", "+", 
          RowBox[{"\[ImaginaryI]", " ", "\[Lambda]2"}]}], ")"}]}], ",", 
       RowBox[{"Sk2", "=", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Omega]2"}], "+", 
          RowBox[{"\[ImaginaryI]", " ", "\[Lambda]2"}]}], ")"}]}], ",", 
       RowBox[{"Sk1A", "=", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Omega]1"}], "+", 
          RowBox[{"\[ImaginaryI]", " ", "\[Lambda]1"}]}], ")"}]}], ",", 
       RowBox[{"k1A", "=", 
        RowBox[{"(", 
         RowBox[{"\[Omega]1", "-", 
          RowBox[{"\[ImaginaryI]", " ", "\[Lambda]1"}]}], ")"}]}], ",", 
       RowBox[{"k2A", "=", 
        RowBox[{"(", 
         RowBox[{"\[Omega]2", "-", 
          RowBox[{"\[ImaginaryI]", " ", "\[Lambda]2"}]}], ")"}]}], ",", 
       "\[Alpha]", ",", "\[Alpha]A", ",", "Sym\[Alpha]", ",", "Sym\[Alpha]A", 
       ",", "\[Alpha]2", ",", "\[Alpha]A2", ",", "Sym\[Alpha]2", ",", 
       "Sym\[Alpha]A2", ",", "propagatorDroit", ",", "SympropagatorDroit", 
       ",", "propagatorGauche", ",", "SympropagatorGauche", ",", 
       "propagatorDroit2", ",", "SympropagatorDroit2", ",", 
       "propagatorGauche2", ",", "SympropagatorGauche2"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"\[Alpha]", "=", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "x1", " ", "k1"}], "-", 
          RowBox[{"\[ImaginaryI]", " ", "x2", " ", "k2"}]}]]}], ";", 
       RowBox[{"\[Alpha]A", "=", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "x1", " ", "k1"}], "-", 
          RowBox[{"\[ImaginaryI]", " ", "x2", " ", "k2A"}]}]]}], ";", 
       RowBox[{"Sym\[Alpha]", "=", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "x1", " ", "Sk1"}], "-", 
          RowBox[{"\[ImaginaryI]", " ", "x2", " ", "k2"}]}]]}], ";", 
       RowBox[{"Sym\[Alpha]A", "=", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "x1", " ", "Sk1A"}], "-", 
          RowBox[{"\[ImaginaryI]", " ", "x2", " ", "k2A"}]}]]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"propagatorDroit", "=", 
        RowBox[{"BiHestonLaplaceQuickTransform", "[", 
         RowBox[{
         "M", ",", "Q", ",", "\[Rho]", ",", " ", "\[CapitalSigma]", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "k1"}], ",", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "k2"}]}], "}"}], ",", 
          "\[Beta]", ",", "\[Tau]"}], "]"}]}], ";", 
       RowBox[{"SympropagatorDroit", "=", 
        RowBox[{"BiHestonLaplaceQuickTransform", "[", 
         RowBox[{
         "M", ",", "Q", ",", "\[Rho]", ",", " ", "\[CapitalSigma]", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "Sk1"}], ",", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "k2"}]}], "}"}], ",", 
          "\[Beta]", ",", "\[Tau]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"propagatorGauche", "=", 
        RowBox[{"BiHestonLaplaceQuickTransform", "[", 
         RowBox[{
         "M", ",", "Q", ",", "\[Rho]", ",", " ", "\[CapitalSigma]", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "k1"}], ",", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "k2A"}]}], "}"}], ",", 
          "\[Beta]", ",", "\[Tau]"}], "]"}]}], ";", 
       RowBox[{"SympropagatorGauche", "=", 
        RowBox[{"BiHestonLaplaceQuickTransform", "[", 
         RowBox[{
         "M", ",", "Q", ",", "\[Rho]", ",", " ", "\[CapitalSigma]", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "Sk1A"}], ",", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "k2A"}]}], "}"}], ",", 
          "\[Beta]", ",", "\[Tau]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Alpha]", " ", "propagatorDroit", " ", 
         RowBox[{"FirstUnderlyingVanillaPayOffFourierDroite", "[", 
          RowBox[{"k1", ",", "k2", ",", "K"}], "]"}]}], "+", 
        "\[IndentingNewLine]", 
        RowBox[{"Sym\[Alpha]", " ", "SympropagatorDroit", " ", 
         RowBox[{"FirstUnderlyingVanillaPayOffFourierDroite", "[", 
          RowBox[{"Sk1", ",", "k2", ",", "K"}], "]"}]}], "+", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Alpha]A", " ", "propagatorGauche", " ", 
         RowBox[{"FirstUnderlyingVanillaPayOffFourierGauche", "[", 
          RowBox[{"k1", ",", "k2A", ",", "K"}], "]"}]}], "+", 
        "\[IndentingNewLine]", 
        RowBox[{"Sym\[Alpha]A", " ", "SympropagatorGauche", " ", 
         RowBox[{"FirstUnderlyingVanillaPayOffFourierGauche", "[", 
          RowBox[{"Sk1A", ",", "k2A", ",", "K"}], "]"}]}]}]}], "]"}]}], 
    "]"}]}], "\[IndentingNewLine]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.402140085770051*^9, 3.4021400863013115`*^9}, {
   3.4021401238489075`*^9, 3.4021402363666925`*^9}, {3.402140267929798*^9, 
   3.402140316290102*^9}, {3.4021403621347322`*^9, 3.4021403798069468`*^9}, {
   3.402140442948784*^9, 3.4021404698243*^9}, {3.40214052530974*^9, 
   3.4021405261847568`*^9}, {3.402140572076263*^9, 3.4021405730294065`*^9}, {
   3.40214283290092*^9, 3.402142834900958*^9}, 3.402142878995555*^9, {
   3.4021429531532288`*^9, 3.40214297455989*^9}, {3.4021430512488623`*^9, 
   3.4021430865307894`*^9}, {3.402143143625636*^9, 3.4021431463288126`*^9}, {
   3.402143222267771*^9, 3.402143365629898*^9}, {3.4021439797510643`*^9, 
   3.4021440141579747`*^9}, {3.4021444783543873`*^9, 
   3.4021445164332433`*^9}, {3.4021445469025784`*^9, 3.402144574918741*^9}, {
   3.4021446846239724`*^9, 3.4021446895459423`*^9}, {3.4021447226559525`*^9, 
   3.402144729593586*^9}, {3.402144860127342*^9, 3.402144926378614*^9}, {
   3.4021449572542067`*^9, 3.402145180727247*^9}, {3.402149153412896*^9, 
   3.4021491595067635`*^9}, {3.4021496964233217`*^9, 3.402149821410097*^9}, {
   3.40214987416111*^9, 3.402149884755063*^9}, {3.4021499394279876`*^9, 
   3.4021499498344374`*^9}, {3.402150065133526*^9, 3.402150121790864*^9}, {
   3.4021501655260787`*^9, 3.4021502014486437`*^9}, {3.402150388827241*^9, 
   3.4021504643911915`*^9}, {3.4021505016731577`*^9, 3.402150539877016*^9}, {
   3.402150576221464*^9, 3.4021506145190744`*^9}, 3.402150646160307*^9, {
   3.4021507013801165`*^9, 3.402150701614496*^9}, {3.402150792022482*^9, 
   3.4021508226011944`*^9}, {3.4022048852154446`*^9, 
   3.4022049314194565`*^9}, {3.402223441649846*^9, 3.4022234739004655`*^9}, {
   3.4022235664178667`*^9, 3.4022235977934694`*^9}, {3.402225770632062*^9, 
   3.4022257810853877`*^9}, {3.4022260066522183`*^9, 
   3.4022260340902452`*^9}, {3.402227989127781*^9, 3.4022280025967894`*^9}, 
   3.4022280710668545`*^9, {3.4022281624279833`*^9, 3.4022281629904943`*^9}, {
   3.4023193135668306`*^9, 3.4023194603141108`*^9}, {3.402319603150462*^9, 
   3.40231966787294*^9}, {3.4023197252970443`*^9, 3.4023197324378977`*^9}, {
   3.4023205583495092`*^9, 3.4023206749454975`*^9}, {3.4023207399779963`*^9, 
   3.4023207413373976`*^9}, {3.4023208249015017`*^9, 
   3.4023209920765867`*^9}, {3.4023211800958214`*^9, 3.40232123755005*^9}, {
   3.4023216909806304`*^9, 3.4023216975588818`*^9}, {3.402321742184738*^9, 
   3.4023217427316236`*^9}, {3.4023247260232773`*^9, 
   3.4023248331659594`*^9}, {3.4023253919266872`*^9, 
   3.4023255075695324`*^9}, {3.40237831846457*^9, 3.4023783246678143`*^9}, {
   3.403961973148756*^9, 3.4039620282435637`*^9}, {3.4039620755257215`*^9, 
   3.403962089885372*^9}, 3.4041951327140923`*^9, {3.4041952182469845`*^9, 
   3.404195247966305*^9}, {3.4043004279447346`*^9, 3.4043004361659346`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SymetrizedBiHestonUnderlying1VanillaIntegrand2", "[", 
    RowBox[{
    "Y_", ",", "K_", ",", "\[Tau]_", ",", "\[CapitalSigma]_", ",", "M_", ",", 
     "Q_", ",", "\[Rho]_", ",", "\[Beta]m_", ",", "\[Lambda]1_", ",", 
     "\[Lambda]2_", ",", "\[Omega]1_", ",", "\[Omega]2_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x1", "=", 
        RowBox[{"Y", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"x2", "=", 
        RowBox[{"Y", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ",", 
       RowBox[{"k1", "=", 
        RowBox[{"(", 
         RowBox[{"\[Omega]1", "+", 
          RowBox[{"\[ImaginaryI]", " ", "\[Lambda]1"}]}], ")"}]}], ",", 
       RowBox[{"Sk1", "=", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Omega]1"}], "+", 
          RowBox[{"\[ImaginaryI]", " ", "\[Lambda]1"}]}], ")"}]}], ",", 
       RowBox[{"k2", "=", " ", 
        RowBox[{"(", 
         RowBox[{"\[Omega]2", "+", 
          RowBox[{"\[ImaginaryI]", " ", "\[Lambda]2"}]}], ")"}]}], ",", 
       RowBox[{"Sk2", "=", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Omega]2"}], "+", 
          RowBox[{"\[ImaginaryI]", " ", "\[Lambda]2"}]}], ")"}]}], ",", 
       RowBox[{"Sk1A", "=", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Omega]1"}], "+", 
          RowBox[{"\[ImaginaryI]", " ", "\[Lambda]1"}]}], ")"}]}], ",", 
       RowBox[{"k1A", "=", 
        RowBox[{"(", 
         RowBox[{"\[Omega]1", "-", 
          RowBox[{"\[ImaginaryI]", " ", "\[Lambda]1"}]}], ")"}]}], ",", 
       RowBox[{"k2A", "=", 
        RowBox[{"(", 
         RowBox[{"\[Omega]2", "-", 
          RowBox[{"\[ImaginaryI]", " ", "\[Lambda]2"}]}], ")"}]}], ",", 
       "\[Alpha]", ",", "\[Alpha]A", ",", "Sym\[Alpha]", ",", "Sym\[Alpha]A", 
       ",", "\[Alpha]2", ",", "\[Alpha]A2", ",", "Sym\[Alpha]2", ",", 
       "Sym\[Alpha]A2", ",", "propagatorDroit", ",", "SympropagatorDroit", 
       ",", "propagatorGauche", ",", "SympropagatorGauche", ",", 
       "propagatorDroit2", ",", "SympropagatorDroit2", ",", 
       "propagatorGauche2", ",", "SympropagatorGauche2"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"\[Alpha]", "=", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "x1", " ", "k1"}], "-", 
          RowBox[{"\[ImaginaryI]", " ", "x2", " ", "k2"}]}]]}], ";", 
       RowBox[{"\[Alpha]A", "=", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "x1", " ", "k1"}], "-", 
          RowBox[{"\[ImaginaryI]", " ", "x2", " ", "k2A"}]}]]}], ";", 
       RowBox[{"Sym\[Alpha]", "=", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "x1", " ", "Sk1"}], "-", 
          RowBox[{"\[ImaginaryI]", " ", "x2", " ", "k2"}]}]]}], ";", 
       RowBox[{"Sym\[Alpha]A", "=", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "x1", " ", "Sk1A"}], "-", 
          RowBox[{"\[ImaginaryI]", " ", "x2", " ", "k2A"}]}]]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"propagatorDroit", "=", 
        RowBox[{"BiHestonLaplaceQuickTransform2", "[", 
         RowBox[{
         "M", ",", "Q", ",", "\[Rho]", ",", " ", "\[CapitalSigma]", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "k1"}], ",", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "k2"}]}], "}"}], ",", 
          "\[Beta]m", ",", "\[Tau]"}], "]"}]}], ";", 
       RowBox[{"SympropagatorDroit", "=", 
        RowBox[{"BiHestonLaplaceQuickTransform2", "[", 
         RowBox[{
         "M", ",", "Q", ",", "\[Rho]", ",", " ", "\[CapitalSigma]", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "Sk1"}], ",", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "k2"}]}], "}"}], ",", 
          "\[Beta]m", ",", "\[Tau]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"propagatorGauche", "=", 
        RowBox[{"BiHestonLaplaceQuickTransform2", "[", 
         RowBox[{
         "M", ",", "Q", ",", "\[Rho]", ",", " ", "\[CapitalSigma]", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "k1"}], ",", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "k2A"}]}], "}"}], ",", 
          "\[Beta]m", ",", "\[Tau]"}], "]"}]}], ";", 
       RowBox[{"SympropagatorGauche", "=", 
        RowBox[{"BiHestonLaplaceQuickTransform2", "[", 
         RowBox[{
         "M", ",", "Q", ",", "\[Rho]", ",", " ", "\[CapitalSigma]", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "Sk1A"}], ",", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "k2A"}]}], "}"}], ",", 
          "\[Beta]m", ",", "\[Tau]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Alpha]", " ", "propagatorDroit", " ", 
         RowBox[{"FirstUnderlyingVanillaPayOffFourierDroite", "[", 
          RowBox[{"k1", ",", "k2", ",", "K"}], "]"}]}], "+", 
        "\[IndentingNewLine]", 
        RowBox[{"Sym\[Alpha]", " ", "SympropagatorDroit", " ", 
         RowBox[{"FirstUnderlyingVanillaPayOffFourierDroite", "[", 
          RowBox[{"Sk1", ",", "k2", ",", "K"}], "]"}]}], "+", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Alpha]A", " ", "propagatorGauche", " ", 
         RowBox[{"FirstUnderlyingVanillaPayOffFourierGauche", "[", 
          RowBox[{"k1", ",", "k2A", ",", "K"}], "]"}]}], "+", 
        "\[IndentingNewLine]", 
        RowBox[{"Sym\[Alpha]A", " ", "SympropagatorGauche", " ", 
         RowBox[{"FirstUnderlyingVanillaPayOffFourierGauche", "[", 
          RowBox[{"Sk1A", ",", "k2A", ",", "K"}], "]"}]}]}]}], "]"}]}], 
    "]"}]}], "\[IndentingNewLine]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.402140085770051*^9, 3.4021400863013115`*^9}, {
   3.4021401238489075`*^9, 3.4021402363666925`*^9}, {3.402140267929798*^9, 
   3.402140316290102*^9}, {3.4021403621347322`*^9, 3.4021403798069468`*^9}, {
   3.402140442948784*^9, 3.4021404698243*^9}, {3.40214052530974*^9, 
   3.4021405261847568`*^9}, {3.402140572076263*^9, 3.4021405730294065`*^9}, {
   3.40214283290092*^9, 3.402142834900958*^9}, 3.402142878995555*^9, {
   3.4021429531532288`*^9, 3.40214297455989*^9}, {3.4021430512488623`*^9, 
   3.4021430865307894`*^9}, {3.402143143625636*^9, 3.4021431463288126`*^9}, {
   3.402143222267771*^9, 3.402143365629898*^9}, {3.4021439797510643`*^9, 
   3.4021440141579747`*^9}, {3.4021444783543873`*^9, 
   3.4021445164332433`*^9}, {3.4021445469025784`*^9, 3.402144574918741*^9}, {
   3.4021446846239724`*^9, 3.4021446895459423`*^9}, {3.4021447226559525`*^9, 
   3.402144729593586*^9}, {3.402144860127342*^9, 3.402144926378614*^9}, {
   3.4021449572542067`*^9, 3.402145180727247*^9}, {3.402149153412896*^9, 
   3.4021491595067635`*^9}, {3.4021496964233217`*^9, 3.402149821410097*^9}, {
   3.40214987416111*^9, 3.402149884755063*^9}, {3.4021499394279876`*^9, 
   3.4021499498344374`*^9}, {3.402150065133526*^9, 3.402150121790864*^9}, {
   3.4021501655260787`*^9, 3.4021502014486437`*^9}, {3.402150388827241*^9, 
   3.4021504643911915`*^9}, {3.4021505016731577`*^9, 3.402150539877016*^9}, {
   3.402150576221464*^9, 3.4021506145190744`*^9}, 3.402150646160307*^9, {
   3.4021507013801165`*^9, 3.402150701614496*^9}, {3.402150792022482*^9, 
   3.4021508226011944`*^9}, {3.4022048852154446`*^9, 
   3.4022049314194565`*^9}, {3.402223441649846*^9, 3.4022234739004655`*^9}, {
   3.4022235664178667`*^9, 3.4022235977934694`*^9}, {3.402225770632062*^9, 
   3.4022257810853877`*^9}, {3.4022260066522183`*^9, 
   3.4022260340902452`*^9}, {3.402227989127781*^9, 3.4022280025967894`*^9}, 
   3.4022280710668545`*^9, {3.4022281624279833`*^9, 3.4022281629904943`*^9}, {
   3.4023193135668306`*^9, 3.4023194603141108`*^9}, {3.402319603150462*^9, 
   3.40231966787294*^9}, {3.4023197252970443`*^9, 3.4023197324378977`*^9}, {
   3.4023205583495092`*^9, 3.4023206749454975`*^9}, {3.4023207399779963`*^9, 
   3.4023207413373976`*^9}, {3.4023208249015017`*^9, 
   3.4023209920765867`*^9}, {3.4023211800958214`*^9, 3.40232123755005*^9}, {
   3.4023216909806304`*^9, 3.4023216975588818`*^9}, {3.402321742184738*^9, 
   3.4023217427316236`*^9}, {3.4023247260232773`*^9, 
   3.4023248331659594`*^9}, {3.4023253919266872`*^9, 
   3.4023255075695324`*^9}, {3.40237831846457*^9, 3.4023783246678143`*^9}, {
   3.403961973148756*^9, 3.4039620282435637`*^9}, {3.4039620755257215`*^9, 
   3.403962089885372*^9}, 3.4041951327140923`*^9, {3.4041952182469845`*^9, 
   3.404195247966305*^9}, {3.4043004279447346`*^9, 3.4043004361659346`*^9}, {
   3.404327490209344*^9, 3.4043275159493437`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"FirstUnderlyingVanillaPayOffFourierDroite", "[", 
   RowBox[{"k1_", ",", "k2_", ",", "K_"}], "]"}], ":=", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    SuperscriptBox["K", 
     RowBox[{"1", "+", 
      RowBox[{"\[ImaginaryI]", " ", "k1"}]}]]}], 
   RowBox[{
    RowBox[{"\[ImaginaryI]", " ", "k1", " ", "k2"}], "-", 
    RowBox[{
     SuperscriptBox["k1", "2"], " ", "k2"}]}]]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.403954614991857*^9, 3.403954664367805*^9}, {
  3.4041950832443924`*^9, 3.4041950981040525`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"FirstUnderlyingVanillaPayOffFourierGauche", "[", 
   RowBox[{"k1_", ",", "k2_", ",", "K_"}], "]"}], ":=", 
  RowBox[{"-", 
   FractionBox[
    SuperscriptBox["K", 
     RowBox[{"1", "+", 
      RowBox[{"\[ImaginaryI]", " ", "k1"}]}]], 
    RowBox[{
     RowBox[{"k1", " ", "k2"}], "+", 
     RowBox[{"\[ImaginaryI]", " ", 
      SuperscriptBox["k1", "2"], " ", "k2"}]}]]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.4039546461018295`*^9, 3.4039546738523617`*^9}, {
  3.4041951183075657`*^9, 3.4041951213701243`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 " Vanilla Underlying 2 Option:  payoff=",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["S", "2"], "-", "K"}], ")"}], "+"], TraditionalForm]]]
}], "Subtitle",
 CellChangeTimes->{{3.399795779284771*^9, 3.3997957832385283`*^9}, {
  3.4039536500202045`*^9, 3.403953704380624*^9}, {3.4039838619091463`*^9, 
  3.4039838625175457`*^9}, {3.404383273592744*^9, 3.4043832898791437`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Timing", "[", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"S1", "=", "0.05"}], ",", 
       RowBox[{"S2", "=", "0.05"}], ",", 
       RowBox[{"K", "=", "0.06"}], ",", 
       RowBox[{"M1", "=", 
        RowBox[{"-", "0.01"}]}], ",", 
       RowBox[{"M2", "=", 
        RowBox[{"-", "0.02"}]}], ",", 
       RowBox[{"\[Theta]1", "=", "0.03"}], ",", 
       RowBox[{"\[Theta]2", "=", "0.041"}], ",", 
       RowBox[{"\[Rho]s", "=", "0.6"}], ",", 
       RowBox[{"\[Rho]sinf", "=", "0.8"}], ",", 
       RowBox[{"\[Rho]m1", "=", "0.3"}], ",", 
       RowBox[{"\[Rho]m2", "=", 
        RowBox[{"-", "0.3"}]}], ",", 
       RowBox[{"\[Rho]1", "=", "0.5"}], ",", 
       RowBox[{"\[Rho]2", "=", "0.8"}], ",", " ", 
       RowBox[{"\[CapitalSigma]1", "=", "0.04"}], ",", 
       RowBox[{"\[CapitalSigma]2", "=", "0.05"}], ",", 
       RowBox[{"\[Beta]", "=", "5"}], ",", 
       RowBox[{"\[Tau]", "=", "5"}], ",", 
       RowBox[{"\[Lambda]1", "=", "1.1"}], ",", 
       RowBox[{"\[Lambda]2", "=", "1.2"}], ",", 
       RowBox[{"\[Nu]1", "=", "0.01"}], ",", 
       RowBox[{"\[Nu]2", "=", "0.01"}], ",", "M", ",", "\[CapitalSigma]inf", 
       ",", "\[CapitalSigma]", ",", "Q", ",", "\[Beta]m", ",", "S", ",", 
       "\[Rho]", ",", 
       RowBox[{"printflag", "=", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "4", ",", "6"}], "}"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"M", "=", 
       RowBox[{"(", GridBox[{
          {"M1", 
           RowBox[{"\[Rho]m1", 
            SqrtBox[
             RowBox[{"M1", " ", "M2"}]]}]},
          {
           RowBox[{"\[Rho]m2", 
            SqrtBox[
             RowBox[{"M1", " ", "M2"}]]}], "M2"}
         }], ")"}]}], ";", 
      RowBox[{"\[CapitalSigma]inf", "=", 
       RowBox[{"(", GridBox[{
          {"\[Theta]1", 
           RowBox[{
            SqrtBox[
             RowBox[{"\[Theta]1", " ", "\[Theta]2"}]], " ", "\[Rho]sinf"}]},
          {
           RowBox[{
            SqrtBox[
             RowBox[{"\[Theta]1", " ", "\[Theta]2"}]], " ", "\[Rho]sinf"}], 
           "\[Theta]2"}
         }], ")"}]}], ";", 
      RowBox[{"\[CapitalSigma]", "=", 
       RowBox[{"(", GridBox[{
          {"\[CapitalSigma]1", 
           RowBox[{
            SqrtBox[
             RowBox[{"\[CapitalSigma]1", " ", "\[CapitalSigma]2"}]], " ", 
            "\[Rho]s"}]},
          {
           RowBox[{
            SqrtBox[
             RowBox[{"\[CapitalSigma]1", " ", "\[CapitalSigma]2"}]], " ", 
            "\[Rho]s"}], "\[CapitalSigma]2"}
         }], ")"}]}], ";", 
      RowBox[{"S", "=", 
       RowBox[{"{", 
        RowBox[{"S1", ",", "S2"}], "}"}]}], ";", 
      RowBox[{"\[Rho]", "=", 
       RowBox[{"{", 
        RowBox[{"\[Rho]1", ",", "\[Rho]2"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"BiHestonUnderlying2Vanilla", "[", 
       RowBox[{
       "S", ",", "K", ",", "\[Tau]", ",", "\[CapitalSigma]", ",", "M", ",", 
        "\[CapitalSigma]inf", ",", "\[Beta]", ",", "\[Rho]", ",", 
        "printflag"}], "]"}]}]}], "]"}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.4042179165109076`*^9, 3.4042181225929894`*^9}, {
   3.4042182894711933`*^9, 3.4042183203780365`*^9}, {3.404218428926996*^9, 
   3.4042184428647633`*^9}, {3.4042185056940947`*^9, 3.404218515647411*^9}, 
   3.404218545647987*^9, 3.4042186425092216`*^9, {3.404218786340108*^9, 
   3.4042188084030313`*^9}, {3.4042188562320747`*^9, 
   3.4042188574508486`*^9}, {3.4042189321866584`*^9, 
   3.4042189325616655`*^9}, {3.404219027954122*^9, 3.404219150440849*^9}, 
   3.4042191965042334`*^9, 3.4042193169909215`*^9, {3.404219444149613*^9, 
   3.4042194496028423`*^9}, {3.404220002394706*^9, 3.404220071911666*^9}, {
   3.404223202737401*^9, 3.404223224315941*^9}, {3.4042997958015347`*^9, 
   3.4042998138195343`*^9}, {3.404301200209934*^9, 3.4043012204743347`*^9}, {
   3.4043014521187344`*^9, 3.4043014744267344`*^9}, {3.4043236557873435`*^9, 
   3.4043236664577436`*^9}, {3.4043237018697433`*^9, 
   3.4043237041785436`*^9}, {3.4043237952981434`*^9, 
   3.4043238099153433`*^9}, {3.4043239823881435`*^9, 3.404323989688944*^9}, {
   3.404324531757744*^9, 3.404324533068144*^9}, {3.404325260106144*^9, 
   3.4043252745985436`*^9}, 3.4043254213945436`*^9, {3.4043265313085437`*^9, 
   3.4043265321197433`*^9}, {3.404326685826544*^9, 3.4043266937825437`*^9}, {
   3.4043287111969433`*^9, 3.4043287119145436`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" S=\"\>", "\[InvisibleSpace]", 
   InterpretationBox[GridBox[{
      {"0.05`"},
      {"0.05`"}
     },
     BaselinePosition->{Baseline, {1, 1}},
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}}],
    ColumnForm[{0.05, 0.05}],
    Editable->False], "\[InvisibleSpace]", "\<\" \[CapitalSigma]=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.04`", "0.026832815729997475`"},
       {"0.026832815729997475`", "0.05`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\"M=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", "0.01`"}], "0.004242640687119285`"},
       {
        RowBox[{"-", "0.004242640687119285`"}], 
        RowBox[{"-", "0.02`"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], 
   "\[InvisibleSpace]", "\<\" \[CapitalSigma]inf=\"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.03`", "0.02805708466680029`"},
       {"0.02805708466680029`", "0.041`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\" Q=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.0026904562514984886`", "0.005910101619402922`"},
       {"0.`", "0.0016223883650666592`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\" \[Rho]=\"\>", 
   "\[InvisibleSpace]", 
   InterpretationBox[GridBox[{
      {"0.5`"},
      {"0.8`"}
     },
     BaselinePosition->{Baseline, {1, 1}},
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}}],
    ColumnForm[{0.5, 0.8}],
    Editable->False], "\[InvisibleSpace]", "\<\" Imaginary Shifts=\"\>", 
   "\[InvisibleSpace]", 
   InterpretationBox[GridBox[{
      {"1.1`"},
      {"1.2`"}
     },
     BaselinePosition->{Baseline, {1, 1}},
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}}],
    ColumnForm[{1.1, 1.2}],
    Editable->False]}],
  SequenceForm[" S=", 
   ColumnForm[{0.05, 0.05}], " \[CapitalSigma]=", 
   MatrixForm[{{0.04, 0.026832815729997475`}, {0.026832815729997475`, 0.05}}],
    "M=", 
   MatrixForm[{{-0.01, 
    0.004242640687119285}, {-0.004242640687119285, -0.02}}], 
   " \[CapitalSigma]inf=", 
   MatrixForm[{{0.03, 0.02805708466680029}, {0.02805708466680029, 0.041}}], 
   " Q=", 
   MatrixForm[{{0.0026904562514984886`, 0.005910101619402922}, {0., 
    0.0016223883650666592`}}], " \[Rho]=", 
   ColumnForm[{0.5, 0.8}], " Imaginary Shifts=", 
   ColumnForm[{1.1, 1.2}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.4043272124357433`*^9, 3.4043289438361435`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"{NbLegCoef1,NbLegCoef1n,period1,period1n,\[Epsilon]1,imax}=\"\>\
", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "12", ",", "8", ",", "4.4582257006028225`", ",", "4.4582257006028225`", 
     ",", "0.00001`", ",", "10"}], "}"}], 
   "\[InvisibleSpace]", "\<\"{NbLegCoef2,period2,period2n,\[Epsilon]2}=\"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "10", ",", "6.687338550904234`", ",", "0.6687338550904234`", ",", 
     "0.00001`"}], "}"}]}],
  SequenceForm[
  "{NbLegCoef1,NbLegCoef1n,period1,period1n,\[Epsilon]1,imax}=", {
   12, 8, 4.4582257006028225`, 4.4582257006028225`, 0.00001, 10}, 
   "{NbLegCoef2,period2,period2n,\[Epsilon]2}=", {
   10, 6.687338550904234, 0.6687338550904234, 0.00001}],
  Editable->False]], "Print",
 CellChangeTimes->{3.4043272124357433`*^9, 3.4043289438361435`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwVV3c8lt8btvfee4/3NSJkpPd5biVFQyiEL5EQhQoJZaQhRLILGaFCFEl5
36Ns2SPZkk0iK6P8/P56PtfnOue+7+u6z/mc55Z28jK/QENFRVVAS0X1/29V
FKeWiVkc1pNbJN9nLQ+O57v23m3xxg8V2ZjRWMrDwS0sxrElBH+eZFMWekIe
ugzj6am0InBBK4bTTrg8aNSvkExbYnF52oMO75TlYdND8kY6VQIunv7wXyKP
PFRzmZT+1EzBHbQ6dmRX5CCqzOfXAdc0POhGms/tdjlQKjTlN2p5hh831cG+
58nBw53xNz8ns3AV6HjgGSAHv80CTiVQPceztZqMHI/KgWUO58IBkTz8InVn
+DK3HHxcy4kc13yBHzWdHXHqlQUp4/3EqBOv8LPEvf2/kmUh/ElbnaZrIR5e
dVh/yFIWFKT+hhi0FOO+dQYrcw0yYN1Yb8rfX4JHOfeWJd+UgQdX4yRmJt/g
vAnicR/VZGChRrEylqoMdzZyfnk9WhrKL5qvj2hW4N1r34FeWwpy+rq08ZYq
XEvsi4r6gAiQ9uhJvLD4hC9oF710VBaBr2Hp9Lz9n/AH43e06W8KA5PKxe7J
yc/49PUYy0B5Ibh069+Vh1S1+KMwoayfMfxA33X+7J+7tfh0WOrJ7EU+SFds
BCf2OtzS1rN524IP2tsfc2qL1OOvf7z+90OGF/bJEguHNBvx0fVh444xLmi9
/jD+yIdGfJIn+A6HDRe4NS8HlkATnqqX+fxyPiek+lJM7pz4gn/r3foQlsUO
/+otplVcW/BI3k6+awPMkCRW0Zb4swW/M1+uVrzOBOpXJMqpfFrxp7i72Xlh
JnASmbnTHdKGN4WXnPl2iQHOayNurKUd/85brRxiRgtP71zZJyLQgZf33HEJ
vUcD3d2yZ9fsO3B1zecYZzU1GF27/6xosQOndtSgMTWhAkKxmZokXxf+sodX
77nyFu64Q2uxZdeFs7QGc/43s4Gnnnzn1/u8C5+exYpUiv/grD9FKDE63bid
86VgCes1fIE4fpzKtgf3KT3O/ZXlN65wI9F7MLsHJ8ib3G1jWcIdGo7Gv5/v
wVU3twT4eBbxdpfCAe9bX3HJigVTe495/G22n/v3zF7cUM1mNjZpAp//TXhI
nu3FZWXfXLGhHsflDg6UpGh+w6UCbtpQ/MbwxFF8w6z2G9782K+ajWEE9xdn
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
h5MjaVRzenYxo09Iz58X4eT/AfAD0Qs=
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    PlotLabel->FormBox[
     "\"1st Inverse Fourier: K =0.06 \[Omega]1=0\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwVl3c81f8Xx1GUFdnbNa9rZZSR7udzKmn4SmgIiRKhMkKySbZIRiRlpWFn
c+9bRGVlpjLKiGuGQkb53d9fn8d5nPN+Pc/7nPN5fz5vqUsupleYGBgY0DYG
hv8/62O49p4wScDGpvQDH/RLg+3lHvWwdldcZbwsirdPGg5tYHG27UG4734Q
TGmXhh79RGaGvZF4qYraJ+IbadB495ts3B6P516waOsrkoZ1Z8nbGQxJuNY5
ScnKVGlo5D5RNqeZinNoveqYDJCGmHKPnwccHuNiF3ZdjLwoDYoFxvwG7U/x
HksJ9wY9abi3NV46N5GF55WcO03llYYlE59TSQy5+LypamD+pBSczeGaPyCS
h5ffs+Str5SC2pWc6HHNF7j/8bdGe0KlgHB8PynG6BUesjd6TcNICkIffWzW
dCjAxZ0+jDDzSoE84W/QwfZivHqe/yR7MgHMP7wz5v9agv9ZSYqrMiNAlHuC
xNREKb5UZB5N4iLA/FtiXTxDOX7Eb4fvAwZJqHQ0Xf2mWY1PZQosN2SLQc6X
Hi28vR7nkOZSkKEIAllVV+KF2Rvc3/XPq9PSgvApJIOZ9+sbXOfTj5bWCAHY
qezYOzHRgB89eOvDcQt+uBbwz+0eQxPuZnxevI6XF5h7Lp//E9aEf4pwyvQK
54EM4ge4xNmMX34Q/fvO393Q2fmAS0vkHT6hShDqX+CGfTKkgiHND7i9w9cZ
thlO6Lh1L/FozQec5W11jsI6B1xt++VbAi34pR23vRx3cUCaJ/XEXaNWvDbx
TNpRAzb4986MpuzQjjewltvELLFAilj1x+S5dny3nRXjIokF1NwkKhk8OvCj
rsHSsvbMcElk6m5v0EecIWMkJn92G1zWQrux9k78maOZAL8aI6TfddsnItCF
Pz9Vc0k2gAF6e2XOr1h34a9LvAWUs7Zwg5sRTwsXuvCrnAOOVmx/cYVikz2S
fD34CsXli6zBH9x2a5vZhlUPvn11oVZFcRVPO1nh1Z/bg38+M2GlLbCCs8+J
UOO0e/Hh7JDLnsy/8XnS+H8Mln24hYTSgdn9C7j87WTXwew+vP7pZnRU6Tx+
8f2xxKrZPpzZtFiAd3MW77QvGHAN+IT3RDLe2l82hb/O9nIayezHaW21S5eL
xvDZJYV7lOl+XNXigZ/e8VFc9tBASarmZ5z/3GG543Pf8eTv+JpJ02f8gsZ3
1vrcQdxbnDWigfYFb4opukgV6sGLr9W+ylD/ip88zGp563snPlV7/aOPz1dc
+Y7Rjh7XdtzColtAk2MA351VIW6s2oSTUx7lZu8ZxN2d0z5dIjzHvSaMPgR6
D+IxDSMW1wUT8cJ9DHOWbwbx3EfLMQMc/ojQa7eXz2wIj57bwZDaVYCYdqs2
hnoN4wcfTwTd9WhEejbfJ2zQMM6a6dgwS25GHkUJbOSd33C1ZscfL5beox9G
qybLqd9w5YZELltCB5J4/MKza/QbbnP7JYu2USdSWilo+8T/HU83DY/bCOpC
dkdsFkqtv+Pj+zVLa9t7EMN1XSapO9/xywoGguqTvSg9kYcvLu87DjVP9Mz/
9KG+sbfazgvfcU8hpx3pTJ+RQQgpUCZkBHd323bhTd0AOvmKFE3MGcFP8UjM
KUUPojO9pBSl5hFcITh+rdpsCNnJKxZpso3iqgc4SF09w+iasWKttvIo7qdk
rvk0+hu66a34Tu/kKH7Z/bkhl+R3FNKi+O1wwije3xX1uO/DdxT1S3HmaNko
zhzXIeknOoLuiymtGn4axU0MiCLVTiPo6Q0lrtMiY/iIy5kONaZRROVRxu2y
xvBT1tpNaQJjqFlP2fDq2zF8W6/Mdd+zY6jdTvnctYkx/OLWn9ELiWNosELZ
xUNxHI/jTUo8xzaOxr8p+3r/N46nzT9Gdw+No5mdKuF+N8bxynrfR2Pe42jd
QuVJaOk4brv6n9L57+OIKVTlVUTvOO6xTf/h3d0/EGuBSmXMyjjOrbiixH7w
BxLaUvmYuP8Hrsr9/NaxRz+QVrbqVk7DD1z9JNv1WPIEwtpU2V+M/8BL8mue
hF2aQEeWVQULWCZwsS2VQELYBDp9dM+e8hMT+N5ratxnP0wgK9c9etXXJvCI
/hVVxqkJdDl1z1HKvQlckO1+v/OOSeQ+s+diU/cEPncg/UU6TCIfPjXnD78n
8L98OZ9dLSdRMFntVrvAJI5/2MogeE6i+Di1uD6LSXzgwIquSu4kelil9uiL
3ySe7lLTlVw7iZ6MqOUNZUzid5U0Ipc7J1Ghpjr6MTqJFygWHXv5ZxJVWKm3
Tm2n4cOEY0vs7DREuavePydPw1u5Yhh8xGjobaH62OIxGp65Lr+4pkxDbf3q
P5edaHiuE5f0/QM01MugsbEWQ8Nfs57r1jekoQGSxo5/hTR8lmVZWuQ8DU37
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
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    PlotLabel->FormBox[
     "\"1st Inverse Fourier: K =0.06 \[Omega]1=0.2\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
/zfCXbLnreJb8eDrKv5tmr/RW3ms9ktiKx4ZoRLxzew3sh9pe/cpqRV/UaqS
0HPvN3opKXlaL6UVTx5SyfqR9Btd8QjDrqW24pm7VIuGKn6jIkk3Fv60VjxP
XRUfHf6NqPnJJFsafn9FtWGCYRwFxKYxGNIw5bFq91/iONKgV9nqo62vzlP9
NXdiHO3o9bLZScON3aozSw7jKEM6yPt7civeSae2vhY2jgzqgz3O0Pj0kdWY
t/LGUXCP/KObNL7DRmo8hLZx5OA5Ub6PpmfSR02MaWEcPbG8oPaGpnc+Q01+
F98EeqNhM91A82OtSe3A7gMTyD2FOpEU1YrTragd4TadQMn6WzzS4a34TnH1
s/w+E2ird8XwaggtD/rqlwVfTaCR1Y37pwJbcQFX9Rui+ASiNxGxW3jYihOr
1R8Qd0yif+9EHzvdbcUTn6yWPZCeRE6RnTlWbq0491nK4vejkygrPnCG/3Yr
vt1zzCE0eBJ9E56ZqbNqxb/PmF6cZf+DyuX3Vvrot+JnSkQj9ZX/IJPTU5yp
h2n+eP/6mnbuD3L/Xvw7WqcVL2C8BRef/UFPi5mMhxRa8RAhP/nyPVNI1bPm
hwE7Tc+Q3nUe7SlEl6ZybJWhFffIZEm9eXkKnf1OoC7RzoO16jN+saQpxN0x
Tdjd1YIfPJ5JHyD1Fx370taXH9aCz7g2dp9WmkaCJ9eq3f4249c1o7izzk6j
nJhZFv/vzXj/5sXTdC7TKLvt6daVqma8LvhnZWHRNBpNeHXc80UznpY0nyug
NYM2Hqm1OUEzLmfLVjkrMYtG95cyvAtuwvsj1V6UK8whq1gPg1ZCI97eH0Pf
hs2h0wIl6sm/G/A62RWH3+fm0MUh+8nLjQ14ScVHXd47c4hrZWkl7XkDHj6r
9+sWZQ5xUrqo/qQGHJ27pCRxZh6tBom5WOh/xdM47lUHOS0gfo5Cha2QOvxG
eM3shcIldEnz+ElzmRqc+7LOJY2qJdQsdf5NH1sNTiUVUAQ6l1Be8y4Fu8Vq
nP9zYkjv0hKSMIo8919VNV6z4CZtqbWMDrzZovyzqsalTCVNHCuWkZvnz7Ss
jCr8p9QD/CHtXrSV32KtvL8SD5ldlLH+uYL6K/b0d4hW4hoUhzC92RVEb0gv
GrqzEg83NjZl5l5FSWmR2mr9n3HdJ4oLYRdXUUzFsws2AZ/xhOk+4ov+VRSA
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
XrqkKDQXUv4HggSaKg==
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    PlotLabel->FormBox[
     "\"1st Inverse Fourier: K =0.06 \[Omega]1=2\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{Automatic, Automatic}]}], "}"}]], "Print",
 CellChangeTimes->{3.4043272124357433`*^9, 3.4043289491401434`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQPXdapAib6W37suln58Tu3mi/YUJfcnTHHfu3kn+3
5z2fb9/yZlWXS9pTe5eqA641dhv3Q+Tf2GdWJKkXrd26P0/KUs7y6kd7m8yT
u3O5t+yHqP9q/zlj/p05lzbsn7VP5rv/9x/2ylotRQ84V0P1/7HXm9MVu996
6f5kQ4aMzTwMDusWbryiVLgAah6jQ/KpigwN85n7K5mLruyby+zwsP7MjQL9
yVDzWR1qe/4VSv/r2d9/9bHDKT12h8/Wi2tXHWqF2sfhUPznjtAVi4b9S5eH
rr26n8vhZTmnUQxLBdR+HofZs8NiGJcV7t9deVzyYQCfQ8FE25e792RC3SPg
wJ6YUx06N2n/i6Uyzt8+CDi84DJsb9wUBXWfoEN9H/fl8p9B+7/0hf6s3ink
oNR337p1hxfUvcIOSaJBke8WOu3/V963nrFJxCFV7mOdxk5LqPtFHZ7d5Fv8
caLhfq7E46ntXmIO21PsWebvVYf6R9xh6QvTFJ7t8vtFvBhkeIUlHBq01+7U
eS8C9Z+EQ831DecFfbj3KxhbXpp0W9LBQFXp8aaJjFD/SjlwSvfn6Ad82wcA
ZAXndw==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotLabel->FormBox["\"2nd Inverse Fourier:\"", TraditionalForm],
  PlotRange->{{0., 6.687338550904234}, {-0.08467782460727026, 
   0.06926522329521653}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Print",
 CellChangeTimes->{3.4043272124357433`*^9, 3.4043289500293436`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"8.113000000000012`", ",", "0.007153295425902467`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.4043254409569435`*^9, {3.404326650024544*^9, 3.4043266978853436`*^9}, 
   3.4043272218893433`*^9, 3.4043289503257437`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Timing", "[", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"S1", "=", "0.05"}], ",", 
       RowBox[{"S2", "=", "0.05"}], ",", 
       RowBox[{"K", "=", "0.06"}], ",", 
       RowBox[{"M1", "=", 
        RowBox[{"-", "0.01"}]}], ",", 
       RowBox[{"M2", "=", 
        RowBox[{"-", "0.02"}]}], ",", 
       RowBox[{"\[Theta]1", "=", "0.03"}], ",", 
       RowBox[{"\[Theta]2", "=", "0.041"}], ",", 
       RowBox[{"\[Rho]s", "=", "0.6"}], ",", 
       RowBox[{"\[Rho]sinf", "=", "0.8"}], ",", 
       RowBox[{"\[Rho]m1", "=", "0.3"}], ",", 
       RowBox[{"\[Rho]m2", "=", 
        RowBox[{"-", "0.3"}]}], ",", 
       RowBox[{"\[Rho]1", "=", "0.5"}], ",", 
       RowBox[{"\[Rho]2", "=", "0.8"}], ",", " ", 
       RowBox[{"\[CapitalSigma]1", "=", "0.04"}], ",", 
       RowBox[{"\[CapitalSigma]2", "=", "0.05"}], ",", 
       RowBox[{"\[Tau]", "=", "5"}], ",", 
       RowBox[{"\[Lambda]1", "=", "1.1"}], ",", 
       RowBox[{"\[Lambda]2", "=", "1.2"}], ",", "Q", "\[InvisibleSpace]", ",",
        "M", ",", "\[CapitalSigma]inf", ",", "\[CapitalSigma]", ",", 
       "\[Beta]m", ",", "S", ",", "\[Rho]", ",", 
       RowBox[{"printflag", "=", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "4", ",", "6"}], "}"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"M", "=", 
       RowBox[{"(", GridBox[{
          {"M1", 
           RowBox[{"\[Rho]m1", 
            SqrtBox[
             RowBox[{"M1", " ", "M2"}]]}]},
          {
           RowBox[{"\[Rho]m2", 
            SqrtBox[
             RowBox[{"M1", " ", "M2"}]]}], "M2"}
         }], ")"}]}], ";", 
      RowBox[{"\[CapitalSigma]inf", "=", 
       RowBox[{"(", GridBox[{
          {"\[Theta]1", 
           RowBox[{
            SqrtBox[
             RowBox[{"\[Theta]1", " ", "\[Theta]2"}]], " ", "\[Rho]sinf"}]},
          {
           RowBox[{
            SqrtBox[
             RowBox[{"\[Theta]1", " ", "\[Theta]2"}]], " ", "\[Rho]sinf"}], 
           "\[Theta]2"}
         }], ")"}]}], ";", 
      RowBox[{"\[CapitalSigma]", "=", 
       RowBox[{"(", GridBox[{
          {"\[CapitalSigma]1", 
           RowBox[{
            SqrtBox[
             RowBox[{"\[CapitalSigma]1", " ", "\[CapitalSigma]2"}]], " ", 
            "\[Rho]s"}]},
          {
           RowBox[{
            SqrtBox[
             RowBox[{"\[CapitalSigma]1", " ", "\[CapitalSigma]2"}]], " ", 
            "\[Rho]s"}], "\[CapitalSigma]2"}
         }], ")"}]}], ";", 
      RowBox[{"S", "=", 
       RowBox[{"{", 
        RowBox[{"S1", ",", "S2"}], "}"}]}], ";", 
      RowBox[{"\[Rho]", "=", 
       RowBox[{"{", 
        RowBox[{"\[Rho]1", ",", "\[Rho]2"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Q", "=", "\[InvisibleSpace]", 
       TagBox[
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {"0.0026904562514984886", "0.005910101619402922"},
           {"0.", "0.0016223883650666592"}
          },
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
        Function[BoxForm`e$, 
         MatrixForm[BoxForm`e$]]]}], ";", 
      RowBox[{"Q", "=", "\[InvisibleSpace]", 
       TagBox[
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {"0.002", "0.004"},
           {"0.", "0.001"}
          },
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.7]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
        Function[BoxForm`e$, 
         MatrixForm[BoxForm`e$]]]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"BiHestonUnderlying2Vanilla2", "[", 
       RowBox[{
       "S", ",", "K", ",", "\[Tau]", ",", "\[CapitalSigma]", ",", "M", ",", 
        "\[CapitalSigma]inf", ",", "Q", ",", "\[Rho]", ",", "printflag"}], 
       "]"}]}]}], "\[IndentingNewLine]", "]"}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.4042179165109076`*^9, 3.4042181225929894`*^9}, {
   3.4042182894711933`*^9, 3.4042183203780365`*^9}, {3.404218428926996*^9, 
   3.4042184428647633`*^9}, {3.4042185056940947`*^9, 3.404218515647411*^9}, 
   3.404218545647987*^9, 3.4042186425092216`*^9, {3.404218786340108*^9, 
   3.4042188084030313`*^9}, {3.4042188562320747`*^9, 
   3.4042188574508486`*^9}, {3.4042189321866584`*^9, 
   3.4042189325616655`*^9}, {3.404219027954122*^9, 3.404219150440849*^9}, 
   3.4042191965042334`*^9, 3.4042193169909215`*^9, {3.404219444149613*^9, 
   3.4042194496028423`*^9}, {3.404220002394706*^9, 3.404220071911666*^9}, {
   3.404223202737401*^9, 3.404223224315941*^9}, {3.4042997958015347`*^9, 
   3.4042998138195343`*^9}, {3.404301200209934*^9, 3.4043012204743347`*^9}, {
   3.4043014521187344`*^9, 3.4043014744267344`*^9}, {3.4043236557873435`*^9, 
   3.4043236664577436`*^9}, {3.4043237018697433`*^9, 
   3.4043237041785436`*^9}, {3.4043237952981434`*^9, 
   3.4043238099153433`*^9}, {3.4043239823881435`*^9, 3.404323989688944*^9}, {
   3.4043241933625436`*^9, 3.404324219102544*^9}, {3.4043242516597433`*^9, 
   3.4043243486761436`*^9}, 3.404324548200144*^9, {3.4043248566901436`*^9, 
   3.4043248778437433`*^9}, {3.4043249842825437`*^9, 
   3.4043250001789436`*^9}, {3.404325055855344*^9, 3.4043250667909436`*^9}, {
   3.4043251312501435`*^9, 3.4043251343545437`*^9}, {3.4043275799561434`*^9, 
   3.4043275829357433`*^9}, {3.4043287173121433`*^9, 
   3.4043287177489433`*^9}, {3.4043293513861437`*^9, 
   3.4043293551301436`*^9}, {3.404329398622944*^9, 3.4043294013217435`*^9}, {
   3.4043298449545436`*^9, 3.404329846826544*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" S=\"\>", "\[InvisibleSpace]", 
   InterpretationBox[GridBox[{
      {"0.05`"},
      {"0.05`"}
     },
     BaselinePosition->{Baseline, {1, 1}},
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}}],
    ColumnForm[{0.05, 0.05}],
    Editable->False], "\[InvisibleSpace]", "\<\" \[CapitalSigma]=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.04`", "0.026832815729997475`"},
       {"0.026832815729997475`", "0.05`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\"M=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", "0.01`"}], "0.004242640687119285`"},
       {
        RowBox[{"-", "0.004242640687119285`"}], 
        RowBox[{"-", "0.02`"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], 
   "\[InvisibleSpace]", "\<\" \[CapitalSigma]inf=\"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.03`", "0.02805708466680029`"},
       {"0.02805708466680029`", "0.041`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\" Q=\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.002`", "0.004`"},
       {"0.`", "0.001`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\" \[Rho]=\"\>", 
   "\[InvisibleSpace]", 
   InterpretationBox[GridBox[{
      {"0.5`"},
      {"0.8`"}
     },
     BaselinePosition->{Baseline, {1, 1}},
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}}],
    ColumnForm[{0.5, 0.8}],
    Editable->False], "\[InvisibleSpace]", "\<\" Imaginary Shifts=\"\>", 
   "\[InvisibleSpace]", 
   InterpretationBox[GridBox[{
      {"1.1`"},
      {"1.2`"}
     },
     BaselinePosition->{Baseline, {1, 1}},
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}}],
    ColumnForm[{1.1, 1.2}],
    Editable->False]}],
  SequenceForm[" S=", 
   ColumnForm[{0.05, 0.05}], " \[CapitalSigma]=", 
   MatrixForm[{{0.04, 0.026832815729997475`}, {0.026832815729997475`, 0.05}}],
    "M=", 
   MatrixForm[{{-0.01, 
    0.004242640687119285}, {-0.004242640687119285, -0.02}}], 
   " \[CapitalSigma]inf=", 
   MatrixForm[{{0.03, 0.02805708466680029}, {0.02805708466680029, 0.041}}], 
   " Q=", 
   MatrixForm[{{0.002, 0.004}, {0., 0.001}}], " \[Rho]=", 
   ColumnForm[{0.5, 0.8}], " Imaginary Shifts=", 
   ColumnForm[{1.1, 1.2}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.4043275908761435`*^9, 3.4043292511873436`*^9, 
  3.404329357735344*^9, 3.4043294043793435`*^9, 3.4043298167653437`*^9, 
  3.4043298492601433`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"{NbLegCoef1,NbLegCoef1n,period1,period1n,\[Epsilon]1,imax}=\"\>\
", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "12", ",", "8", ",", "4.4582257006028225`", ",", "4.4582257006028225`", 
     ",", "0.00001`", ",", "10"}], "}"}], 
   "\[InvisibleSpace]", "\<\"{NbLegCoef2,period2,period2n,\[Epsilon]2}=\"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "10", ",", "6.687338550904234`", ",", "0.6687338550904234`", ",", 
     "0.00001`"}], "}"}]}],
  SequenceForm[
  "{NbLegCoef1,NbLegCoef1n,period1,period1n,\[Epsilon]1,imax}=", {
   12, 8, 4.4582257006028225`, 4.4582257006028225`, 0.00001, 10}, 
   "{NbLegCoef2,period2,period2n,\[Epsilon]2}=", {
   10, 6.687338550904234, 0.6687338550904234, 0.00001}],
  Editable->False]], "Print",
 CellChangeTimes->{3.4043275908761435`*^9, 3.4043292511873436`*^9, 
  3.404329357735344*^9, 3.4043294043793435`*^9, 3.4043298167653437`*^9, 
  3.4043298492601433`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
BPsfyfrTjA==
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    PlotLabel->FormBox[
     "\"1st Inverse Fourier: K =0.06 \[Omega]1=0\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
z99g/4wshMq9/5k5zocXcU1zR83JwrHOFO2SZ3z4+wfWHZ/nZeFGzw2rcz58
+DoirJyWZEH+xmrRAy4+3IWZ8dJdRjkwaw31sNThxfWjwmL7BeTAz2TfMwlb
bvyc5OIJurAcaP+VGRhi4cavP7UX9RSVA8dvus6vHnPhz9sPZbFKyoGE37J1
3DwnThHiLNshLwe8bM9zkxM58OX0mG4/bTmY2aFa/ph9My6ownC/fo8cfLzd
sLzvDRuuUuNmw4PLwef/coJqXNlw+x/GP7N05cB5eSrJpYcV75QXWPlwWA4S
ngSuK79kwYueJUuKWMtBc7ew/cVUJjw2ckHD3EYOPkn2YTetmHCPiyZGiefl
IHDsaL/VNiZcU4LruoC9HJD6LdFa2Yw4GX6jh9dNDpj8l1cdXm7C26wvxrMH
y8FRF53W9fV1rFT7beGhEDlgzQotH09ax+IFKG/Dw+TgukzIM27VdcziY88s
S6Qc3J0N11i7uIYNahgdY4yXg3jmw8Hig6vYHNcujpVcOdhdGj7uzrmMdY7F
UnUeycHEk1OuceVL2IvaX1o+BXLAf7dl/rXNEubnnW+/WCwHDvP5epKv/mHM
w2L1f17KwThhc7fVexETfL0pcOrDBp89zwR8pBewfwnWSUpNcuCyXeLPl955
7Kvb62KnFjlo7KNvF0qax9Llrnwf79jIX0d7LrllHpOLG9cZ+SYH7HV96dKs
fzAtx9aF77/kIGRZueaX+CymWtbi8ve3HPB1/20fGpnBFNebf2yZk4Pfz2fM
vJ/NYBIJTe3EXzlguXq61//gDLZe/aEoc00O/lsz1AhfmsbeidRduMAjDyLH
dbA0likM2b7t9eeThxcnLplvfjKJVRTXmiZulYd7YcYcN00nsQK9mn0NwvLA
efeIT0LuBBblRm6jUzb8JRc7v5/8iZ14X9E1pSIP0gUFf6KHRzGjrRVHWNTl
4cwUnTUkdRTTt375dpuGPOxzWP5laTyKac2XlxzVlocG0wt7c2pGMHHK86hn
++Th6EMFDZsnw9jQtaIDXibyECmYqHjp0RD2rfbJmzsn5MHrVUiAjfMQ1sn9
RD3XbMMuN3yFV3kIq88uoH62lAdjbYuOBxWD2KPW/P9228rDsTU5/l2dA5ir
fFb5iqc8eK9Kj28z78NiXakX912Vh5VLBQ8MJr5jz14+FAr3locvR0M9RwO+
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
CPlZlZUKt4yx/wHPmO60
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    PlotLabel->FormBox[
     "\"1st Inverse Fourier: K =0.06 \[Omega]1=0.2\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
B0e4OY8=
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    PlotLabel->FormBox[
     "\"1st Inverse Fourier: K =0.06 \[Omega]1=2\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{Automatic, Automatic}]}], "}"}]], "Print",
 CellChangeTimes->{3.4043275908761435`*^9, 3.4043292511873436`*^9, 
  3.404329357735344*^9, 3.4043294043793435`*^9, 3.4043298167653437`*^9, 
  3.4043298568885436`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQfWT51q8yebft9/+xMZ37dIP9hgl9ydEdd+xf/MpM
eNW/0L7lzaoul7Sn9g0/t9XLlm/YD5F/Y/9nWtAy8fdb9udJWcpZXv1ov8Qq
8TF/xOb9EPVf7cP+nPt4QXvD/ln7ZL77f/9h3/Smk3fv9ZVQ/X/ss4NXzm9Q
W7I/2ZAhYzMPg4No1d7QPZ/mQc1jdLiYw9Gm0TR9fyVz0ZV9c5kdNptfuqS1
eSLUfFaHuGp1D+HCrv39Vx87nNJjd5h0kE81Z2Yz1D4Oh3dzLiadulKzf+ny
0LVX93M5vFH/lbaRsxRqP4/DxB/JZ3WL8/bvrjwu+TCAz2GCcmy9wM1UqHsE
HPq2Nu5aIRS//8VSGedvHwQcsieUXsx9Egp1n6DDtBgZhf5ev/1f+kJ/Vu8U
cvBwCVnyRNoV6l5hB/ajk6r/37PZ/6+8bz1jk4hD7/TgGK9OY6j7RR2eeSXe
qFTX2s+VeDy13UvMYZG4Z5J+gCLUP+IONX8m7ItZKbZfxItBhldYwmHxQ8lQ
z0BeqP8kHISO8R2W2su0X8HY8tKk25IOV9+fTli28vs+iH+lHNxE5nSbNr3d
BwD31Oxv
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotLabel->FormBox["\"2nd Inverse Fourier:\"", TraditionalForm],
  PlotRange->{{0., 6.687338550904234}, {-0.08177326021776915, 
   0.06600363302003397}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Print",
 CellChangeTimes->{3.4043275908761435`*^9, 3.4043292511873436`*^9, 
  3.404329357735344*^9, 3.4043294043793435`*^9, 3.4043298167653437`*^9, 
  3.404329858183344*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"11.013999999999998`", ",", "0.007550163909320267`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.4043276044013433`*^9, 3.4043292683161435`*^9, 
  3.4043293663465433`*^9, 3.4043294126941433`*^9, 3.404329826094144*^9, 
  3.4043298586357436`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", "  ", 
  RowBox[{
  "utilise", " ", "le", " ", "beta", " ", "comme", " ", "source", " ", "de", 
   " ", "vol", " ", "de", " ", "vol"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.4043007591483345`*^9, 3.4043007916587343`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BiHestonUnderlying2Vanilla", "[", 
   RowBox[{
   "S_", ",", "K_", ",", "\[Tau]_", ",", "\[CapitalSigma]_", ",", "M_", ",", 
    "\[CapitalSigma]inf_", ",", "\[Beta]_", ",", "\[Rho]_", ",", 
    "printflag_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "LegendreCoef1", ",", "LegendreCoef1n", ",", "period1", ",", "period1n", 
      ",", "\[Epsilon]1", ",", "LegendreCoef2", ",", "period2", ",", 
      "period2n", ",", "\[Epsilon]2", ",", "imax", ",", "\[Lambda]1", ",", 
      "\[Lambda]2", ",", "Q"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Q", "=", 
      RowBox[{
       RowBox[{"CholeskyDecomposition", "[", 
        RowBox[{"-", 
         RowBox[{"(", 
          FractionBox[
           RowBox[{
            RowBox[{"M", ".", "\[CapitalSigma]inf"}], "+", 
            RowBox[{"\[CapitalSigma]inf", ".", " ", 
             RowBox[{"Transpose", "[", "M", "]"}]}]}], "2"], ")"}]}], "]"}], 
       "/", "\[Beta]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "LegendreCoef1", ",", "LegendreCoef1n", ",", "period1", ",", 
          "period1n", ",", "\[Epsilon]1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "LegendreCoef2", ",", "period2", ",", "period2n", ",", 
          "\[Epsilon]2"}], "}"}], ",", "imax", ",", "\[Lambda]1", ",", 
        "\[Lambda]2"}], "}"}], "=", 
      RowBox[{"BiHestonVanillaOptimalParameters", "[", 
       RowBox[{
       "S", ",", "K", ",", "\[Tau]", ",", "\[CapitalSigma]", ",", "M", ",", 
        "\[CapitalSigma]inf", ",", "Q", ",", "\[Rho]", ",", 
        "\"\<Underlying2Option\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"BiHestonUnderlying2Vanilla", "[", 
      RowBox[{
      "S", ",", "K", ",", "\[Tau]", ",", "\[CapitalSigma]", ",", "M", ",", 
       "\[CapitalSigma]inf", ",", "Q", ",", "\[Rho]", ",", "\[Beta]", ",", 
       "\[Lambda]1", ",", "\[Lambda]2", ",", 
       RowBox[{"{", 
        RowBox[{
        "LegendreCoef1", ",", "LegendreCoef1n", ",", "period1", ",", 
         "period1n", ",", "\[Epsilon]1", ",", "imax"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "LegendreCoef2", ",", "period2", ",", "period2n", ",", 
         "\[Epsilon]2"}], "}"}], ",", "printflag"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.4042074577632284`*^9, 3.4042074770760994`*^9}, {
   3.4042075328115444`*^9, 3.4042077538626633`*^9}, {3.404207970241818*^9, 
   3.404207993351637*^9}, {3.4042080286491895`*^9, 3.404208043665103*^9}, {
   3.4042173037335176`*^9, 3.4042173873444977`*^9}, {3.4042175109093704`*^9, 
   3.404217554472707*^9}, {3.4042999349691343`*^9, 3.4042999555923347`*^9}, 
   3.404325362832144*^9, 3.4043253935953436`*^9, {3.4043287266253433`*^9, 
   3.4043287313053436`*^9}, {3.404381506933344*^9, 3.4043815130329437`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "utilise", " ", "une", " ", "matrice", " ", "complete", "  ", "comme", " ", 
   "vol", " ", "de", " ", "vol"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.4043007956367345`*^9, 3.4043008208619347`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BiHestonUnderlying2Vanilla2", "[", 
   RowBox[{
   "S_", ",", "K_", ",", "\[Tau]_", ",", "\[CapitalSigma]_", ",", "M_", ",", 
    "\[CapitalSigma]inf_", ",", "Q_", ",", "\[Rho]_", ",", "printflag_"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "LegendreCoef1", ",", "LegendreCoef1n", ",", "period1", ",", "period1n", 
      ",", "\[Epsilon]1", ",", "LegendreCoef2", ",", "period2", ",", 
      "period2n", ",", "\[Epsilon]2", ",", "imax", ",", "\[Lambda]1", ",", 
      "\[Lambda]2", ",", "\[Beta]m"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "LegendreCoef1", ",", "LegendreCoef1n", ",", "period1", ",", 
          "period1n", ",", "\[Epsilon]1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "LegendreCoef2", ",", "period2", ",", "period2n", ",", 
          "\[Epsilon]2"}], "}"}], ",", "imax", ",", "\[Lambda]1", ",", 
        "\[Lambda]2"}], "}"}], "=", 
      RowBox[{"BiHestonVanillaOptimalParameters", "[", 
       RowBox[{
       "S", ",", "K", ",", "\[Tau]", ",", "\[CapitalSigma]", ",", "M", ",", 
        "\[CapitalSigma]inf", ",", "Q", ",", "\[Rho]", ",", 
        "\"\<Underlying2Option\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Beta]m", "=", 
      RowBox[{"-", 
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{
           RowBox[{"M", ".", "\[CapitalSigma]inf"}], "+", 
           RowBox[{"\[CapitalSigma]inf", ".", 
            RowBox[{"Transpose", "[", "M", "]"}]}]}], "2"], ")"}], ".", 
        RowBox[{"Inverse", "[", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Transpose", "[", "Q", "]"}], ".", "Q"}], ")"}], 
         "]"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"BiHestonUnderlying2Vanilla2", "[", 
      RowBox[{
      "S", ",", "K", ",", "\[Tau]", ",", "\[CapitalSigma]", ",", "M", ",", 
       "\[CapitalSigma]inf", ",", "Q", ",", "\[Rho]", ",", "\[Beta]m", ",", 
       "\[Lambda]1", ",", "\[Lambda]2", ",", 
       RowBox[{"{", 
        RowBox[{
        "LegendreCoef1", ",", "LegendreCoef1n", ",", "period1", ",", 
         "period1n", ",", "\[Epsilon]1", ",", "imax"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "LegendreCoef2", ",", "period2", ",", "period2n", ",", 
         "\[Epsilon]2"}], "}"}], ",", "printflag"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.4042074577632284`*^9, 3.4042074770760994`*^9}, {
   3.4042075328115444`*^9, 3.4042077538626633`*^9}, {3.404207970241818*^9, 
   3.404207993351637*^9}, {3.4042080286491895`*^9, 3.404208043665103*^9}, {
   3.404217016149871*^9, 3.4042170184311647`*^9}, {3.4042174130637417`*^9, 
   3.4042174217982845`*^9}, {3.4042186116648793`*^9, 
   3.4042186161962166`*^9}, {3.4042999781187344`*^9, 
   3.4042999878063345`*^9}, {3.4043245662649436`*^9, 
   3.4043246043289433`*^9}, {3.4043253661237435`*^9, 3.4043253674653435`*^9}, 
   3.4043254021597433`*^9, {3.404328734456544*^9, 3.4043287392769437`*^9}, {
   3.404381521285344*^9, 3.4043815278373437`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BiHestonUnderlying2Vanilla", "[", 
   RowBox[{
   "S_", ",", "K_", ",", "\[Tau]_", ",", "\[CapitalSigma]_", ",", "M_", ",", 
    "\[CapitalSigma]inf_", ",", "Q_", ",", "\[Rho]_", ",", "\[Beta]_", ",", 
    "\[Lambda]1_", ",", "\[Lambda]2_", ",", 
    RowBox[{"{", 
     RowBox[{
     "LegendreCoef1_", ",", "LegendreCoef1n_", ",", "period1_", ",", 
      "period1n_", ",", "\[Epsilon]1_", ",", "imax_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "LegendreCoef2_", ",", "period2_", ",", "period2n_", ",", 
      "\[Epsilon]2_"}], "}"}], ",", "printflag_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"BiHestonUnderlying2VanillaAux", "[", 
    RowBox[{
    "S", ",", "K", ",", "\[Tau]", ",", "\[CapitalSigma]", ",", "M", ",", 
     "\[CapitalSigma]inf", ",", "Q", ",", "\[Rho]", ",", "\[Beta]", ",", 
     "\[Lambda]1", ",", "\[Lambda]2", ",", 
     RowBox[{"{", 
      RowBox[{
      "LegendreCoef1", ",", "LegendreCoef1n", ",", "period1", ",", "period1n",
        ",", "\[Epsilon]1", ",", "imax"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "LegendreCoef2", ",", "period2", ",", "period2n", ",", "\[Epsilon]2"}], 
      "}"}], ",", "printflag"}], "]"}], " ", "/;", " ", 
   RowBox[{"K", "\[GreaterEqual]", "0"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.399897194377056*^9, 3.399897245940546*^9}, {
   3.3998976692611732`*^9, 3.3998976795269957`*^9}, {3.4002144512750473`*^9, 
   3.4002144569782815`*^9}, {3.400238263213356*^9, 3.400238300573448*^9}, {
   3.400408049201395*^9, 3.4004080510451803`*^9}, 3.400504474791651*^9, {
   3.4005667653701477`*^9, 3.400566798886416*^9}, {3.400819839626373*^9, 
   3.4008198425014277`*^9}, {3.4009134614843187`*^9, 
   3.4009134792034087`*^9}, {3.4009135487047434`*^9, 3.400913581252243*^9}, {
   3.4009136129872274`*^9, 3.4009136377220774`*^9}, {3.4009136698945704`*^9, 
   3.400913678910368*^9}, {3.400913713848539*^9, 3.400913720848673*^9}, {
   3.4009138946020093`*^9, 3.400913904914707*^9}, {3.40091789471006*^9, 
   3.400917899053893*^9}, {3.400921389214653*^9, 3.4009214402156324`*^9}, {
   3.400921492029127*^9, 3.4009215467489276`*^9}, {3.4009217594717617`*^9, 
   3.4009217705500994`*^9}, {3.401110611225083*^9, 3.4011106255847335`*^9}, {
   3.4011155613669987`*^9, 3.4011155856330895`*^9}, {3.401425790206461*^9, 
   3.401425813269404*^9}, {3.402046069834562*^9, 3.40204607210023*^9}, {
   3.4022357520580764`*^9, 3.4022357573706784`*^9}, {3.4022370965213895`*^9, 
   3.4022371025371304`*^9}, {3.402294637481146*^9, 3.4022946494188747`*^9}, {
   3.4022947595616145`*^9, 3.4022948086094313`*^9}, {3.4022949118926644`*^9, 
   3.4022949123770485`*^9}, 3.4022950944274187`*^9, {3.4023880298479567`*^9, 
   3.4023880317599564`*^9}, {3.403871467549989*^9, 3.4038715521922393`*^9}, {
   3.4038772034257407`*^9, 3.4038772338482*^9}, {3.4038778690791464`*^9, 
   3.4038778880951366`*^9}, {3.403877923330188*^9, 3.403877959690261*^9}, {
   3.403880525208268*^9, 3.403880528802087*^9}, {3.4039401668863335`*^9, 
   3.403940181277235*^9}, {3.403940658427021*^9, 3.403940660661439*^9}, 
   3.403940704459155*^9, {3.403947868049818*^9, 3.4039479096443667`*^9}, {
   3.4039621859965925`*^9, 3.4039621885122657`*^9}, {3.4039840072387457`*^9, 
   3.403984011809546*^9}, {3.404149956279735*^9, 3.404149966014135*^9}, {
   3.404198557561098*^9, 3.4041985600923967`*^9}, {3.404300449878334*^9, 
   3.404300479939534*^9}, {3.404328859315344*^9, 3.4043288770837436`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BiHestonUnderlying2Vanilla2", "[", 
   RowBox[{
   "S_", ",", "K_", ",", "\[Tau]_", ",", "\[CapitalSigma]_", ",", "M_", ",", 
    "\[CapitalSigma]inf_", ",", "Q_", ",", "\[Rho]_", ",", "\[Beta]m_", ",", 
    "\[Lambda]1_", ",", "\[Lambda]2_", ",", 
    RowBox[{"{", 
     RowBox[{
     "LegendreCoef1_", ",", "LegendreCoef1n_", ",", "period1_", ",", 
      "period1n_", ",", "\[Epsilon]1_", ",", "imax_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "LegendreCoef2_", ",", "period2_", ",", "period2n_", ",", 
      "\[Epsilon]2_"}], "}"}], ",", "printflag_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"BiHestonUnderlying2VanillaAux2", "[", 
    RowBox[{
    "S", ",", "K", ",", "\[Tau]", ",", "\[CapitalSigma]", ",", "M", ",", 
     "\[CapitalSigma]inf", ",", "Q", ",", "\[Rho]", ",", "\[Beta]m", ",", 
     "\[Lambda]1", ",", "\[Lambda]2", ",", 
     RowBox[{"{", 
      RowBox[{
      "LegendreCoef1", ",", "LegendreCoef1n", ",", "period1", ",", "period1n",
        ",", "\[Epsilon]1", ",", "imax"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "LegendreCoef2", ",", "period2", ",", "period2n", ",", "\[Epsilon]2"}], 
      "}"}], ",", "printflag"}], "]"}], " ", "/;", " ", 
   RowBox[{"K", "\[GreaterEqual]", "0"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.399897194377056*^9, 3.399897245940546*^9}, {
   3.3998976692611732`*^9, 3.3998976795269957`*^9}, {3.4002144512750473`*^9, 
   3.4002144569782815`*^9}, {3.400238263213356*^9, 3.400238300573448*^9}, {
   3.400408049201395*^9, 3.4004080510451803`*^9}, 3.400504474791651*^9, {
   3.4005667653701477`*^9, 3.400566798886416*^9}, {3.400819839626373*^9, 
   3.4008198425014277`*^9}, {3.4009134614843187`*^9, 
   3.4009134792034087`*^9}, {3.4009135487047434`*^9, 3.400913581252243*^9}, {
   3.4009136129872274`*^9, 3.4009136377220774`*^9}, {3.4009136698945704`*^9, 
   3.400913678910368*^9}, {3.400913713848539*^9, 3.400913720848673*^9}, {
   3.4009138946020093`*^9, 3.400913904914707*^9}, {3.40091789471006*^9, 
   3.400917899053893*^9}, {3.400921389214653*^9, 3.4009214402156324`*^9}, {
   3.400921492029127*^9, 3.4009215467489276`*^9}, {3.4009217594717617`*^9, 
   3.4009217705500994`*^9}, {3.401110611225083*^9, 3.4011106255847335`*^9}, {
   3.4011155613669987`*^9, 3.4011155856330895`*^9}, {3.401425790206461*^9, 
   3.401425813269404*^9}, {3.402046069834562*^9, 3.40204607210023*^9}, {
   3.4022357520580764`*^9, 3.4022357573706784`*^9}, {3.4022370965213895`*^9, 
   3.4022371025371304`*^9}, {3.402294637481146*^9, 3.4022946494188747`*^9}, {
   3.4022947595616145`*^9, 3.4022948086094313`*^9}, {3.4022949118926644`*^9, 
   3.4022949123770485`*^9}, 3.4022950944274187`*^9, {3.4023880298479567`*^9, 
   3.4023880317599564`*^9}, {3.403871467549989*^9, 3.4038715521922393`*^9}, {
   3.4038772034257407`*^9, 3.4038772338482*^9}, {3.4038778690791464`*^9, 
   3.4038778880951366`*^9}, {3.403877923330188*^9, 3.403877959690261*^9}, {
   3.403880525208268*^9, 3.403880528802087*^9}, {3.4039401668863335`*^9, 
   3.403940181277235*^9}, {3.403940658427021*^9, 3.403940660661439*^9}, 
   3.403940704459155*^9, {3.403947868049818*^9, 3.4039479096443667`*^9}, {
   3.4039621859965925`*^9, 3.4039621885122657`*^9}, {3.404149535953335*^9, 
   3.404149547107335*^9}, {3.404198055801464*^9, 3.4041980594734097`*^9}, {
   3.4043002987767344`*^9, 3.4043003215995345`*^9}, {3.404325523574544*^9, 
   3.4043255265385437`*^9}, 3.4043255927293434`*^9, {3.4043273738021436`*^9, 
   3.4043273906969433`*^9}, {3.404329217148144*^9, 3.4043292215473433`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BiHestonUnderlying2VanillaAux", "[", 
   RowBox[{
   "S_", ",", "K_", ",", "\[Tau]_", ",", "\[CapitalSigma]_", ",", "M_", ",", 
    "\[CapitalSigma]inf_", ",", "Q_", ",", "\[Rho]_", ",", "\[Beta]_", ",", 
    "\[Lambda]1_", ",", "\[Lambda]2_", ",", 
    RowBox[{"{", 
     RowBox[{
     "LegendreCoef1_", ",", "LegendreCoef1n_", ",", "period1_", ",", 
      "period1n_", ",", "\[Epsilon]1_", ",", "imax_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "LegendreCoef2_", ",", "period2_", ",", "period2n_", ",", 
      "\[Epsilon]2_"}], "}"}], ",", "printflag_"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{
   FractionBox["2", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"2", "\[Pi]"}], ")"}], "2"]], 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "res", ",", "res2", ",", 
       RowBox[{"Y", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Log", "[", 
           RowBox[{"S", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
          RowBox[{"Log", "[", 
           RowBox[{"S", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"printflag", "\[Equal]", "1"}], " ", "||", " ", 
         RowBox[{"MemberQ", "[", 
          RowBox[{"printflag", ",", "1"}], "]"}]}], "  ", ",", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\< S=\>\"", ",", 
           RowBox[{"S", " ", "//", " ", "ColumnForm"}], ",", 
           "\"\< \[CapitalSigma]=\>\"", ",", 
           RowBox[{"\[CapitalSigma]", " ", "//", "MatrixForm"}], ",", 
           "\"\<M=\>\"", ",", 
           RowBox[{"M", "//", "MatrixForm"}], ",", 
           "\"\< \[CapitalSigma]inf=\>\"", ",", 
           RowBox[{"\[CapitalSigma]inf", "//", "MatrixForm"}], " ", ",", 
           "\"\< Q=\>\"", ",", 
           RowBox[{"Q", "//", "MatrixForm"}], " ", ",", "\"\< \[Rho]=\>\"", 
           ",", 
           RowBox[{"\[Rho]", "//", "ColumnForm"}], ",", 
           "\"\< Imaginary Shifts=\>\"", ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\[Lambda]1", ",", "\[Lambda]2"}], "}"}], " ", "//", " ",
             "ColumnForm"}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<{NbLegCoef1,NbLegCoef1n,period1,period1n,\[Epsilon]1,imax}=\>\"\
", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Length", "[", "LegendreCoef1", "]"}], ",", 
             RowBox[{"Length", "[", "LegendreCoef1n", "]"}], ",", "period1", 
             ",", "period1n", ",", "\[Epsilon]1", ",", "imax"}], "}"}], ",", 
           "\"\<{NbLegCoef2,period2,period2n,\[Epsilon]2}=\>\"", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Length", "[", "LegendreCoef2", "]"}], ",", "period2", 
             ",", "period2n", ",", "\[Epsilon]2"}], "}"}]}], "]"}]}]}], "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"printflag", "\[Equal]", "4"}], "||", " ", 
         RowBox[{"MemberQ", "[", 
          RowBox[{"printflag", ",", "4"}], "]"}]}], " ", ",", 
        RowBox[{"Print", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Plot", "[", 
            RowBox[{
             RowBox[{"SymetrizedBiHestonUnderlying2VanillaIntegrand", "[", 
              RowBox[{
              "Y", ",", "K", ",", "\[Tau]", ",", "\[CapitalSigma]", ",", "M", 
               ",", "Q", ",", "\[Rho]", ",", "\[Beta]", ",", "\[Lambda]1", 
               ",", "\[Lambda]2", ",", "\[Omega]1", ",", "\[Omega]2"}], "]"}],
              ",", 
             RowBox[{"{", 
              RowBox[{"\[Omega]2", ",", "0", " ", ",", 
               RowBox[{"2", "period2"}]}], "}"}], ",", 
             RowBox[{"PlotPoints", "\[Rule]", "50"}], ",", 
             RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
             RowBox[{"PlotLabel", "\[Rule]", 
              RowBox[{"\"\<1st Inverse Fourier: K =\>\"", "<>", 
               RowBox[{"ToString", "[", "K", "]"}], "<>", 
               "\"\< \[Omega]1=\>\"", "<>", 
               RowBox[{"ToString", "[", "\[Omega]1", "]"}]}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Omega]1", ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0.2", ",", "2"}], "}"}]}], "}"}]}], "]"}], 
         "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"printflag", "\[Equal]", "6"}], "||", " ", 
         RowBox[{"MemberQ", "[", 
          RowBox[{"printflag", ",", "6"}], "]"}]}], " ", ",", 
        RowBox[{"Print", "[", 
         RowBox[{"ListPlot", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\[Omega]2", ",", 
               RowBox[{
                RowBox[{"AdaptativeIntegrate", "[", 
                 RowBox[{
                  RowBox[{"Function", "[", 
                   RowBox[{"\[Omega]1", ",", 
                    RowBox[{
                    "SymetrizedBiHestonUnderlying2VanillaIntegrand", "[", 
                    RowBox[{
                    "Y", ",", "K", ",", "\[Tau]", ",", "\[CapitalSigma]", ",",
                     "M", ",", "Q", ",", "\[Rho]", ",", "\[Beta]", ",", 
                    "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Omega]1", ",", 
                    "\[Omega]2"}], "]"}]}], "]"}], ",", "LegendreCoef1", ",", 
                  "LegendreCoef1n", ",", "period1", ",", "period1n", ",", 
                  "\[Epsilon]1", ",", "imax"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[Omega]2", ",", "0", ",", "period2", ",", 
               RowBox[{"period2", "/", "30"}]}], "}"}]}], "]"}], ",", 
           RowBox[{"Joined", "\[Rule]", "True"}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", "\"\<2nd Inverse Fourier:\>\""}], 
           ",", 
           RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "]"}]}], "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"res", "=", 
       RowBox[{"AdaptativeIntegrate", "[", 
        RowBox[{
         RowBox[{"Function", "[", 
          RowBox[{"\[Omega]2", ",", 
           RowBox[{
            RowBox[{"a", "=", 
             RowBox[{"AdaptativeIntegrate", "[", 
              RowBox[{
               RowBox[{"Function", "[", 
                RowBox[{"\[Omega]1", ",", 
                 RowBox[{"SymetrizedBiHestonUnderlying2VanillaIntegrand", "[", 
                  RowBox[{
                  "Y", ",", "K", ",", "\[Tau]", ",", "\[CapitalSigma]", ",", 
                   "M", ",", "Q", ",", "\[Rho]", ",", "\[Beta]", ",", 
                   "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Omega]1", ",", 
                   "\[Omega]2"}], "]"}]}], "]"}], ",", "LegendreCoef1", ",", 
               "LegendreCoef1n", ",", "period1", ",", "period1n", ",", 
               "\[Epsilon]1", ",", "imax"}], "]"}]}], ";", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"printflag", "\[Equal]", "7"}], "||", " ", 
               RowBox[{"MemberQ", "[", 
                RowBox[{"printflag", ",", "7"}], "]"}]}], ",", 
              RowBox[{"Print", "[", 
               RowBox[{"\"\<Integ_2=\>\"", ",", "a"}], "]"}]}], "]"}], ";", 
            RowBox[{"a", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], ",", "LegendreCoef2", 
         ",", "period2", ",", "period2n", ",", "\[Epsilon]2", ",", "imax"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"printflag", "\[Equal]", "7"}], "||", " ", 
         RowBox[{"MemberQ", "[", 
          RowBox[{"printflag", ",", "7"}], "]"}]}], ",", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Integ_1=\>\"", ",", "res"}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"res", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.3997288601267104`*^9, 3.39972890803388*^9, {3.3997289692069297`*^9, 
   3.3997289944261637`*^9}, {3.399729087443575*^9, 3.3997291578199263`*^9}, {
   3.399729214633517*^9, 3.3997292559936857`*^9}, {3.399729338917153*^9, 
   3.399729443137904*^9}, {3.3997297921289797`*^9, 3.399729801332281*^9}, 
   3.3997984631978292`*^9, 3.3997986822957864`*^9, {3.399799475623518*^9, 
   3.3997994825611515`*^9}, {3.399813039024555*^9, 3.3998130523841867`*^9}, {
   3.3998138111956306`*^9, 3.399813818523896*^9}, {3.3998138975254135`*^9, 
   3.3998139300104117`*^9}, {3.399814002074295*^9, 3.3998140680286865`*^9}, {
   3.3998141794214506`*^9, 3.399814187827862*^9}, {3.3998161633189154`*^9, 
   3.399816166818983*^9}, {3.399816989678531*^9, 3.39981701069456*^9}, {
   3.3998175772210617`*^9, 3.3998175797054844`*^9}, {3.3998177980534267`*^9, 
   3.3998178039285393`*^9}, 3.3998191717048006`*^9, {3.399819229424659*^9, 
   3.399819249925052*^9}, {3.3998192996916327`*^9, 3.3998193255202537`*^9}, {
   3.3998194002404385`*^9, 3.399819401990472*^9}, {3.399819437022394*^9, 
   3.399819443678772*^9}, {3.3998195847752314`*^9, 3.3998195956035643`*^9}, {
   3.3998937261423693`*^9, 3.3998937440645885`*^9}, {3.399894673945778*^9, 
   3.3998946780865884`*^9}, 3.399895357951172*^9, {3.3998971752360635`*^9, 
   3.399897202986596*^9}, {3.399995099817901*^9, 3.3999951242558703`*^9}, {
   3.3999951653972855`*^9, 3.3999952424143887`*^9}, {3.399995434089944*^9, 
   3.3999954559809895`*^9}, 3.400214359554536*^9, {3.4002194753715076`*^9, 
   3.4002194862310915`*^9}, {3.400221264780864*^9, 3.400221267812172*^9}, {
   3.400221324438259*^9, 3.4002213249851446`*^9}, {3.4002307045682325`*^9, 
   3.4002307106777253`*^9}, {3.4002309417446613`*^9, 
   3.4002309457603636`*^9}, {3.4002355676772275`*^9, 
   3.4002356840075865`*^9}, {3.4002357813375797`*^9, 3.400235782228222*^9}, {
   3.400238239244146*^9, 3.40023824052542*^9}, {3.4004065560321016`*^9, 
   3.400406572266788*^9}, 3.40040661272069*^9, {3.400406710910075*^9, 
   3.400406802349331*^9}, {3.4004079962316275`*^9, 3.400408003981776*^9}, {
   3.4004080367167797`*^9, 3.400408037591797*^9}, {3.400408141500042*^9, 
   3.4004081422656813`*^9}, 3.400504474791651*^9, {3.4008198209228888`*^9, 
   3.4008198369544463`*^9}, {3.401177200473509*^9, 3.401177296365975*^9}, 
   3.4011776191065464`*^9, 3.4011776885297546`*^9, {3.4011777732345057`*^9, 
   3.4011777815627904`*^9}, {3.4015301347651124`*^9, 3.401530142671514*^9}, {
   3.4015342195318975`*^9, 3.4015342774861345`*^9}, {3.4015343731285963`*^9, 
   3.4015343749255056`*^9}, {3.402033437670154*^9, 3.402033457561161*^9}, {
   3.4020334928118377`*^9, 3.402033502483898*^9}, {3.402143403333747*^9, 
   3.402143421193465*^9}, {3.402143489991661*^9, 3.40214349125731*^9}, {
   3.402143653151044*^9, 3.4021436941674557`*^9}, {3.402205803123693*^9, 
   3.402205848499564*^9}, {3.402294611715026*^9, 3.4022946131681786`*^9}, 
   3.402294775718175*^9, {3.4022949263773174`*^9, 3.4022949270960813`*^9}, 
   3.4023779225819693`*^9, 3.402388039487956*^9, 3.4023881114109564`*^9, 
   3.403871476831417*^9, 3.403871589333577*^9, {3.403871732195695*^9, 
   3.4038719361371107`*^9}, 3.40387197021589*^9, {3.4038729130621176`*^9, 
   3.403872917359075*^9}, {3.4038732665532794`*^9, 3.4038732913350053`*^9}, {
   3.40387338716497*^9, 3.403873392790078*^9}, {3.4038739059561806`*^9, 
   3.403873929300379*^9}, {3.4038757265536356`*^9, 3.403875727100521*^9}, {
   3.4038760173873444`*^9, 3.403876028450057*^9}, {3.4038767128225718`*^9, 
   3.4038767355730085`*^9}, {3.403876883685227*^9, 3.403876894872942*^9}, 
   3.4038770811577682`*^9, {3.403877262489375*^9, 3.403877296927536*^9}, {
   3.4038779003609967`*^9, 3.4038779017516484`*^9}, {3.403877950330706*^9, 
   3.403877995722203*^9}, {3.4038805669746947`*^9, 3.4038805816156006`*^9}, {
   3.403940196949411*^9, 3.403940212309081*^9}, {3.4039402503098106`*^9, 
   3.403940330483225*^9}, {3.403940565097104*^9, 3.4039406320983906`*^9}, {
   3.4039477736886315`*^9, 3.4039478349866834`*^9}, 3.403947942238743*^9, {
   3.4039479736924715`*^9, 3.403948027771635*^9}, 3.403948162852353*^9, {
   3.4039491169487963`*^9, 3.4039491206988688`*^9}, {3.4039492631391034`*^9, 
   3.4039493470938406`*^9}, {3.4039496376931696`*^9, 3.403949723882324*^9}, {
   3.4039498424783516`*^9, 3.4039499998719983`*^9}, 3.403962196184288*^9, 
   3.403962253482263*^9, {3.403984021855946*^9, 3.4039840315435457`*^9}, {
   3.404149982971335*^9, 3.404150039490135*^9}, {3.4041553245635347`*^9, 
   3.4041553260611353`*^9}, {3.4041985742957945`*^9, 3.404198605796399*^9}, {
   3.4043005193139343`*^9, 3.4043005648035345`*^9}, 3.4043287870285435`*^9, 
   3.404328829550544*^9, {3.4043288705473433`*^9, 3.4043289008893433`*^9}, 
   3.4043891255567436`*^9, {3.4044552474277744`*^9, 3.4044552504521565`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BiHestonUnderlying2VanillaAux2", "[", 
   RowBox[{
   "S_", ",", "K_", ",", "\[Tau]_", ",", "\[CapitalSigma]_", ",", "M_", ",", 
    "\[CapitalSigma]inf_", ",", "Q_", ",", "\[Rho]_", ",", "\[Beta]m_", ",", 
    "\[Lambda]1_", ",", "\[Lambda]2_", ",", 
    RowBox[{"{", 
     RowBox[{
     "LegendreCoef1_", ",", "LegendreCoef1n_", ",", "period1_", ",", 
      "period1n_", ",", "\[Epsilon]1_", ",", "imax_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "LegendreCoef2_", ",", "period2_", ",", "period2n_", ",", 
      "\[Epsilon]2_"}], "}"}], ",", "printflag_"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{
   FractionBox["2", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"2", "\[Pi]"}], ")"}], "2"]], 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "res", ",", "res2", ",", 
       RowBox[{"Y", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Log", "[", 
           RowBox[{"S", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
          RowBox[{"Log", "[", 
           RowBox[{"S", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"printflag", "\[Equal]", "1"}], " ", "||", " ", 
         RowBox[{"MemberQ", "[", 
          RowBox[{"printflag", ",", "1"}], "]"}]}], "  ", ",", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\< S=\>\"", ",", 
           RowBox[{"S", " ", "//", " ", "ColumnForm"}], ",", 
           "\"\< \[CapitalSigma]=\>\"", ",", 
           RowBox[{"\[CapitalSigma]", " ", "//", "MatrixForm"}], ",", 
           "\"\<M=\>\"", ",", 
           RowBox[{"M", "//", "MatrixForm"}], ",", 
           "\"\< \[CapitalSigma]inf=\>\"", ",", 
           RowBox[{"\[CapitalSigma]inf", "//", "MatrixForm"}], " ", ",", 
           "\"\< Q=\>\"", ",", 
           RowBox[{"Q", "//", "MatrixForm"}], " ", ",", "\"\< \[Rho]=\>\"", 
           ",", 
           RowBox[{"\[Rho]", "//", "ColumnForm"}], ",", 
           "\"\< Imaginary Shifts=\>\"", ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\[Lambda]1", ",", "\[Lambda]2"}], "}"}], " ", "//", " ",
             "ColumnForm"}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<{NbLegCoef1,NbLegCoef1n,period1,period1n,\[Epsilon]1,imax}=\>\"\
", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Length", "[", "LegendreCoef1", "]"}], ",", 
             RowBox[{"Length", "[", "LegendreCoef1n", "]"}], ",", "period1", 
             ",", "period1n", ",", "\[Epsilon]1", ",", "imax"}], "}"}], ",", 
           "\"\<{NbLegCoef2,period2,period2n,\[Epsilon]2}=\>\"", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Length", "[", "LegendreCoef2", "]"}], ",", "period2", 
             ",", "period2n", ",", "\[Epsilon]2"}], "}"}]}], "]"}]}]}], "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"printflag", "\[Equal]", "4"}], "||", " ", 
         RowBox[{"MemberQ", "[", 
          RowBox[{"printflag", ",", "4"}], "]"}]}], " ", ",", 
        RowBox[{"Print", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Plot", "[", 
            RowBox[{
             RowBox[{"SymetrizedBiHestonUnderlying2VanillaIntegrand2", "[", 
              RowBox[{
              "Y", ",", "K", ",", "\[Tau]", ",", "\[CapitalSigma]", ",", "M", 
               ",", "Q", ",", "\[Rho]", ",", "\[Beta]m", ",", "\[Lambda]1", 
               ",", "\[Lambda]2", ",", "\[Omega]1", ",", "\[Omega]2"}], "]"}],
              ",", 
             RowBox[{"{", 
              RowBox[{"\[Omega]2", ",", "0", " ", ",", 
               RowBox[{"2", "period2"}]}], "}"}], ",", 
             RowBox[{"PlotPoints", "\[Rule]", "50"}], ",", 
             RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
             RowBox[{"PlotLabel", "\[Rule]", 
              RowBox[{"\"\<1st Inverse Fourier: K =\>\"", "<>", 
               RowBox[{"ToString", "[", "K", "]"}], "<>", 
               "\"\< \[Omega]1=\>\"", "<>", 
               RowBox[{"ToString", "[", "\[Omega]1", "]"}]}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Omega]1", ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0.2", ",", "2"}], "}"}]}], "}"}]}], "]"}], 
         "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"printflag", "\[Equal]", "6"}], "||", " ", 
         RowBox[{"MemberQ", "[", 
          RowBox[{"printflag", ",", "6"}], "]"}]}], " ", ",", 
        RowBox[{"Print", "[", 
         RowBox[{"ListPlot", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\[Omega]2", ",", 
               RowBox[{
                RowBox[{"AdaptativeIntegrate", "[", 
                 RowBox[{
                  RowBox[{"Function", "[", 
                   RowBox[{"\[Omega]1", ",", 
                    RowBox[{
                    "SymetrizedBiHestonUnderlying2VanillaIntegrand2", "[", 
                    RowBox[{
                    "Y", ",", "K", ",", "\[Tau]", ",", "\[CapitalSigma]", ",",
                     "M", ",", "Q", ",", "\[Rho]", ",", "\[Beta]m", ",", 
                    "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Omega]1", ",", 
                    "\[Omega]2"}], "]"}]}], "]"}], ",", "LegendreCoef1", ",", 
                  "LegendreCoef1n", ",", "period1", ",", "period1n", ",", 
                  "\[Epsilon]1", ",", "imax"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[Omega]2", ",", "0", ",", "period2", ",", 
               RowBox[{"period2", "/", "30"}]}], "}"}]}], "]"}], ",", 
           RowBox[{"Joined", "\[Rule]", "True"}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", "\"\<2nd Inverse Fourier:\>\""}], 
           ",", 
           RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "]"}]}], "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"res", "=", 
       RowBox[{"AdaptativeIntegrate", "[", 
        RowBox[{
         RowBox[{"Function", "[", 
          RowBox[{"\[Omega]2", ",", 
           RowBox[{
            RowBox[{"a", "=", 
             RowBox[{"AdaptativeIntegrate", "[", 
              RowBox[{
               RowBox[{"Function", "[", 
                RowBox[{"\[Omega]1", ",", 
                 RowBox[{
                 "SymetrizedBiHestonUnderlying2VanillaIntegrand2", "[", 
                  RowBox[{
                  "Y", ",", "K", ",", "\[Tau]", ",", "\[CapitalSigma]", ",", 
                   "M", ",", "Q", ",", "\[Rho]", ",", "\[Beta]m", ",", 
                   "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Omega]1", ",", 
                   "\[Omega]2"}], "]"}]}], "]"}], ",", "LegendreCoef1", ",", 
               "LegendreCoef1n", ",", "period1", ",", "period1n", ",", 
               "\[Epsilon]1", ",", "imax"}], "]"}]}], ";", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"printflag", "\[Equal]", "7"}], "||", " ", 
               RowBox[{"MemberQ", "[", 
                RowBox[{"printflag", ",", "7"}], "]"}]}], ",", 
              RowBox[{"Print", "[", 
               RowBox[{"\"\<Integ_2=\>\"", ",", "a"}], "]"}]}], "]"}], ";", 
            RowBox[{"a", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], ",", "LegendreCoef2", 
         ",", "period2", ",", "period2n", ",", "\[Epsilon]2", ",", "imax"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"printflag", "\[Equal]", "7"}], "||", " ", 
         RowBox[{"MemberQ", "[", 
          RowBox[{"printflag", ",", "7"}], "]"}]}], ",", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Integ_1=\>\"", ",", "res"}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"res", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.3997288601267104`*^9, 3.39972890803388*^9, {3.3997289692069297`*^9, 
   3.3997289944261637`*^9}, {3.399729087443575*^9, 3.3997291578199263`*^9}, {
   3.399729214633517*^9, 3.3997292559936857`*^9}, {3.399729338917153*^9, 
   3.399729443137904*^9}, {3.3997297921289797`*^9, 3.399729801332281*^9}, 
   3.3997984631978292`*^9, 3.3997986822957864`*^9, {3.399799475623518*^9, 
   3.3997994825611515`*^9}, {3.399813039024555*^9, 3.3998130523841867`*^9}, {
   3.3998138111956306`*^9, 3.399813818523896*^9}, {3.3998138975254135`*^9, 
   3.3998139300104117`*^9}, {3.399814002074295*^9, 3.3998140680286865`*^9}, {
   3.3998141794214506`*^9, 3.399814187827862*^9}, {3.3998161633189154`*^9, 
   3.399816166818983*^9}, {3.399816989678531*^9, 3.39981701069456*^9}, {
   3.3998175772210617`*^9, 3.3998175797054844`*^9}, {3.3998177980534267`*^9, 
   3.3998178039285393`*^9}, 3.3998191717048006`*^9, {3.399819229424659*^9, 
   3.399819249925052*^9}, {3.3998192996916327`*^9, 3.3998193255202537`*^9}, {
   3.3998194002404385`*^9, 3.399819401990472*^9}, {3.399819437022394*^9, 
   3.399819443678772*^9}, {3.3998195847752314`*^9, 3.3998195956035643`*^9}, {
   3.3998937261423693`*^9, 3.3998937440645885`*^9}, {3.399894673945778*^9, 
   3.3998946780865884`*^9}, 3.399895357951172*^9, {3.3998971752360635`*^9, 
   3.399897202986596*^9}, {3.399995099817901*^9, 3.3999951242558703`*^9}, {
   3.3999951653972855`*^9, 3.3999952424143887`*^9}, {3.399995434089944*^9, 
   3.3999954559809895`*^9}, 3.400214359554536*^9, {3.4002194753715076`*^9, 
   3.4002194862310915`*^9}, {3.400221264780864*^9, 3.400221267812172*^9}, {
   3.400221324438259*^9, 3.4002213249851446`*^9}, {3.4002307045682325`*^9, 
   3.4002307106777253`*^9}, {3.4002309417446613`*^9, 
   3.4002309457603636`*^9}, {3.4002355676772275`*^9, 
   3.4002356840075865`*^9}, {3.4002357813375797`*^9, 3.400235782228222*^9}, {
   3.400238239244146*^9, 3.40023824052542*^9}, {3.4004065560321016`*^9, 
   3.400406572266788*^9}, 3.40040661272069*^9, {3.400406710910075*^9, 
   3.400406802349331*^9}, {3.4004079962316275`*^9, 3.400408003981776*^9}, {
   3.4004080367167797`*^9, 3.400408037591797*^9}, {3.400408141500042*^9, 
   3.4004081422656813`*^9}, 3.400504474791651*^9, {3.4008198209228888`*^9, 
   3.4008198369544463`*^9}, {3.401177200473509*^9, 3.401177296365975*^9}, 
   3.4011776191065464`*^9, 3.4011776885297546`*^9, {3.4011777732345057`*^9, 
   3.4011777815627904`*^9}, {3.4015301347651124`*^9, 3.401530142671514*^9}, {
   3.4015342195318975`*^9, 3.4015342774861345`*^9}, {3.4015343731285963`*^9, 
   3.4015343749255056`*^9}, {3.402033437670154*^9, 3.402033457561161*^9}, {
   3.4020334928118377`*^9, 3.402033502483898*^9}, {3.402143403333747*^9, 
   3.402143421193465*^9}, {3.402143489991661*^9, 3.40214349125731*^9}, {
   3.402143653151044*^9, 3.4021436941674557`*^9}, {3.402205803123693*^9, 
   3.402205848499564*^9}, {3.402294611715026*^9, 3.4022946131681786`*^9}, 
   3.402294775718175*^9, {3.4022949263773174`*^9, 3.4022949270960813`*^9}, 
   3.4023779225819693`*^9, 3.402388039487956*^9, 3.4023881114109564`*^9, 
   3.403871476831417*^9, 3.403871589333577*^9, {3.403871732195695*^9, 
   3.4038719361371107`*^9}, 3.40387197021589*^9, {3.4038729130621176`*^9, 
   3.403872917359075*^9}, {3.4038732665532794`*^9, 3.4038732913350053`*^9}, {
   3.40387338716497*^9, 3.403873392790078*^9}, {3.4038739059561806`*^9, 
   3.403873929300379*^9}, {3.4038757265536356`*^9, 3.403875727100521*^9}, {
   3.4038760173873444`*^9, 3.403876028450057*^9}, {3.4038767128225718`*^9, 
   3.4038767355730085`*^9}, {3.403876883685227*^9, 3.403876894872942*^9}, 
   3.4038770811577682`*^9, {3.403877262489375*^9, 3.403877296927536*^9}, {
   3.4038779003609967`*^9, 3.4038779017516484`*^9}, {3.403877950330706*^9, 
   3.403877995722203*^9}, {3.4038805669746947`*^9, 3.4038805816156006`*^9}, {
   3.403940196949411*^9, 3.403940212309081*^9}, {3.4039402503098106`*^9, 
   3.403940330483225*^9}, {3.403940565097104*^9, 3.4039406320983906`*^9}, {
   3.4039477736886315`*^9, 3.4039478349866834`*^9}, 3.403947942238743*^9, {
   3.4039479736924715`*^9, 3.403948027771635*^9}, 3.403948162852353*^9, {
   3.4039491169487963`*^9, 3.4039491206988688`*^9}, {3.4039492631391034`*^9, 
   3.4039493470938406`*^9}, {3.4039496376931696`*^9, 3.403949723882324*^9}, {
   3.4039498424783516`*^9, 3.4039499998719983`*^9}, 3.403962196184288*^9, 
   3.403962253482263*^9, {3.4041495661393347`*^9, 3.404149603407735*^9}, {
   3.4041552539579353`*^9, 3.404155264519135*^9}, {3.404197468258934*^9, 
   3.404197471821502*^9}, 3.4041980689267163`*^9, {3.404300362346734*^9, 
   3.4043004127347345`*^9}, 3.4043255380825434`*^9, {3.4043255819497433`*^9, 
   3.404325585849744*^9}, {3.4043271034385433`*^9, 3.4043271075257435`*^9}, {
   3.4043271542477436`*^9, 3.4043271966641436`*^9}, {3.4043274203057437`*^9, 
   3.4043274586505437`*^9}, {3.404329140177744*^9, 3.4043291626729436`*^9}, 
   3.4043891322959437`*^9, {3.404455255814979*^9, 3.40445525812224*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SymetrizedBiHestonUnderlying2VanillaIntegrand", "[", 
    RowBox[{
    "Y_", ",", "K_", ",", "\[Tau]_", ",", "\[CapitalSigma]_", ",", "M_", ",", 
     "Q_", ",", "\[Rho]_", ",", "\[Beta]_", ",", "\[Lambda]1_", ",", 
     "\[Lambda]2_", ",", "\[Omega]1_", ",", "\[Omega]2_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x1", "=", 
        RowBox[{"Y", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"x2", "=", 
        RowBox[{"Y", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ",", 
       RowBox[{"k1", "=", 
        RowBox[{"(", 
         RowBox[{"\[Omega]1", "+", 
          RowBox[{"\[ImaginaryI]", " ", "\[Lambda]1"}]}], ")"}]}], ",", 
       RowBox[{"Sk1", "=", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Omega]1"}], "+", 
          RowBox[{"\[ImaginaryI]", " ", "\[Lambda]1"}]}], ")"}]}], ",", 
       RowBox[{"k2", "=", " ", 
        RowBox[{"(", 
         RowBox[{"\[Omega]2", "+", 
          RowBox[{"\[ImaginaryI]", " ", "\[Lambda]2"}]}], ")"}]}], ",", 
       RowBox[{"Sk1A", "=", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Omega]1"}], "-", 
          RowBox[{"\[ImaginaryI]", " ", "\[Lambda]1"}]}], ")"}]}], ",", 
       RowBox[{"k1A", "=", 
        RowBox[{"(", 
         RowBox[{"\[Omega]1", "-", 
          RowBox[{"\[ImaginaryI]", " ", "\[Lambda]1"}]}], ")"}]}], ",", 
       RowBox[{"k2A", "=", 
        RowBox[{"(", 
         RowBox[{"\[Omega]2", "+", 
          RowBox[{"\[ImaginaryI]", " ", "\[Lambda]2"}]}], ")"}]}], ",", 
       "\[Alpha]", ",", "\[Alpha]A", ",", "Sym\[Alpha]", ",", "Sym\[Alpha]A", 
       ",", "\[Alpha]2", ",", "\[Alpha]A2", ",", "Sym\[Alpha]2", ",", 
       "Sym\[Alpha]A2", ",", "propagatorDroit", ",", "SympropagatorDroit", 
       ",", "propagatorGauche", ",", "SympropagatorGauche", ",", 
       "propagatorDroit2", ",", "SympropagatorDroit2", ",", 
       "propagatorGauche2", ",", "SympropagatorGauche2"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"\[Alpha]", "=", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "x1", " ", "k1"}], "-", 
          RowBox[{"\[ImaginaryI]", " ", "x2", " ", "k2"}]}]]}], ";", 
       RowBox[{"\[Alpha]A", "=", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "x1", " ", "k1A"}], "-", 
          RowBox[{"\[ImaginaryI]", " ", "x2", " ", "k2A"}]}]]}], ";", 
       RowBox[{"Sym\[Alpha]", "=", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "x1", " ", "Sk1"}], "-", 
          RowBox[{"\[ImaginaryI]", " ", "x2", " ", "k2"}]}]]}], ";", 
       RowBox[{"Sym\[Alpha]A", "=", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "x1", " ", "Sk1A"}], "-", 
          RowBox[{"\[ImaginaryI]", " ", "x2", " ", "k2A"}]}]]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"propagatorDroit", "=", 
        RowBox[{"BiHestonLaplaceQuickTransform", "[", 
         RowBox[{
         "M", ",", "Q", ",", "\[Rho]", ",", " ", "\[CapitalSigma]", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "k1"}], ",", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "k2"}]}], "}"}], ",", 
          "\[Beta]", ",", "\[Tau]"}], "]"}]}], ";", 
       RowBox[{"SympropagatorDroit", "=", 
        RowBox[{"BiHestonLaplaceQuickTransform", "[", 
         RowBox[{
         "M", ",", "Q", ",", "\[Rho]", ",", " ", "\[CapitalSigma]", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "Sk1"}], ",", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "k2"}]}], "}"}], ",", 
          "\[Beta]", ",", "\[Tau]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"propagatorGauche", "=", 
        RowBox[{"BiHestonLaplaceQuickTransform", "[", 
         RowBox[{
         "M", ",", "Q", ",", "\[Rho]", ",", " ", "\[CapitalSigma]", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "k1A"}], ",", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "k2A"}]}], "}"}], ",", 
          "\[Beta]", ",", "\[Tau]"}], "]"}]}], ";", 
       RowBox[{"SympropagatorGauche", "=", 
        RowBox[{"BiHestonLaplaceQuickTransform", "[", 
         RowBox[{
         "M", ",", "Q", ",", "\[Rho]", ",", " ", "\[CapitalSigma]", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "Sk1A"}], ",", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "k2A"}]}], "}"}], ",", 
          "\[Beta]", ",", "\[Tau]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Alpha]", " ", "propagatorDroit", " ", 
         RowBox[{"SecondUnderlyingVanillaPayOffFourierDroite", "[", 
          RowBox[{"k1", ",", "k2", ",", "K"}], "]"}]}], "+", 
        "\[IndentingNewLine]", 
        RowBox[{"Sym\[Alpha]", " ", "SympropagatorDroit", " ", 
         RowBox[{"SecondUnderlyingVanillaPayOffFourierDroite", "[", 
          RowBox[{"Sk1", ",", "k2", ",", "K"}], "]"}]}], "+", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Alpha]A", " ", "propagatorGauche", " ", 
         RowBox[{"SecondUnderlyingVanillaPayOffFourierGauche", "[", 
          RowBox[{"k1A", ",", "k2A", ",", "K"}], "]"}]}], "+", 
        "\[IndentingNewLine]", 
        RowBox[{"Sym\[Alpha]A", " ", "SympropagatorGauche", " ", 
         RowBox[{"SecondUnderlyingVanillaPayOffFourierGauche", "[", 
          RowBox[{"Sk1A", ",", "k2A", ",", "K"}], "]"}]}]}]}], "]"}]}], 
    "]"}]}], "\[IndentingNewLine]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.402140085770051*^9, 3.4021400863013115`*^9}, {
   3.4021401238489075`*^9, 3.4021402363666925`*^9}, {3.402140267929798*^9, 
   3.402140316290102*^9}, {3.4021403621347322`*^9, 3.4021403798069468`*^9}, {
   3.402140442948784*^9, 3.4021404698243*^9}, {3.40214052530974*^9, 
   3.4021405261847568`*^9}, {3.402140572076263*^9, 3.4021405730294065`*^9}, {
   3.40214283290092*^9, 3.402142834900958*^9}, 3.402142878995555*^9, {
   3.4021429531532288`*^9, 3.40214297455989*^9}, {3.4021430512488623`*^9, 
   3.4021430865307894`*^9}, {3.402143143625636*^9, 3.4021431463288126`*^9}, {
   3.402143222267771*^9, 3.402143365629898*^9}, {3.4021439797510643`*^9, 
   3.4021440141579747`*^9}, {3.4021444783543873`*^9, 
   3.4021445164332433`*^9}, {3.4021445469025784`*^9, 3.402144574918741*^9}, {
   3.4021446846239724`*^9, 3.4021446895459423`*^9}, {3.4021447226559525`*^9, 
   3.402144729593586*^9}, {3.402144860127342*^9, 3.402144926378614*^9}, {
   3.4021449572542067`*^9, 3.402145180727247*^9}, {3.402149153412896*^9, 
   3.4021491595067635`*^9}, {3.4021496964233217`*^9, 3.402149821410097*^9}, {
   3.40214987416111*^9, 3.402149884755063*^9}, {3.4021499394279876`*^9, 
   3.4021499498344374`*^9}, {3.402150065133526*^9, 3.402150121790864*^9}, {
   3.4021501655260787`*^9, 3.4021502014486437`*^9}, {3.402150388827241*^9, 
   3.4021504643911915`*^9}, {3.4021505016731577`*^9, 3.402150539877016*^9}, {
   3.402150576221464*^9, 3.4021506145190744`*^9}, 3.402150646160307*^9, {
   3.4021507013801165`*^9, 3.402150701614496*^9}, {3.402150792022482*^9, 
   3.4021508226011944`*^9}, {3.4022048852154446`*^9, 
   3.4022049314194565`*^9}, {3.402223441649846*^9, 3.4022234739004655`*^9}, {
   3.4022235664178667`*^9, 3.4022235977934694`*^9}, {3.402225770632062*^9, 
   3.4022257810853877`*^9}, {3.4022260066522183`*^9, 
   3.4022260340902452`*^9}, {3.402227989127781*^9, 3.4022280025967894`*^9}, 
   3.4022280710668545`*^9, {3.4022281624279833`*^9, 3.4022281629904943`*^9}, {
   3.4023193135668306`*^9, 3.4023194603141108`*^9}, {3.402319603150462*^9, 
   3.40231966787294*^9}, {3.4023197252970443`*^9, 3.4023197324378977`*^9}, {
   3.4023205583495092`*^9, 3.4023206749454975`*^9}, {3.4023207399779963`*^9, 
   3.4023207413373976`*^9}, {3.4023208249015017`*^9, 
   3.4023209920765867`*^9}, {3.4023211800958214`*^9, 3.40232123755005*^9}, {
   3.4023216909806304`*^9, 3.4023216975588818`*^9}, {3.402321742184738*^9, 
   3.4023217427316236`*^9}, {3.4023247260232773`*^9, 
   3.4023248331659594`*^9}, {3.4023253919266872`*^9, 
   3.4023255075695324`*^9}, {3.40237831846457*^9, 3.4023783246678143`*^9}, {
   3.403961973148756*^9, 3.4039620282435637`*^9}, {3.4039620755257215`*^9, 
   3.403962089885372*^9}, {3.403984040497946*^9, 3.403984073881946*^9}, 
   3.403985145789146*^9, {3.403985176552346*^9, 3.403985177519546*^9}, 
   3.403985265456746*^9, {3.403985618718746*^9, 3.403985619826346*^9}, 
   3.403985781426746*^9, 3.403985822563946*^9, 3.4041985891085787`*^9, {
   3.4041986270780573`*^9, 3.404198635046961*^9}, {3.4041986966418934`*^9, 
   3.4041987091733837`*^9}, {3.4043005771899347`*^9, 3.404300586456334*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SymetrizedBiHestonUnderlying2VanillaIntegrand2", "[", 
    RowBox[{
    "Y_", ",", "K_", ",", "\[Tau]_", ",", "\[CapitalSigma]_", ",", "M_", ",", 
     "Q_", ",", "\[Rho]_", ",", "\[Beta]m_", ",", "\[Lambda]1_", ",", 
     "\[Lambda]2_", ",", "\[Omega]1_", ",", "\[Omega]2_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x1", "=", 
        RowBox[{"Y", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"x2", "=", 
        RowBox[{"Y", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ",", 
       RowBox[{"k1", "=", 
        RowBox[{"(", 
         RowBox[{"\[Omega]1", "+", 
          RowBox[{"\[ImaginaryI]", " ", "\[Lambda]1"}]}], ")"}]}], ",", 
       RowBox[{"Sk1", "=", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Omega]1"}], "+", 
          RowBox[{"\[ImaginaryI]", " ", "\[Lambda]1"}]}], ")"}]}], ",", 
       RowBox[{"k2", "=", " ", 
        RowBox[{"(", 
         RowBox[{"\[Omega]2", "+", 
          RowBox[{"\[ImaginaryI]", " ", "\[Lambda]2"}]}], ")"}]}], ",", 
       RowBox[{"Sk1A", "=", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Omega]1"}], "-", 
          RowBox[{"\[ImaginaryI]", " ", "\[Lambda]1"}]}], ")"}]}], ",", 
       RowBox[{"k1A", "=", 
        RowBox[{"(", 
         RowBox[{"\[Omega]1", "-", 
          RowBox[{"\[ImaginaryI]", " ", "\[Lambda]1"}]}], ")"}]}], ",", 
       RowBox[{"k2A", "=", 
        RowBox[{"(", 
         RowBox[{"\[Omega]2", "+", 
          RowBox[{"\[ImaginaryI]", " ", "\[Lambda]2"}]}], ")"}]}], ",", 
       "\[Alpha]", ",", "\[Alpha]A", ",", "Sym\[Alpha]", ",", "Sym\[Alpha]A", 
       ",", "\[Alpha]2", ",", "\[Alpha]A2", ",", "Sym\[Alpha]2", ",", 
       "Sym\[Alpha]A2", ",", "propagatorDroit", ",", "SympropagatorDroit", 
       ",", "propagatorGauche", ",", "SympropagatorGauche", ",", 
       "propagatorDroit2", ",", "SympropagatorDroit2", ",", 
       "propagatorGauche2", ",", "SympropagatorGauche2"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"\[Alpha]", "=", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "x1", " ", "k1"}], "-", 
          RowBox[{"\[ImaginaryI]", " ", "x2", " ", "k2"}]}]]}], ";", 
       RowBox[{"\[Alpha]A", "=", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "x1", " ", "k1A"}], "-", 
          RowBox[{"\[ImaginaryI]", " ", "x2", " ", "k2A"}]}]]}], ";", 
       RowBox[{"Sym\[Alpha]", "=", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "x1", " ", "Sk1"}], "-", 
          RowBox[{"\[ImaginaryI]", " ", "x2", " ", "k2"}]}]]}], ";", 
       RowBox[{"Sym\[Alpha]A", "=", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "x1", " ", "Sk1A"}], "-", 
          RowBox[{"\[ImaginaryI]", " ", "x2", " ", "k2A"}]}]]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"propagatorDroit", "=", 
        RowBox[{"BiHestonLaplaceQuickTransform2", "[", 
         RowBox[{
         "M", ",", "Q", ",", "\[Rho]", ",", " ", "\[CapitalSigma]", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "k1"}], ",", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "k2"}]}], "}"}], ",", 
          "\[Beta]m", ",", "\[Tau]"}], "]"}]}], ";", 
       RowBox[{"SympropagatorDroit", "=", 
        RowBox[{"BiHestonLaplaceQuickTransform2", "[", 
         RowBox[{
         "M", ",", "Q", ",", "\[Rho]", ",", " ", "\[CapitalSigma]", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "Sk1"}], ",", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "k2"}]}], "}"}], ",", 
          "\[Beta]m", ",", "\[Tau]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"propagatorGauche", "=", 
        RowBox[{"BiHestonLaplaceQuickTransform2", "[", 
         RowBox[{
         "M", ",", "Q", ",", "\[Rho]", ",", " ", "\[CapitalSigma]", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "k1A"}], ",", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "k2A"}]}], "}"}], ",", 
          "\[Beta]m", ",", "\[Tau]"}], "]"}]}], ";", 
       RowBox[{"SympropagatorGauche", "=", 
        RowBox[{"BiHestonLaplaceQuickTransform2", "[", 
         RowBox[{
         "M", ",", "Q", ",", "\[Rho]", ",", " ", "\[CapitalSigma]", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "Sk1A"}], ",", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "k2A"}]}], "}"}], ",", 
          "\[Beta]m", ",", "\[Tau]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Alpha]", " ", "propagatorDroit", " ", 
         RowBox[{"SecondUnderlyingVanillaPayOffFourierDroite", "[", 
          RowBox[{"k1", ",", "k2", ",", "K"}], "]"}]}], "+", 
        "\[IndentingNewLine]", 
        RowBox[{"Sym\[Alpha]", " ", "SympropagatorDroit", " ", 
         RowBox[{"SecondUnderlyingVanillaPayOffFourierDroite", "[", 
          RowBox[{"Sk1", ",", "k2", ",", "K"}], "]"}]}], "+", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Alpha]A", " ", "propagatorGauche", " ", 
         RowBox[{"SecondUnderlyingVanillaPayOffFourierGauche", "[", 
          RowBox[{"k1A", ",", "k2A", ",", "K"}], "]"}]}], "+", 
        "\[IndentingNewLine]", 
        RowBox[{"Sym\[Alpha]A", " ", "SympropagatorGauche", " ", 
         RowBox[{"SecondUnderlyingVanillaPayOffFourierGauche", "[", 
          RowBox[{"Sk1A", ",", "k2A", ",", "K"}], "]"}]}]}]}], "]"}]}], 
    "]"}]}], "\[IndentingNewLine]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.402140085770051*^9, 3.4021400863013115`*^9}, {
   3.4021401238489075`*^9, 3.4021402363666925`*^9}, {3.402140267929798*^9, 
   3.402140316290102*^9}, {3.4021403621347322`*^9, 3.4021403798069468`*^9}, {
   3.402140442948784*^9, 3.4021404698243*^9}, {3.40214052530974*^9, 
   3.4021405261847568`*^9}, {3.402140572076263*^9, 3.4021405730294065`*^9}, {
   3.40214283290092*^9, 3.402142834900958*^9}, 3.402142878995555*^9, {
   3.4021429531532288`*^9, 3.40214297455989*^9}, {3.4021430512488623`*^9, 
   3.4021430865307894`*^9}, {3.402143143625636*^9, 3.4021431463288126`*^9}, {
   3.402143222267771*^9, 3.402143365629898*^9}, {3.4021439797510643`*^9, 
   3.4021440141579747`*^9}, {3.4021444783543873`*^9, 
   3.4021445164332433`*^9}, {3.4021445469025784`*^9, 3.402144574918741*^9}, {
   3.4021446846239724`*^9, 3.4021446895459423`*^9}, {3.4021447226559525`*^9, 
   3.402144729593586*^9}, {3.402144860127342*^9, 3.402144926378614*^9}, {
   3.4021449572542067`*^9, 3.402145180727247*^9}, {3.402149153412896*^9, 
   3.4021491595067635`*^9}, {3.4021496964233217`*^9, 3.402149821410097*^9}, {
   3.40214987416111*^9, 3.402149884755063*^9}, {3.4021499394279876`*^9, 
   3.4021499498344374`*^9}, {3.402150065133526*^9, 3.402150121790864*^9}, {
   3.4021501655260787`*^9, 3.4021502014486437`*^9}, {3.402150388827241*^9, 
   3.4021504643911915`*^9}, {3.4021505016731577`*^9, 3.402150539877016*^9}, {
   3.402150576221464*^9, 3.4021506145190744`*^9}, 3.402150646160307*^9, {
   3.4021507013801165`*^9, 3.402150701614496*^9}, {3.402150792022482*^9, 
   3.4021508226011944`*^9}, {3.4022048852154446`*^9, 
   3.4022049314194565`*^9}, {3.402223441649846*^9, 3.4022234739004655`*^9}, {
   3.4022235664178667`*^9, 3.4022235977934694`*^9}, {3.402225770632062*^9, 
   3.4022257810853877`*^9}, {3.4022260066522183`*^9, 
   3.4022260340902452`*^9}, {3.402227989127781*^9, 3.4022280025967894`*^9}, 
   3.4022280710668545`*^9, {3.4022281624279833`*^9, 3.4022281629904943`*^9}, {
   3.4023193135668306`*^9, 3.4023194603141108`*^9}, {3.402319603150462*^9, 
   3.40231966787294*^9}, {3.4023197252970443`*^9, 3.4023197324378977`*^9}, {
   3.4023205583495092`*^9, 3.4023206749454975`*^9}, {3.4023207399779963`*^9, 
   3.4023207413373976`*^9}, {3.4023208249015017`*^9, 
   3.4023209920765867`*^9}, {3.4023211800958214`*^9, 3.40232123755005*^9}, {
   3.4023216909806304`*^9, 3.4023216975588818`*^9}, {3.402321742184738*^9, 
   3.4023217427316236`*^9}, {3.4023247260232773`*^9, 
   3.4023248331659594`*^9}, {3.4023253919266872`*^9, 
   3.4023255075695324`*^9}, {3.40237831846457*^9, 3.4023783246678143`*^9}, {
   3.403961973148756*^9, 3.4039620282435637`*^9}, {3.4039620755257215`*^9, 
   3.403962089885372*^9}, {3.403984040497946*^9, 3.403984073881946*^9}, 
   3.403985145789146*^9, {3.403985176552346*^9, 3.403985177519546*^9}, 
   3.403985265456746*^9, {3.403985618718746*^9, 3.403985619826346*^9}, 
   3.403985781426746*^9, 3.403985822563946*^9, 3.4041985891085787`*^9, {
   3.4041986270780573`*^9, 3.404198635046961*^9}, {3.4041986966418934`*^9, 
   3.4041987091733837`*^9}, {3.4043005771899347`*^9, 3.404300586456334*^9}, {
   3.4043297594041433`*^9, 3.4043297920705433`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SecondUnderlyingVanillaPayOffFourierDroite", "[", 
   RowBox[{"k1_", ",", "k2_", ",", "K_"}], "]"}], ":=", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    SuperscriptBox["K", 
     RowBox[{"1", "+", 
      RowBox[{"\[ImaginaryI]", " ", "k2"}]}]]}], 
   RowBox[{
    RowBox[{"\[ImaginaryI]", " ", "k1", " ", "k2"}], "-", 
    RowBox[{
     SuperscriptBox["k2", "2"], " ", "k1"}]}]]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.403954614991857*^9, 3.403954664367805*^9}, {
  3.403983916275146*^9, 3.4039839500491457`*^9}, {3.4041986761102495`*^9, 
  3.4041986791103067`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SecondUnderlyingVanillaPayOffFourierGauche", "[", 
   RowBox[{"k1_", ",", "k2_", ",", "K_"}], "]"}], ":=", 
  RowBox[{"-", 
   FractionBox[
    SuperscriptBox["K", 
     RowBox[{"1", "+", 
      RowBox[{"\[ImaginaryI]", " ", "k2"}]}]], 
    RowBox[{
     RowBox[{"k1", " ", "k2"}], "+", 
     RowBox[{"\[ImaginaryI]", " ", 
      SuperscriptBox["k2", "2"], " ", "k1"}]}]]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.4039546461018295`*^9, 3.4039546738523617`*^9}, {
  3.403983922671146*^9, 3.4039839583171463`*^9}, {3.4041986841572785`*^9, 
  3.4041986870167084`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Log", "[", 
  RowBox[{"0.01", "/", "0.04"}], "]"}]], "Input",
 CellChangeTimes->{{3.404387110535944*^9, 3.4043871471491437`*^9}}],

Cell[BoxData[
 RowBox[{"-", "1.3862943611198906`"}]], "Output",
 CellChangeTimes->{{3.4043871241079435`*^9, 3.404387149192744*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Smart Parametrization", "Section",
 CellChangeTimes->{{3.404383407939944*^9, 3.404383415193944*^9}, {
  3.404387350604344*^9, 3.404387351228344*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"IntegerConvert", "[", 
   RowBox[{"x_", ",", 
    RowBox[{"{", 
     RowBox[{"x1_", ",", "n1_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x2_", ",", "n2_"}], "}"}], ",", "nmax_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ntheo", "=", 
      RowBox[{"n1", "+", 
       RowBox[{"Max", "[", 
        RowBox[{"0", ",", 
         RowBox[{"Floor", "[", 
          RowBox[{
           FractionBox[
            RowBox[{"(", 
             RowBox[{"x", "-", "x1"}], ")"}], 
            RowBox[{"x2", "-", "x1"}]], 
           RowBox[{"(", 
            RowBox[{"n2", "-", "n1"}], ")"}]}], "]"}]}], "]"}]}]}], "}"}], 
    ",", 
    RowBox[{"Min", "[", 
     RowBox[{"ntheo", ",", "nmax"}], "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.4043857627583437`*^9, 3.404385968413144*^9}, {
  3.4043860143551435`*^9, 3.404386188295144*^9}, {3.404386488423544*^9, 
  3.404386499842744*^9}, {3.4043868353675437`*^9, 3.4043868551171436`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"RealConvert", "[", 
   RowBox[{"x_", ",", 
    RowBox[{"{", 
     RowBox[{"x1_", ",", "n1_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x2_", ",", "n2_"}], "}"}], ",", "nmax_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ntheo", "=", 
      RowBox[{"n1", "+", 
       RowBox[{"Max", "[", 
        RowBox[{"0", ",", 
         RowBox[{
          FractionBox[
           RowBox[{"(", 
            RowBox[{"x", "-", "x1"}], ")"}], 
           RowBox[{"x2", "-", "x1"}]], 
          RowBox[{"(", 
           RowBox[{"n2", "-", "n1"}], ")"}]}]}], "]"}]}]}], "}"}], ",", 
    RowBox[{"Min", "[", 
     RowBox[{"ntheo", ",", "nmax"}], "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.4043857627583437`*^9, 3.404385968413144*^9}, {
  3.4043860143551435`*^9, 3.404386188295144*^9}, {3.404386488423544*^9, 
  3.404386499842744*^9}, {3.4043868353675437`*^9, 3.4043868551171436`*^9}, {
  3.404388169729144*^9, 3.4043881842371435`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"BiHestonVanillaOptimalParameters", "[", 
    RowBox[{
    "S_", ",", "K_", ",", "\[Tau]_", ",", "\[CapitalSigma]_", ",", "M_", ",", 
     "\[CapitalSigma]inf_", ",", "Q_", ",", "\[Rho]_", ",", "type_"}], "]"}], 
   ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[Lambda]1", ",", "\[Lambda]2", ",", "scope1", ",", "scope2", ",", 
       "Nb1", ",", "LegendreCoef1", ",", "Nb1n", ",", "LegendreCoef1n", ",", 
       "period1", ",", "period1n", ",", "\[Epsilon]1", ",", "Nb2", ",", 
       "LegendreCoef2", ",", "period2", ",", "period2n", ",", "\[Epsilon]2", 
       ",", "imax", ",", 
       RowBox[{"s1", "=", 
        RowBox[{"S", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"s2", "=", 
        RowBox[{"S", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ",", "Rmax", ",", "smax", ",", 
       "smin", ",", 
       RowBox[{"forward", "=", 
        RowBox[{
         RowBox[{"S", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "-", 
         RowBox[{"S", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], ",", 
       RowBox[{"scopeDivisor1", "=", "1"}], ",", 
       RowBox[{"scopeDivisor1n", "=", "1"}], ",", 
       RowBox[{"scopeDivisor2", "=", "1"}], ",", 
       RowBox[{"scopeDivisor2n", "=", "1"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"defaut", " ", "parameters"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"scope1", "=", 
       FractionBox["3", 
        SqrtBox[
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{"\[CapitalSigma]", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}], "+", 
            RowBox[{"\[CapitalSigma]", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "2"}], "]"}], "]"}], "+", 
            RowBox[{"\[CapitalSigma]inf", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}], "+", 
            RowBox[{"\[CapitalSigma]inf", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "4"], "\[Tau]"}]]]}], 
      ";", 
      RowBox[{"scope2", "=", 
       FractionBox["4", 
        SqrtBox[
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{"\[CapitalSigma]", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}], "+", 
            RowBox[{"\[CapitalSigma]", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "2"}], "]"}], "]"}], "+", 
            RowBox[{"\[CapitalSigma]inf", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}], "+", 
            RowBox[{"\[CapitalSigma]inf", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "4"], "\[Tau]"}]]]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Nb1", "=", "12"}], ";", 
      RowBox[{"Nb1n", "=", "8"}], ";", 
      RowBox[{"Nb2", "=", "12"}], ";", "\[IndentingNewLine]", 
      RowBox[{"period1", "=", "scope1"}], ";", 
      RowBox[{"period1n", "=", "scope1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"period2", "=", "scope2"}], ";", 
      RowBox[{"period2n", "=", 
       RowBox[{"scope2", "/", "10"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"non", " ", "default"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"type", "\[Equal]", "\"\<VanillaSpreadoption\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"smin", "=", 
          RowBox[{"Min", "[", 
           RowBox[{"s1", ",", "s2"}], "]"}]}], ";", 
         RowBox[{"smax", "=", 
          RowBox[{"Max", "[", 
           RowBox[{"s1", ",", "s2"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"K", "\[NotEqual]", " ", "0"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Nb1", "=", 
             RowBox[{"IntegerConvert", "[", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"Log", "[", 
                 FractionBox[
                  RowBox[{"Abs", "[", "K", "]"}], "smax"], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "12"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"6", ",", "12"}], "}"}], ",", "35"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Nb1n", "=", 
             RowBox[{"IntegerConvert", "[", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"Log", "[", 
                 FractionBox[
                  RowBox[{"Abs", "[", "K", "]"}], "smax"], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "8"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"6", ",", "8"}], "}"}], ",", "35"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Nb2", "=", 
             RowBox[{"IntegerConvert", "[", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"Log", "[", 
                 FractionBox[
                  RowBox[{"Abs", "[", "K", "]"}], "smax"], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "12"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"6", ",", "12"}], "}"}], ",", "35"}], "]"}]}]}]}], 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Nb1", "=", 
          RowBox[{"Max", "[", 
           RowBox[{"Nb1", ",", 
            RowBox[{"IntegerConvert", "[", 
             RowBox[{
              FractionBox[
               RowBox[{"smax", "-", "smin"}], "smax"], ",", 
              RowBox[{"{", 
               RowBox[{"0.1", ",", "12"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0.9", ",", "30"}], "}"}], ",", "35"}], "]"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Nb1n", "=", 
          RowBox[{"Max", "[", 
           RowBox[{"Nb1n", ",", 
            RowBox[{"IntegerConvert", "[", 
             RowBox[{
              FractionBox[
               RowBox[{"smax", "-", "smin"}], "smax"], ",", 
              RowBox[{"{", 
               RowBox[{"0.1", ",", "8"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0.9", ",", "20"}], "}"}], ",", "35"}], "]"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Nb2", "=", 
          RowBox[{"Max", "[", 
           RowBox[{"Nb2", ",", 
            RowBox[{"IntegerConvert", "[", 
             RowBox[{
              FractionBox[
               RowBox[{"smax", "-", "smin"}], "smax"], ",", 
              RowBox[{"{", 
               RowBox[{"0.1", ",", "12"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0.9", ",", "30"}], "}"}], ",", "35"}], "]"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"K", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"scopeDivisor1", "=", 
             RowBox[{"RealConvert", "[", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"Log", "[", 
                 FractionBox[
                  RowBox[{"Abs", "[", "K", "]"}], "smax"], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"6", ",", "1"}], "}"}], ",", "2"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"scopeDivisor1n", "=", 
             RowBox[{"RealConvert", "[", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"Log", "[", 
                 FractionBox[
                  RowBox[{"Abs", "[", "K", "]"}], "smax"], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"6", ",", "1"}], "}"}], ",", "2"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"scopeDivisor2", "=", 
             RowBox[{"RealConvert", "[", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"Log", "[", 
                 FractionBox[
                  RowBox[{"Abs", "[", "K", "]"}], "smax"], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"6", ",", "1"}], "}"}], ",", "2"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"scopeDivisor2n", "=", 
             RowBox[{"RealConvert", "[", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"Log", "[", 
                 FractionBox[
                  RowBox[{"Abs", "[", "K", "]"}], "smax"], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"6", ",", "4"}], "}"}], ",", "4"}], "]"}]}]}]}], 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"scopeDivisor1", "=", 
          RowBox[{"Max", "[", 
           RowBox[{"scopeDivisor1", ",", 
            RowBox[{"RealConvert", "[", 
             RowBox[{
              FractionBox[
               RowBox[{"smax", "-", "smin"}], "smax"], ",", 
              RowBox[{"{", 
               RowBox[{"0.1", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0.9", ",", "2"}], "}"}], ",", "2"}], "]"}]}], "]"}]}],
          ";", "\[IndentingNewLine]", 
         RowBox[{"scopeDivisor1n", "=", 
          RowBox[{"Max", "[", 
           RowBox[{"scopeDivisor1n", ",", 
            RowBox[{"RealConvert", "[", 
             RowBox[{
              FractionBox[
               RowBox[{"smax", "-", "smin"}], "smax"], ",", 
              RowBox[{"{", 
               RowBox[{"0.1", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0.9", ",", "4"}], "}"}], ",", "4"}], "]"}]}], "]"}]}],
          ";", "\[IndentingNewLine]", 
         RowBox[{"scopeDivisor2", "=", 
          RowBox[{"Max", "[", 
           RowBox[{"scopeDivisor2", ",", 
            RowBox[{"RealConvert", "[", 
             RowBox[{
              FractionBox[
               RowBox[{"smax", "-", "smin"}], "smax"], ",", 
              RowBox[{"{", 
               RowBox[{"0.1", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0.9", ",", "1"}], "}"}], ",", "2"}], "]"}]}], "]"}]}],
          ";", "\[IndentingNewLine]", 
         RowBox[{"scopeDivisor2n", "=", 
          RowBox[{"Max", "[", 
           RowBox[{"scopeDivisor2n", ",", 
            RowBox[{"RealConvert", "[", 
             RowBox[{
              FractionBox[
               RowBox[{"smax", "-", "smin"}], "smax"], ",", 
              RowBox[{"{", 
               RowBox[{"0.1", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0.9", ",", "4"}], "}"}], ",", "4"}], "]"}]}], "]"}]}],
          ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"type", "\[Equal]", "\"\<Underlying1Option\>\""}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{"type", "\[Equal]", "\"\<Underlying2Option\>\""}], ")"}]}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"scope1", "=", 
          FractionBox["3", 
           SqrtBox[
            RowBox[{
             FractionBox[
              RowBox[{
               RowBox[{"\[CapitalSigma]", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], "+", 
               RowBox[{"\[CapitalSigma]", "[", 
                RowBox[{"[", 
                 RowBox[{"2", ",", "2"}], "]"}], "]"}], "+", 
               RowBox[{"\[CapitalSigma]inf", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], "+", 
               RowBox[{"\[CapitalSigma]inf", "[", 
                RowBox[{"[", 
                 RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "4"], 
             "\[Tau]"}]]]}], ";", 
         RowBox[{"scope2", "=", 
          FractionBox["4", 
           SqrtBox[
            RowBox[{
             FractionBox[
              RowBox[{
               RowBox[{"\[CapitalSigma]", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], "+", 
               RowBox[{"\[CapitalSigma]", "[", 
                RowBox[{"[", 
                 RowBox[{"2", ",", "2"}], "]"}], "]"}], "+", 
               RowBox[{"\[CapitalSigma]inf", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], "+", 
               RowBox[{"\[CapitalSigma]inf", "[", 
                RowBox[{"[", 
                 RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "4"], 
             "\[Tau]"}]]]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Nb1", "=", "30"}], ";", 
         RowBox[{"Nb1n", "=", "20"}], ";", 
         RowBox[{"Nb2", "=", "30"}], ";", "\[IndentingNewLine]", 
         RowBox[{"period1", "=", "scope1"}], ";", 
         RowBox[{"period1n", "=", "scope1"}], ";", "\[IndentingNewLine]", 
         RowBox[{"period2", "=", "scope2"}], ";", 
         RowBox[{"period2n", "=", 
          RowBox[{"scope2", "/", "10"}]}], ";"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"period1", " ", "/=", "scopeDivisor1"}], ";", 
      RowBox[{"period1n", " ", "/=", "scopeDivisor1n"}], ";", 
      RowBox[{"period2", " ", "/=", "scopeDivisor2"}], ";", 
      RowBox[{"period2n", " ", "/=", "scopeDivisor2n"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"LegendreCoef1", "=", 
       RowBox[{"LegendreCoeffs", "[", "Nb1", "]"}]}], ";", 
      RowBox[{"LegendreCoef1n", "=", 
       RowBox[{"LegendreCoeffs", "[", "Nb1n", "]"}]}], ";", 
      RowBox[{"\[Epsilon]1", "=", "0.00001"}], ";", "\[IndentingNewLine]", 
      RowBox[{"LegendreCoef2", "=", 
       RowBox[{"LegendreCoeffs", "[", "Nb2", "]"}]}], ";", 
      RowBox[{"\[Epsilon]2", "=", "0.00001"}], ";", 
      RowBox[{"imax", "=", "10"}], ";", 
      RowBox[{"\[Lambda]1", "=", "1.1"}], ";", 
      RowBox[{"\[Lambda]2", "=", "1.2"}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "LegendreCoef1", ",", "LegendreCoef1n", ",", "period1", ",", 
          "period1n", ",", "\[Epsilon]1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "LegendreCoef2", ",", "period2", ",", "period2n", ",", 
          "\[Epsilon]2"}], "}"}], ",", "imax", ",", "\[Lambda]1", ",", 
        "\[Lambda]2"}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.404206970488248*^9, 3.4042070773496747`*^9}, {
   3.4042071143347597`*^9, 3.404207163288825*^9}, {3.4042073815430155`*^9, 
   3.404207439044119*^9}, {3.404207590797033*^9, 3.404207592265811*^9}, 
   3.4042080218053083`*^9, {3.4042193238816786`*^9, 3.4042193956955576`*^9}, {
   3.40436125513815*^9, 3.40436146885815*^9}, {3.4043709412927437`*^9, 
   3.4043709917743435`*^9}, {3.404371410696744*^9, 3.4043714124127436`*^9}, {
   3.404379892022144*^9, 3.404379895844144*^9}, {3.4043802460173435`*^9, 
   3.4043802517737436`*^9}, {3.4043803816437435`*^9, 
   3.4043803864953437`*^9}, {3.4043809028397436`*^9, 3.4043809080657434`*^9}, 
   3.4043809481421437`*^9, {3.404380999793744*^9, 3.404381054456144*^9}, {
   3.404381172750944*^9, 3.404381179380944*^9}, {3.404383541148344*^9, 
   3.4043835467175436`*^9}, {3.404383602690344*^9, 3.404383683311144*^9}, {
   3.404384106032344*^9, 3.4043841829091434`*^9}, {3.404384406535144*^9, 
   3.404384450917144*^9}, {3.404384498013544*^9, 3.404384507451544*^9}, {
   3.4043845726907434`*^9, 3.404384583142744*^9}, {3.4043847152123437`*^9, 
   3.404384740219144*^9}, {3.4043847763331437`*^9, 3.4043848473755436`*^9}, {
   3.404386205314744*^9, 3.404386275155944*^9}, {3.404386399597144*^9, 
   3.4043864558039436`*^9}, {3.4043865184223437`*^9, 3.404386525738744*^9}, {
   3.4043865649883437`*^9, 3.404386677667144*^9}, {3.404386732969144*^9, 
   3.4043867353403435`*^9}, {3.404386773310744*^9, 3.4043868160859437`*^9}, {
   3.4043868745391436`*^9, 3.4043869154267435`*^9}, {3.4043869601207438`*^9, 
   3.404386988107144*^9}, {3.4043870432687435`*^9, 3.404387052067144*^9}, {
   3.404387084764744*^9, 3.404387091425944*^9}, {3.4043871566339436`*^9, 
   3.404387168817544*^9}, {3.404387511689944*^9, 3.4043875842299438`*^9}, {
   3.404387648158744*^9, 3.404387847885544*^9}, {3.404387887899544*^9, 
   3.404388043915144*^9}, {3.4043882453735437`*^9, 3.404388484942744*^9}, {
   3.4043886348431435`*^9, 3.404388660957544*^9}, {3.4043893521311436`*^9, 
   3.4043893973867435`*^9}, {3.4043894515187435`*^9, 3.404389466104744*^9}, {
   3.4044067113261476`*^9, 3.4044067667841473`*^9}, {3.4044068889789476`*^9, 
   3.4044068907573476`*^9}, {3.4044072635021477`*^9, 
   3.4044072769649477`*^9}, {3.4044097282983475`*^9, 
   3.4044097309971476`*^9}, {3.404409800947548*^9, 3.4044098049567475`*^9}, {
   3.404409863815548*^9, 3.4044098674347477`*^9}, {3.4044102178107476`*^9, 
   3.4044103703943477`*^9}, {3.4044105926007476`*^9, 3.404410596297948*^9}, {
   3.404410672410348*^9, 3.4044107208951473`*^9}, {3.4044108745083475`*^9, 
   3.4044108748827477`*^9}, {3.4044110777451477`*^9, 
   3.4044110782443476`*^9}, {3.4044112932123475`*^9, 
   3.4044113036175475`*^9}, {3.4044122671337476`*^9, 3.404412270830948*^9}, {
   3.4044129093205476`*^9, 3.4044129134389477`*^9}, {3.4044130657261477`*^9, 
   3.4044130661473475`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[" Adaptative Integration", "Section",
 CellChangeTimes->{{3.4042058387946453`*^9, 3.40420584452913*^9}, {
  3.404387284507144*^9, 3.404387287081144*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"scalar", " ", "case"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.4044535313100405`*^9, 3.4044535387422094`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"AdaptativeIntegrate", "[", 
   RowBox[{
   "Func_", ",", "LegendreCoef0_", ",", "LegendreCoefn_", ",", "period0_", 
    ",", "periodn_", ",", "\[Epsilon]_", ",", "imax_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"sum", "=", "0.0"}], ",", 
      RowBox[{"increment", "=", 
       RowBox[{"\[Epsilon]", "+", "1"}]}], ",", 
      RowBox[{"i", "=", "0"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"sum", "=", 
      RowBox[{"CoeffBasedIntegrate", "[", 
       RowBox[{"Func", ",", 
        RowBox[{"LegendreCoeffsFromLegendre", "[", 
         RowBox[{"LegendreCoef0", ",", "0", ",", "period0"}], "]"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Abs", "[", "increment", "]"}], ">", "\[Epsilon]"}], ")"}], 
        "&&", 
        RowBox[{"(", 
         RowBox[{"i", "<", "imax"}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"increment", "=", 
         RowBox[{"CoeffBasedIntegrate", "[", 
          RowBox[{"Func", ",", 
           RowBox[{"LegendreCoeffsFromLegendre", "[", 
            RowBox[{"LegendreCoefn", ",", 
             RowBox[{"period0", "+", 
              RowBox[{"i", "*", "periodn"}]}], ",", 
             RowBox[{"period0", "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"i", "+", "1"}], ")"}], "*", "periodn"}]}]}], "]"}]}],
           "]"}]}], ";", 
        RowBox[{"i", "+=", "1"}], ";", 
        RowBox[{"sum", "+=", "increment"}]}]}], "]"}], ";", 
     RowBox[{"{", 
      RowBox[{"i", ",", "sum"}], "}"}]}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.4038679573575945`*^9, 3.4038681122824445`*^9}, {
  3.403868218503234*^9, 3.4038682723011417`*^9}, {3.4038683294272385`*^9, 
  3.403868512993263*^9}, {3.4038685440719843`*^9, 3.403868591635398*^9}, {
  3.403869293008239*^9, 3.4038693566344604`*^9}, {3.403869465261546*^9, 
  3.403869476199256*^9}, {3.4038774840873795`*^9, 3.403877491821903*^9}, {
  3.403877552854325*^9, 3.403877688075671*^9}, {3.4038778333597107`*^9, 
  3.403877834172226*^9}, {3.404323563294944*^9, 3.404323601421344*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"AdaptativeIntegrate", "[", 
   RowBox[{
   "Func_", ",", "LegendreCoef0_", ",", "period0_", ",", "periodn_", ",", 
    "\[Epsilon]_", ",", "imax_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"sum", "=", "0.0"}], ",", 
      RowBox[{"increment", "=", 
       RowBox[{"\[Epsilon]", "+", "1"}]}], ",", 
      RowBox[{"i", "=", "0"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"sum", "=", 
      RowBox[{"CoeffBasedIntegrate", "[", 
       RowBox[{"Func", ",", 
        RowBox[{"LegendreCoeffsFromLegendre", "[", 
         RowBox[{"LegendreCoef0", ",", "0", ",", "period0"}], "]"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Abs", "[", "increment", "]"}], ">", "\[Epsilon]"}], ")"}], 
        "&&", 
        RowBox[{"(", 
         RowBox[{"i", "<", "imax"}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"increment", "=", 
         RowBox[{
          RowBox[{"Func", "[", 
           RowBox[{"period0", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"i", "+", 
               RowBox[{"1", "/", "2"}]}], ")"}], "*", "periodn"}]}], "]"}], 
          "periodn"}]}], ";", 
        RowBox[{"i", "+=", "1"}], ";", 
        RowBox[{"sum", "+=", "increment"}]}]}], "]"}], ";", 
     RowBox[{"{", 
      RowBox[{"i", ",", "sum"}], "}"}]}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.4038679573575945`*^9, 3.4038681122824445`*^9}, {
   3.403868218503234*^9, 3.4038682723011417`*^9}, {3.4038683294272385`*^9, 
   3.403868512993263*^9}, {3.4038685440719843`*^9, 3.403868591635398*^9}, {
   3.403869293008239*^9, 3.4038693566344604`*^9}, {3.403869465261546*^9, 
   3.403869476199256*^9}, {3.4038774840873795`*^9, 3.403877491821903*^9}, {
   3.403877552854325*^9, 3.403877688075671*^9}, {3.4038778333597107`*^9, 
   3.403877834172226*^9}, {3.40388015784184*^9, 3.403880158607479*^9}, 
   3.4038802489842143`*^9, 3.403880308188476*^9, {3.403880362970778*^9, 
   3.403880402409035*^9}, {3.403880433222127*^9, 3.4038804766917114`*^9}, {
   3.4038820166744037`*^9, 3.403882032534083*^9}, 3.4038820825506687`*^9, {
   3.4043235726705437`*^9, 3.4043235757281437`*^9}, 3.4043236182069435`*^9}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"vector", " ", "case"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.404453543207756*^9, 3.404453551014656*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"VectorAdaptativeIntegrate", "[", 
   RowBox[{
   "Func_", ",", "LegendreCoef0_", ",", "LegendreCoefn_", ",", "period0_", 
    ",", "periodn_", ",", "\[Epsilon]_", ",", "imax_", ",", "n_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"sum", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0.0", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ",", 
      RowBox[{"increment", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"\[Epsilon]", "+", "1"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ",", 
      RowBox[{"i", "=", "0"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"sum", "=", 
      RowBox[{"CoeffBasedIntegrate", "[", 
       RowBox[{"Func", ",", 
        RowBox[{"LegendreCoeffsFromLegendre", "[", 
         RowBox[{"LegendreCoef0", ",", "0", ",", "period0"}], "]"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Max", "[", 
           RowBox[{"Abs", "[", "increment", "]"}], "]"}], ">", "\[Epsilon]"}],
          ")"}], "&&", 
        RowBox[{"(", 
         RowBox[{"i", "<", "imax"}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"increment", "=", 
         RowBox[{"CoeffBasedIntegrate", "[", 
          RowBox[{"Func", ",", 
           RowBox[{"LegendreCoeffsFromLegendre", "[", 
            RowBox[{"LegendreCoefn", ",", 
             RowBox[{"period0", "+", 
              RowBox[{"i", "*", "periodn"}]}], ",", 
             RowBox[{"period0", "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"i", "+", "1"}], ")"}], "*", "periodn"}]}]}], "]"}]}],
           "]"}]}], ";", 
        RowBox[{"i", "+=", "1"}], ";", 
        RowBox[{"sum", "+=", "increment"}]}]}], "]"}], ";", 
     RowBox[{"{", 
      RowBox[{"i", ",", "sum"}], "}"}]}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.4038679573575945`*^9, 3.4038681122824445`*^9}, {
   3.403868218503234*^9, 3.4038682723011417`*^9}, {3.4038683294272385`*^9, 
   3.403868512993263*^9}, {3.4038685440719843`*^9, 3.403868591635398*^9}, {
   3.403869293008239*^9, 3.4038693566344604`*^9}, {3.403869465261546*^9, 
   3.403869476199256*^9}, {3.4038774840873795`*^9, 3.403877491821903*^9}, {
   3.403877552854325*^9, 3.403877688075671*^9}, {3.4038778333597107`*^9, 
   3.403877834172226*^9}, {3.404323563294944*^9, 3.404323601421344*^9}, {
   3.4044535096068583`*^9, 3.404453511199466*^9}, {3.404453625258275*^9, 
   3.4044536566263995`*^9}, 3.4044537555370502`*^9, {3.4044538788033147`*^9, 
   3.4044538846709075`*^9}, {3.4044539840610633`*^9, 3.4044539957332516`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"VectorAdaptativeIntegrate", "[", 
   RowBox[{
   "Func_", ",", "LegendreCoef0_", ",", "period0_", ",", "periodn_", ",", 
    "\[Epsilon]_", ",", "imax_", ",", "n_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"sum", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0.0", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ",", 
      RowBox[{"increment", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"\[Epsilon]", "+", "1"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ",", 
      RowBox[{"i", "=", "0"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"sum", "=", 
      RowBox[{"CoeffBasedIntegrate", "[", 
       RowBox[{"Func", ",", 
        RowBox[{"LegendreCoeffsFromLegendre", "[", 
         RowBox[{"LegendreCoef0", ",", "0", ",", "period0"}], "]"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Max", "[", 
           RowBox[{"Abs", "[", "increment", "]"}], "]"}], ">", "\[Epsilon]"}],
          ")"}], "&&", 
        RowBox[{"(", 
         RowBox[{"i", "<", "imax"}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"increment", "=", 
         RowBox[{
          RowBox[{"Func", "[", 
           RowBox[{"period0", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"i", "+", 
               RowBox[{"1", "/", "2"}]}], ")"}], "*", "periodn"}]}], "]"}], 
          "periodn"}]}], ";", 
        RowBox[{"i", "+=", "1"}], ";", 
        RowBox[{"sum", "+=", "increment"}]}]}], "]"}], ";", 
     RowBox[{"{", 
      RowBox[{"i", ",", "sum"}], "}"}]}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.4038679573575945`*^9, 3.4038681122824445`*^9}, {
   3.403868218503234*^9, 3.4038682723011417`*^9}, {3.4038683294272385`*^9, 
   3.403868512993263*^9}, {3.4038685440719843`*^9, 3.403868591635398*^9}, {
   3.403869293008239*^9, 3.4038693566344604`*^9}, {3.403869465261546*^9, 
   3.403869476199256*^9}, {3.4038774840873795`*^9, 3.403877491821903*^9}, {
   3.403877552854325*^9, 3.403877688075671*^9}, {3.4038778333597107`*^9, 
   3.403877834172226*^9}, {3.40388015784184*^9, 3.403880158607479*^9}, 
   3.4038802489842143`*^9, 3.403880308188476*^9, {3.403880362970778*^9, 
   3.403880402409035*^9}, {3.403880433222127*^9, 3.4038804766917114`*^9}, {
   3.4038820166744037`*^9, 3.403882032534083*^9}, 3.4038820825506687`*^9, {
   3.4043235726705437`*^9, 3.4043235757281437`*^9}, 3.4043236182069435`*^9, {
   3.404453515290282*^9, 3.4044535166174545`*^9}, {3.4044536323313265`*^9, 
   3.4044536332837687`*^9}, 3.4044536755815525`*^9, {3.4044537234525533`*^9, 
   3.404453732846944*^9}, {3.4044538888219175`*^9, 3.4044538907413692`*^9}, {
   3.4044540008976126`*^9, 3.4044540133638506`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Log Normal Spreadoption (for comparaison)", "Section",
 CellChangeTimes->{{3.40040597105212*^9, 3.4004059836148615`*^9}, {
  3.404387326517944*^9, 3.404387339590744*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"phi", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"x", "^", "2"}]}], "/", "2"}], "]"}], "/", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"2", "Pi"}], "]"}]}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"Nd", "[", "x_", "]"}], ":=", 
  FractionBox[
   RowBox[{
    RowBox[{"Erf", "[", 
     FractionBox["x", 
      SqrtBox["2"]], "]"}], "+", "1"}], "2"]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"LogNormalSpreadDigitaleCall", "[", 
   RowBox[{
   "S1_", ",", "S2_", ",", "sig1_", ",", "sig2_", ",", "rho_", ",", "k_", ",",
     "t_"}], "]"}], ":=", 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"phi", "[", "x", "]"}], 
     RowBox[{"Nd", "[", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Log", "[", 
           FractionBox[
            RowBox[{"(", 
             RowBox[{"k", "+", 
              RowBox[{"S2", " ", 
               SuperscriptBox["E", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "1"}], "/", "2"}], " ", 
                  RowBox[{"sig2", "^", "2"}], " ", "t"}], "+", 
                 RowBox[{"sig2", " ", 
                  RowBox[{"Sqrt", "[", "t", "]"}], " ", "x"}]}]]}]}], ")"}], 
            RowBox[{"(", 
             RowBox[{"S1", " ", 
              SuperscriptBox["E", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "1"}], "/", "2"}], " ", 
                RowBox[{"sig1", "^", "2"}], " ", "t"}]]}], ")"}]], "]"}], "-", 
          RowBox[{"rho", " ", "sig1", " ", 
           RowBox[{"Sqrt", "[", "t", "]"}], " ", "x"}]}], ")"}]}], "/", 
       RowBox[{"(", 
        RowBox[{
         SqrtBox[
          RowBox[{"1", "-", 
           SuperscriptBox["rho", "2"]}]], " ", "sig1", " ", 
         SqrtBox["t"]}], ")"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "Infinity"}], ",", 
      RowBox[{"-", "1"}], ",", 
      RowBox[{"+", "Infinity"}]}], "}"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.4003357420318737`*^9, 3.4003357427975135`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"MesureQTLogNormalSpreadDigitale", "[", 
   RowBox[{
   "S1_", ",", "S2_", ",", "sig1_", ",", "sig2_", ",", "rho_", ",", "k_", ",",
     "t_"}], "]"}], ":=", 
  RowBox[{"LogNormalSpreadDigitaleCall", "[", 
   RowBox[{
   "S1", " ", ",", "S2", " ", ",", "sig1", ",", "sig2", ",", "rho", ",", "k", 
    ",", "t"}], "]"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"MesureQ1LogNormalSpreadDigitale", "[", 
   RowBox[{
   "S1_", ",", "S2_", ",", "sig1_", ",", "sig2_", ",", "rho_", ",", "k_", ",",
     "t_"}], "]"}], ":=", 
  RowBox[{"LogNormalSpreadDigitaleCall", "[", 
   RowBox[{
    RowBox[{"S1", " ", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"sig1", "^", "2"}], " ", "t"}], "]"}]}], ",", 
    RowBox[{"S2", " ", 
     RowBox[{"Exp", "[", 
      RowBox[{"rho", " ", "sig1", " ", "sig2", " ", "t"}], "]"}]}], ",", 
    "sig1", ",", "sig2", ",", "rho", ",", "k", ",", "t"}], "]"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"MesureQ2LogNormalSpreadDigitale", "[", 
   RowBox[{
   "S1_", ",", "S2_", ",", "sig1_", ",", "sig2_", ",", "rho_", ",", "k_", ",",
     "t_"}], "]"}], ":=", 
  RowBox[{"LogNormalSpreadDigitaleCall", "[", 
   RowBox[{
    RowBox[{"S1", " ", 
     RowBox[{"Exp", "[", 
      RowBox[{"rho", " ", "sig1", " ", "sig2", " ", "t"}], "]"}]}], ",", 
    RowBox[{"S2", " ", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"sig2", "^", "2"}], " ", "t"}], "]"}]}], ",", "sig1", ",", 
    "sig2", ",", "rho", ",", "k", ",", "t"}], "]"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"LogNormalSpreadOptionAux", "[", 
   RowBox[{
   "S1_", ",", "S2_", ",", "sig1_", ",", "sig2_", ",", "rho_", ",", "k_", ",",
     "t_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"S1", " ", 
    RowBox[{"MesureQ1LogNormalSpreadDigitale", "[", 
     RowBox[{
     "S1", ",", "S2", ",", "sig1", ",", "sig2", ",", "rho", ",", "k", ",", 
      "t"}], "]"}]}], "-", 
   RowBox[{"S2", " ", 
    RowBox[{"MesureQ2LogNormalSpreadDigitale", "[", 
     RowBox[{
     "S1", ",", "S2", ",", "sig1", ",", "sig2", ",", "rho", ",", "k", ",", 
      "t"}], "]"}]}], "-", 
   RowBox[{"k", " ", 
    RowBox[{"MesureQTLogNormalSpreadDigitale", "[", 
     RowBox[{
     "S1", ",", "S2", ",", "sig1", ",", "sig2", ",", "rho", ",", "k", ",", 
      "t"}], "]"}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.4011115678997006`*^9, 3.4011115691966004`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"LogNormalSpreadOption", "[", 
   RowBox[{
   "S1_", ",", "S2_", ",", "sig1_", ",", "sig2_", ",", "rho_", ",", "k_", ",",
     "t_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"LogNormalSpreadOptionAux", "[", 
    RowBox[{
    "S1", ",", "S2", ",", "sig1", ",", "sig2", ",", "rho", ",", "k", ",", 
     "t"}], "]"}], " ", "/;", " ", 
   RowBox[{"k", "\[GreaterEqual]", "0"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.40111158322812*^9, 3.4011116234632673`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"LogNormalSpreadOption", "[", 
   RowBox[{
   "S1_", ",", "S2_", ",", "sig1_", ",", "sig2_", ",", "rho_", ",", "k_", ",",
     "t_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"S1", "-", "S2", "-", "k", "+", 
    RowBox[{"LogNormalSpreadOptionAux", "[", 
     RowBox[{"S2", ",", "S1", ",", "sig2", ",", "sig1", ",", "rho", ",", 
      RowBox[{"-", "k"}], ",", "t"}], "]"}]}], " ", "/;", " ", 
   RowBox[{"k", "<", "0"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.4011116369791517`*^9, 3.4011116628858995`*^9}, {
  3.4011117218401566`*^9, 3.401111725699605*^9}, {3.4020601988731766`*^9, 
  3.4020602020451126`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"S1", "=", "0.05"}], ",", 
     RowBox[{"S2", "=", "0.05"}], ",", 
     RowBox[{"sig1", "=", "0.2"}], ",", 
     RowBox[{"sig2", "=", "0.3"}], ",", 
     RowBox[{"\[Rho]", "=", "0.8"}], ",", 
     RowBox[{"k", "=", "0.01"}], ",", 
     RowBox[{"t", "=", "10"}]}], "}"}], ",", 
   RowBox[{"LogNormalSpreadOption", "[", 
    RowBox[{
    "S1", ",", "S2", ",", "sig1", ",", "sig2", ",", "\[Rho]", ",", "k", ",", 
     "t"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.400335412775552*^9, {3.402059354544466*^9, 3.402059360638333*^9}}],

Cell[BoxData["0.005961714010313871`"], "Output",
 CellChangeTimes->{3.402059362091486*^9, 3.4042057986532493`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"S1", "=", "0.05"}], ",", 
     RowBox[{"S2", "=", "0.05"}], ",", 
     RowBox[{"sig1", "=", "0.2"}], ",", 
     RowBox[{"sig2", "=", "0.2"}], ",", 
     RowBox[{"k1", "=", "0.001"}], ",", 
     RowBox[{"k2", "=", "0.01"}], ",", 
     RowBox[{"k3", "=", "0.03"}], ",", 
     RowBox[{"t", "=", "5"}], ",", 
     RowBox[{"\[Rho]", "=", "0.6"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"LogNormalSpreadOption", "[", 
      RowBox[{
      "S1", ",", "S2", ",", "sig1", ",", "sig2", ",", "\[Rho]", ",", "k1", 
       ",", "t"}], "]"}], ",", 
     RowBox[{"LogNormalSpreadOption", "[", 
      RowBox[{
      "S1", ",", "S2", ",", "sig1", ",", "sig2", ",", "\[Rho]", ",", "k2", 
       ",", "t"}], "]"}], ",", 
     RowBox[{"LogNormalSpreadOption", "[", 
      RowBox[{
      "S1", ",", "S2", ",", "sig1", ",", "sig2", ",", "\[Rho]", ",", "k3", 
       ",", "t"}], "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.400335412775552*^9, {3.4003354580576715`*^9, 3.4003354896207776`*^9}, {
   3.400335539012351*^9, 3.400335539449859*^9}, {3.4003356720305295`*^9, 
   3.4003356773743825`*^9}, {3.4003357281097317`*^9, 3.40033574939139*^9}, {
   3.4003358582997313`*^9, 3.4003359739113255`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.0074379067323406475`", ",", "0.004066131566916034`", ",", 
   "0.0010050437746842939`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.4003354916051903`*^9, 3.4003355414967737`*^9, 3.4003356842495146`*^9, {
   3.4003357304535265`*^9, 3.400335756219646*^9}, {3.4003359436294947`*^9, 
   3.400335974864469*^9}, 3.400503967594413*^9, 3.4042057988251276`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Matrix Logarithm", "Section",
 CellChangeTimes->{{3.4028304966472445`*^9, 3.4028305022098513`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"MatrixLog2", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a_", ",", "b_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c_", ",", "d_"}], "}"}]}], "}"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "logdetm", ",", "adm", ",", "adp", ",", "logdetp", ",", "log4", ",", "P",
       ",", "InvP", ",", 
      RowBox[{"det", "=", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["a", "2"], "+", 
         RowBox[{"4", " ", "b", " ", "c"}], "-", 
         RowBox[{"2", " ", "a", " ", "d"}], "+", 
         SuperscriptBox["d", "2"]}]]}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"adm", "=", 
      RowBox[{"a", "+", "d", "-", "det"}]}], ";", 
     RowBox[{"adp", "=", 
      RowBox[{"a", "+", "d", "+", "det"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Im", "[", "adm", "]"}], "==", "0"}], ")"}], "&&", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Re", "[", "adm", "]"}], "\[LessEqual]", "0"}], ")"}]}], 
       ",", 
       RowBox[{"logdetm", "=", "0"}], ",", 
       RowBox[{"logdetm", "=", 
        RowBox[{"Log", "[", "adm", "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Im", "[", "adp", "]"}], "==", "0"}], ")"}], "&&", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Re", "[", "adp", "]"}], "\[LessEqual]", "0"}], ")"}]}], 
       ",", 
       RowBox[{"logdetp", "=", "0"}], ",", 
       RowBox[{"logdetp", "=", 
        RowBox[{"Log", "[", "adp", "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"log4", "=", 
      RowBox[{"Log", "[", "4", "]"}]}], ";", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{
            RowBox[{"-", "det"}], " ", "log4"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "a"}], "+", "d", "+", "det"}], ")"}], " ", 
            "logdetm"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"a", "-", "d", "+", "det"}], ")"}], " ", "logdetp"}]}], 
          RowBox[{"2", " ", "det"}]], ",", 
         FractionBox[
          RowBox[{
           RowBox[{"-", "b"}], " ", 
           RowBox[{"(", 
            RowBox[{"logdetm", "-", "logdetp"}], ")"}]}], 
          RowBox[{" ", "det"}]]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         FractionBox[
          RowBox[{"c", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "logdetm"}], "+", "logdetp"}], ")"}]}], "det"], ",", 
         FractionBox[
          RowBox[{
           RowBox[{
            RowBox[{"-", "det"}], " ", "log4"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"a", "-", "d", "+", "det"}], ")"}], " ", "logdetm"}], 
           "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "a"}], "+", "d", "+", "det"}], ")"}], 
            "logdetp"}]}], 
          RowBox[{"2", " ", "det"}]]}], "}"}]}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.3996948532799377`*^9, 3.399694888702493*^9}, {
   3.3996950443461065`*^9, 3.399695096159601*^9}, {3.399695161363978*^9, 
   3.399695247818763*^9}, {3.3996965140618243`*^9, 3.3996966732367554`*^9}, {
   3.39969704247822*^9, 3.399697106760704*^9}, {3.3996973387505913`*^9, 
   3.399697492985297*^9}, {3.3996975299459906`*^9, 3.3996975612634*^9}, {
   3.399719032953657*^9, 3.3997192510672197`*^9}, {3.399719447383489*^9, 
   3.399719559104384*^9}, 3.3997196321995373`*^9, {3.399719691341298*^9, 
   3.3997197434516735`*^9}, {3.399720303587428*^9, 3.399720310821942*^9}, {
   3.399720416417719*^9, 3.3997204241209917`*^9}, 3.399720490434765*^9, {
   3.399720561107997*^9, 3.3997205617017584`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mm", "=", 
  RowBox[{"MatrixExp2", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"11", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.2", ",", "4.2"}], "}"}]}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.3996289052341013`*^9, 3.3996289404691534`*^9}, {
   3.3996290464711885`*^9, 3.3996290872688465`*^9}, 3.399629904722041*^9, {
   3.399697120839099*^9, 3.39969715890233*^9}, {3.3997205049662943`*^9, 
   3.3997205312792997`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"80040.29709657488`", ",", "22418.497744644403`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13451.09864678664`", ",", "3817.404764783928`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.3996289205468955`*^9, 3.399628942031683*^9}, 
   3.399629048064969*^9, 3.3996290789093113`*^9, 3.3996295022611895`*^9, 
   3.3996297906729765`*^9, {3.3996298948624773`*^9, 3.3996299073470917`*^9}, 
   3.3996968500213995`*^9, 3.399696939945001*^9, 3.3996970099463453`*^9, {
   3.39969714012072*^9, 3.3996971606836147`*^9}, 3.3997192632237034`*^9, 
   3.3997204028393335`*^9, {3.3997204717156563`*^9, 3.3997205327324524`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixLog2", "[", "mm", "]"}]], "Input",
 CellChangeTimes->{{3.3996971681837587`*^9, 3.399697180605872*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"10.999999999999993`", ",", "2.0000000000000444`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.2000000000000266`", ",", "4.199999999999843`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.399697181699643*^9, 3.3996975689359136`*^9, 3.3997192652706175`*^9, 
   3.3997197853118525`*^9, {3.399720405839391*^9, 3.399720419683407*^9}, {
   3.3997204735281906`*^9, 3.3997205647799425`*^9}}]
}, Open  ]],

Cell["la trace du log est tres simple a calculer :", "Text",
 CellChangeTimes->{{3.4022176163973784`*^9, 3.4022176287413654`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"TrMatrixLog2", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a_", ",", "b_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c_", ",", "d_"}], "}"}]}], "}"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Log", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", " ", "b"}], " ", "c"}], "+", 
      RowBox[{"a", " ", "d"}]}], "]"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.402214721373045*^9, 3.402214735435815*^9}, {
   3.4022148645789194`*^9, 3.4022148650945544`*^9}, {3.4022148968139133`*^9, 
   3.402214926955117*^9}, {3.402214970268449*^9, 3.402214998659619*^9}, {
   3.4022150426760893`*^9, 3.4022150659109097`*^9}, {3.4022151151149797`*^9, 
   3.4022151216619806`*^9}, 3.4022172945786996`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Executions", "Subtitle",
 CellChangeTimes->{{3.3996093372021523`*^9, 3.399609340499091*^9}, {
  3.4043831113839436`*^9, 3.4043831145195436`*^9}},
 Background->RGBColor[1, 1, 0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"S1", "=", "0.05"}], ",", 
      RowBox[{"S2", "=", "0.03"}], ",", 
      RowBox[{"M1", "=", 
       RowBox[{"-", "0.01"}]}], ",", 
      RowBox[{"M2", "=", 
       RowBox[{"-", "0.02"}]}], ",", 
      RowBox[{"\[Theta]1", "=", "0.03"}], ",", 
      RowBox[{"\[Theta]2", "=", "0.041"}], ",", 
      RowBox[{"\[Rho]s", "=", "0.6"}], ",", 
      RowBox[{"\[Rho]sinf", "=", "0.8"}], ",", 
      RowBox[{"\[Rho]m1", "=", "0.3"}], ",", 
      RowBox[{"\[Rho]m2", "=", 
       RowBox[{"-", "0.3"}]}], ",", 
      RowBox[{"\[Rho]1", "=", "0.5"}], ",", 
      RowBox[{"\[Rho]2", "=", "0.8"}], ",", " ", 
      RowBox[{"\[CapitalSigma]1", "=", "0.04"}], ",", 
      RowBox[{"\[CapitalSigma]2", "=", "0.05"}], ",", 
      RowBox[{"\[Beta]", "=", "5"}], ",", 
      RowBox[{"\[Tau]", "=", "5"}], ",", 
      RowBox[{"\[Lambda]1", "=", "1.1"}], ",", 
      RowBox[{"\[Lambda]2", "=", "1.2"}], ",", 
      RowBox[{"\[Nu]1", "=", "0.01"}], ",", 
      RowBox[{"\[Nu]2", "=", "0.01"}], ",", "M", ",", "\[CapitalSigma]inf", 
      ",", "\[CapitalSigma]", ",", "Q", ",", "\[Beta]m", ",", "S", ",", 
      "\[Rho]", ",", 
      RowBox[{"printflag", "=", "0"}], ",", 
      RowBox[{"Lcoefs", "=", 
       RowBox[{"LegendreCoeffs", "[", "40", "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"M", "=", 
      RowBox[{"(", GridBox[{
         {"M1", 
          RowBox[{"\[Rho]m1", 
           SqrtBox[
            RowBox[{"M1", " ", "M2"}]]}]},
         {
          RowBox[{"\[Rho]m2", 
           SqrtBox[
            RowBox[{"M1", " ", "M2"}]]}], "M2"}
        }], ")"}]}], ";", 
     RowBox[{"\[CapitalSigma]inf", "=", 
      RowBox[{"(", GridBox[{
         {"\[Theta]1", 
          RowBox[{
           SqrtBox[
            RowBox[{"\[Theta]1", " ", "\[Theta]2"}]], " ", "\[Rho]sinf"}]},
         {
          RowBox[{
           SqrtBox[
            RowBox[{"\[Theta]1", " ", "\[Theta]2"}]], " ", "\[Rho]sinf"}], 
          "\[Theta]2"}
        }], ")"}]}], ";", 
     RowBox[{"\[CapitalSigma]", "=", 
      RowBox[{"(", GridBox[{
         {"\[CapitalSigma]1", 
          RowBox[{
           SqrtBox[
            RowBox[{"\[CapitalSigma]1", " ", "\[CapitalSigma]2"}]], " ", 
           "\[Rho]s"}]},
         {
          RowBox[{
           SqrtBox[
            RowBox[{"\[CapitalSigma]1", " ", "\[CapitalSigma]2"}]], " ", 
           "\[Rho]s"}], "\[CapitalSigma]2"}
        }], ")"}]}], ";", 
     RowBox[{"S", "=", 
      RowBox[{"{", 
       RowBox[{"S1", ",", "S2"}], "}"}]}], ";", 
     RowBox[{"\[Rho]", "=", 
      RowBox[{"{", 
       RowBox[{"\[Rho]1", ",", "\[Rho]2"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"strikes", "=", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.02"}], ",", 
         RowBox[{"-", "0.01"}], ",", 
         RowBox[{"-", "0.005"}], ",", 
         RowBox[{"-", "0.002"}], ",", 
         RowBox[{"-", "0.001"}], ",", 
         RowBox[{"-", "0.0005"}], ",", 
         RowBox[{"-", "0.0002"}], ",", 
         RowBox[{"-", "0.0001"}], ",", "0", ",", "0.0001", ",", "0.0002", ",",
          "0.0005", ",", "0.001", ",", "0.002", ",", "0.005", ",", "0.0075", 
         ",", "0.01", ",", "0.015", ",", "0.02"}], "}"}], "+", "0.02"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"smile1", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"strikes", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"NormalImplicitVol", "[", 
           RowBox[{
            RowBox[{"S1", "-", "S2"}], ",", 
            RowBox[{"strikes", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "\[Tau]", ",", 
            "\[IndentingNewLine]", 
            RowBox[{"BiHestonVanilla", "[", 
             RowBox[{"S", ",", 
              RowBox[{"strikes", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", "\[Tau]", ",", 
              "\[CapitalSigma]", ",", "M", ",", "\[CapitalSigma]inf", ",", 
              "\[Beta]", ",", "\[Rho]", ",", "printflag"}], "]"}]}], "]"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "strikes", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"inter1", "=", 
      RowBox[{"Interpolation", "[", 
       RowBox[{"smile1", ",", 
        RowBox[{"InterpolationOrder", "\[Rule]", "2"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"vol1", "=", 
      RowBox[{"ImpVolHeston2", "[", 
       RowBox[{
       "S1", ",", "S1", ",", "\[Tau]", ",", "\[CapitalSigma]1", ",", 
        "\[Theta]1", ",", "\[Rho]1", ",", 
        RowBox[{"-", "M1"}], ",", "\[Nu]1", ",", "Lcoefs"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"vol2", "=", 
      RowBox[{"ImpVolHeston2", "[", 
       RowBox[{
       "S2", ",", "S2", ",", "\[Tau]", ",", "\[CapitalSigma]2", ",", 
        "\[Theta]2", ",", "\[Rho]2", ",", 
        RowBox[{"-", "M2"}], ",", "\[Nu]2", ",", "Lcoefs"}], "]"}]}], ";", 
     RowBox[{"\[Rho]smod", "=", "\[Rho]s"}], ";", "\[IndentingNewLine]", 
     RowBox[{"smile2", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"strikes", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"NormalImplicitVol", "[", 
           RowBox[{
            RowBox[{"S1", "-", "S2"}], ",", 
            RowBox[{"strikes", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "\[Tau]", ",", 
            RowBox[{"LogNormalSpreadOption", "[", 
             RowBox[{
             "S1", ",", "S2", ",", "vol1", ",", "vol2", ",", "\[Rho]smod", 
              ",", 
              RowBox[{"strikes", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", "\[Tau]"}], "]"}]}], 
           "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "strikes", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"inter2", "=", 
      RowBox[{"Interpolation", "[", "smile2", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"inter1", "[", "x", "]"}], ",", 
         RowBox[{"inter2", "[", "x", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"strikes", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"Last", "[", "strikes", "]"}]}], "}"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<Implied normal vol\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotLegend", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<biheston\>\"", ",", "\"\<bilog\>\""}], "}"}]}], ",", 
       RowBox[{"LegendPosition", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}]}]}], "]"}]}]}], "\[IndentingNewLine]",
    "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.400420962348207*^9, 3.4004210687721252`*^9}, {
   3.4004211951964273`*^9, 3.400421290026373*^9}, {3.4004217619885597`*^9, 
   3.400421783613975*^9}, {3.4009064818853397`*^9, 3.400906510698393*^9}, {
   3.4020336908625154`*^9, 3.4020337021752324`*^9}, {3.402033860818903*^9, 
   3.4020338717566133`*^9}, {3.4020340123218117`*^9, 3.402034022884515*^9}, {
   3.402143532804983*^9, 3.4021435714776*^9}, {3.4021502545434127`*^9, 
   3.402150277340726*^9}, {3.402150318060257*^9, 3.4021503190602765`*^9}, {
   3.4021508739146795`*^9, 3.402150926103182*^9}, {3.402205941048216*^9, 
   3.402206032299968*^9}, {3.402222386473337*^9, 3.4022223919109416`*^9}, {
   3.4022282113507977`*^9, 3.4022282342887383`*^9}, {3.4034169071994333`*^9, 
   3.4034171368132167`*^9}, {3.403417190251743*^9, 3.4034171928924184`*^9}, {
   3.4038720435454235`*^9, 3.4038720779367085`*^9}, {3.403872150328723*^9, 
   3.4038722699716454`*^9}, {3.4038728308886647`*^9, 3.403872841748248*^9}, {
   3.403872982829082*^9, 3.4038729829697094`*^9}, {3.403873031595643*^9, 
   3.403873031720646*^9}, {3.4038734196343436`*^9, 3.4038734198374724`*^9}, {
   3.4038753783750753`*^9, 3.403875380922*^9}, {3.40387624346981*^9, 
   3.403876243938569*^9}, 3.4038769829683833`*^9, {3.403877122346059*^9, 
   3.4038771227679424`*^9}, {3.4038771625499563`*^9, 3.403877163065591*^9}, {
   3.403877324631193*^9, 3.4038773551474037`*^9}, {3.4038773936168923`*^9, 
   3.40387739764822*^9}, {3.4038780215976996`*^9, 3.40387809141154*^9}, 
   3.4038782021792917`*^9, 3.4038782387893696`*^9, {3.4038791308846226`*^9, 
   3.403879131431508*^9}, {3.4038791725729227`*^9, 3.4038791727135506`*^9}, 
   3.403880915450135*^9, {3.403881572775256*^9, 3.4038816079634314`*^9}, {
   3.4038817484661293`*^9, 3.403881834889663*^9}, {3.403881964439026*^9, 
   3.4038819903613987`*^9}, {3.4038820541126223`*^9, 
   3.4038820551126413`*^9}, {3.403882087738268*^9, 3.4038822508976507`*^9}, {
   3.40388231024254*^9, 3.4038823888221736`*^9}, {3.4038826393894844`*^9, 
   3.403882698968753*^9}, 3.4038827641887555`*^9, {3.4038828400964627`*^9, 
   3.4038828570967894`*^9}, {3.4039407380848007`*^9, 3.40394075161631*^9}, {
   3.4039469958143215`*^9, 3.4039472324751153`*^9}, 3.4039472679757967`*^9, {
   3.403947357758771*^9, 3.4039473853218*^9}, {3.403947507839777*^9, 
   3.4039475596532717`*^9}, {3.4039476866088343`*^9, 3.403947691202673*^9}, {
   3.4039482225566244`*^9, 3.4039482791358356`*^9}, {3.403949588801606*^9, 
   3.403949589160988*^9}, {3.403949749835948*^9, 3.403949785352255*^9}, {
   3.4039500598262744`*^9, 3.4039500646232414`*^9}, {3.403950358238254*^9, 
   3.4039503617383213`*^9}, {3.403950421067585*^9, 3.4039504374897757`*^9}, {
   3.4039506060398865`*^9, 3.4039506065086455`*^9}, 3.4039508020436497`*^9, {
   3.4039508397318735`*^9, 3.403950861747921*^9}, {3.403950893982915*^9, 
   3.4039508942172947`*^9}, {3.403951078517708*^9, 3.403951078986467*^9}, {
   3.403952006348022*^9, 3.4039520495051003`*^9}, {3.4039520956153607`*^9, 
   3.4039521059593096`*^9}, {3.4039522097581778`*^9, 3.4039522109457*^9}, {
   3.403952602000083*^9, 3.403952625531785*^9}, {3.4039527686751585`*^9, 
   3.40395278725364*^9}, {3.403977810144146*^9, 3.403977810424946*^9}, {
   3.403977841858946*^9, 3.403977845353346*^9}, {3.404149383978135*^9, 
   3.4041493938841352`*^9}, 3.404194167101803*^9, {3.404194474420203*^9, 
   3.4041944878892117`*^9}, 3.4042069235810976`*^9, 3.40435950413175*^9, {
   3.40435963947735*^9, 3.40435967031855*^9}, {3.40435979385495*^9, 
   3.40435979937735*^9}, {3.40435992101055*^9, 3.40435992205575*^9}, 
   3.4043600113657503`*^9, {3.404406222578148*^9, 3.404406234792948*^9}, 
   3.4044073237181473`*^9, {3.404407497320348*^9, 3.404407499005148*^9}, {
   3.4044079487687473`*^9, 3.4044079504691477`*^9}, {3.4044080107787476`*^9, 
   3.404408010950348*^9}, {3.4044157071881475`*^9, 3.4044157327721477`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"45.69199999999983`", ",", 
   GraphicsBox[{InsetBox[
      GraphicsBox[{{}, {}, 
        {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
          "]]}, 
        {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
B15h8T8=
          "]]}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->True,
       AxesOrigin->{0, 0.007500000000000001},
       DisplayFunction:>$DisplayFunction,
       FormatType->TraditionalForm,
       PlotLabel->FormBox["\"Implied normal vol\"", TraditionalForm],
       PlotRange->{{0., 0.04}, {0.00727640643972409, 0.009601871771880535}},
       PlotRangeClipping->True,
       PlotRangePadding->{
         Scaled[0.02], 
         Scaled[0.02]}], {-1, -0.6180339887498948}, {
      Left, Bottom}, {2, 1.2360679774997896`}], {
      {GrayLevel[0], RectangleBox[{1.05, -0.05}, {1.85, 0.55}]}, 
      {GrayLevel[1], EdgeForm[{GrayLevel[0], Thickness[0.001]}], 
       RectangleBox[{1, 0}, {1.8, 0.6000000000000001}], InsetBox[
        GraphicsBox[{{{InsetBox[
             GraphicsBox[
              {Hue[0.9060679774997897, 0.6, 0.6], 
               LineBox[{{0, 0}, {1, 0}}]}], {0.08, 0.08}, {
             Left, Bottom}, {1, 1}], 
            InsetBox["\<\"bilog\"\>", {1.21, 0.58}, {-1, 0}, Automatic, {1, 
             0}]}, {InsetBox[
             GraphicsBox[
              {Hue[0.67, 0.6, 0.6], 
               LineBox[{{0, 0}, {1, 0}}]}], {0.08, 1.24}, {
             Left, Bottom}, {1, 1}], 
            InsetBox["\<\"biheston\"\>", {1.21, 1.74}, {-1, 0}, Automatic, {1,
              0}]}}, {}},
         AspectRatio->0.7500000000000001,
         FormatType->TraditionalForm,
         PlotRange->{{-0.1, 3.26}, {-0.1, 2.42}}], {1, 0}, {
        Left, Bottom}, {0.8, 0.6000000000000001}]}}},
    AspectRatio->Automatic,
    Background->None,
    ColorOutput->Automatic,
    ImageSize->{655., Automatic},
    PlotRange->All]}], "}"}]], "Output",
 CellChangeTimes->{3.404405928471348*^9, 3.4044065897709475`*^9, 
  3.404407376108348*^9, 3.4044075272879477`*^9, 3.4044078606443477`*^9, 
  3.4044079972067475`*^9, 3.404408056283948*^9, 3.4044156627749476`*^9, 
  3.404415781210148*^9}]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.4044065136429477`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"S1", "=", "0.05"}], ",", 
      RowBox[{"S2", "=", "0.05"}], ",", 
      RowBox[{"M1", "=", 
       RowBox[{"-", "0.01"}]}], ",", 
      RowBox[{"M2", "=", 
       RowBox[{"-", "0.02"}]}], ",", 
      RowBox[{"\[Theta]1", "=", "0.03"}], ",", 
      RowBox[{"\[Theta]2", "=", "0.041"}], ",", 
      RowBox[{"\[Rho]s", "=", "0.6"}], ",", 
      RowBox[{"\[Rho]sinf", "=", "0.8"}], ",", 
      RowBox[{"\[Rho]m1", "=", "0.3"}], ",", 
      RowBox[{"\[Rho]m2", "=", 
       RowBox[{"-", "0.3"}]}], ",", 
      RowBox[{"\[Rho]1", "=", "0.5"}], ",", 
      RowBox[{"\[Rho]2", "=", "0.8"}], ",", " ", 
      RowBox[{"\[CapitalSigma]1", "=", "0.04"}], ",", 
      RowBox[{"\[CapitalSigma]2", "=", "0.05"}], ",", 
      RowBox[{"\[Beta]", "=", "5"}], ",", 
      RowBox[{"\[Tau]", "=", "5"}], ",", 
      RowBox[{"\[Lambda]1", "=", "1.1"}], ",", 
      RowBox[{"\[Lambda]2", "=", "1.2"}], ",", 
      RowBox[{"\[Nu]1", "=", "0.01"}], ",", 
      RowBox[{"\[Nu]2", "=", "0.01"}], ",", "M", ",", "\[CapitalSigma]inf", 
      ",", "\[CapitalSigma]", ",", "Q", ",", "\[Beta]m", ",", "S", ",", 
      "\[Rho]", ",", 
      RowBox[{"printflag", "=", "0"}], ",", 
      RowBox[{"Lcoefs", "=", 
       RowBox[{"LegendreCoeffs", "[", "40", "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"M", "=", 
      RowBox[{"(", GridBox[{
         {"M1", 
          RowBox[{"\[Rho]m1", 
           SqrtBox[
            RowBox[{"M1", " ", "M2"}]]}]},
         {
          RowBox[{"\[Rho]m2", 
           SqrtBox[
            RowBox[{"M1", " ", "M2"}]]}], "M2"}
        }], ")"}]}], ";", 
     RowBox[{"\[CapitalSigma]inf", "=", 
      RowBox[{"(", GridBox[{
         {"\[Theta]1", 
          RowBox[{
           SqrtBox[
            RowBox[{"\[Theta]1", " ", "\[Theta]2"}]], " ", "\[Rho]sinf"}]},
         {
          RowBox[{
           SqrtBox[
            RowBox[{"\[Theta]1", " ", "\[Theta]2"}]], " ", "\[Rho]sinf"}], 
          "\[Theta]2"}
        }], ")"}]}], ";", 
     RowBox[{"\[CapitalSigma]", "=", 
      RowBox[{"(", GridBox[{
         {"\[CapitalSigma]1", 
          RowBox[{
           SqrtBox[
            RowBox[{"\[CapitalSigma]1", " ", "\[CapitalSigma]2"}]], " ", 
           "\[Rho]s"}]},
         {
          RowBox[{
           SqrtBox[
            RowBox[{"\[CapitalSigma]1", " ", "\[CapitalSigma]2"}]], " ", 
           "\[Rho]s"}], "\[CapitalSigma]2"}
        }], ")"}]}], ";", 
     RowBox[{"S", "=", 
      RowBox[{"{", 
       RowBox[{"S1", ",", "S2"}], "}"}]}], ";", 
     RowBox[{"\[Rho]", "=", 
      RowBox[{"{", 
       RowBox[{"\[Rho]1", ",", "\[Rho]2"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"strikes", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.02"}], ",", 
        RowBox[{"-", "0.01"}], ",", 
        RowBox[{"-", "0.005"}], ",", 
        RowBox[{"-", "0.002"}], ",", 
        RowBox[{"-", "0.001"}], ",", 
        RowBox[{"-", "0.0005"}], ",", 
        RowBox[{"-", "0.0002"}], ",", 
        RowBox[{"-", "0.0001"}], ",", "0", ",", "0.0001", ",", "0.0002", ",", 
        "0.0005", ",", "0.001", ",", "0.002", ",", "0.005", ",", "0.0075", 
        ",", "0.01", ",", "0.015", ",", "0.02"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"smile1", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"strikes", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"NormalImplicitVol", "[", 
           RowBox[{
            RowBox[{"S1", "-", "S2"}], ",", 
            RowBox[{"strikes", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "\[Tau]", ",", 
            "\[IndentingNewLine]", 
            RowBox[{"BiHestonVanilla", "[", 
             RowBox[{"S", ",", 
              RowBox[{"strikes", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", "\[Tau]", ",", 
              "\[CapitalSigma]", ",", "M", ",", "\[CapitalSigma]inf", ",", 
              "\[Beta]", ",", "\[Rho]", ",", "printflag"}], "]"}]}], "]"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "strikes", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"inter1", "=", 
      RowBox[{"Interpolation", "[", 
       RowBox[{"smile1", ",", 
        RowBox[{"InterpolationOrder", "\[Rule]", "2"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"vol1", "=", 
      RowBox[{"ImpVolHeston2", "[", 
       RowBox[{
       "S1", ",", "S1", ",", "\[Tau]", ",", "\[CapitalSigma]1", ",", 
        "\[Theta]1", ",", "\[Rho]1", ",", 
        RowBox[{"-", "M1"}], ",", "\[Nu]1", ",", "Lcoefs"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"vol2", "=", 
      RowBox[{"ImpVolHeston2", "[", 
       RowBox[{
       "S2", ",", "S2", ",", "\[Tau]", ",", "\[CapitalSigma]2", ",", 
        "\[Theta]2", ",", "\[Rho]2", ",", 
        RowBox[{"-", "M2"}], ",", "\[Nu]2", ",", "Lcoefs"}], "]"}]}], ";", 
     RowBox[{"\[Rho]smod", "=", "\[Rho]s"}], ";", "\[IndentingNewLine]", 
     RowBox[{"smile2", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"strikes", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"NormalImplicitVol", "[", 
           RowBox[{
            RowBox[{"S1", "-", "S2"}], ",", 
            RowBox[{"strikes", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "\[Tau]", ",", 
            RowBox[{"LogNormalSpreadOption", "[", 
             RowBox[{
             "S1", ",", "S2", ",", "vol1", ",", "vol2", ",", "\[Rho]smod", 
              ",", 
              RowBox[{"strikes", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", "\[Tau]"}], "]"}]}], 
           "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "strikes", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"inter2", "=", 
      RowBox[{"Interpolation", "[", "smile2", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"inter1", "[", "x", "]"}], ",", 
         RowBox[{"inter2", "[", "x", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"strikes", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"Last", "[", "strikes", "]"}]}], "}"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<Implied normal vol\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotLegend", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<biheston\>\"", ",", "\"\<bilog\>\""}], "}"}]}]}], 
      "]"}]}]}], "\[IndentingNewLine]", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.400420962348207*^9, 3.4004210687721252`*^9}, {
   3.4004211951964273`*^9, 3.400421290026373*^9}, {3.4004217619885597`*^9, 
   3.400421783613975*^9}, {3.4009064818853397`*^9, 3.400906510698393*^9}, {
   3.4020336908625154`*^9, 3.4020337021752324`*^9}, {3.402033860818903*^9, 
   3.4020338717566133`*^9}, {3.4020340123218117`*^9, 3.402034022884515*^9}, {
   3.402143532804983*^9, 3.4021435714776*^9}, {3.4021502545434127`*^9, 
   3.402150277340726*^9}, {3.402150318060257*^9, 3.4021503190602765`*^9}, {
   3.4021508739146795`*^9, 3.402150926103182*^9}, {3.402205941048216*^9, 
   3.402206032299968*^9}, {3.402222386473337*^9, 3.4022223919109416`*^9}, {
   3.4022282113507977`*^9, 3.4022282342887383`*^9}, {3.4034169071994333`*^9, 
   3.4034171368132167`*^9}, {3.403417190251743*^9, 3.4034171928924184`*^9}, {
   3.4038720435454235`*^9, 3.4038720779367085`*^9}, {3.403872150328723*^9, 
   3.4038722699716454`*^9}, {3.4038728308886647`*^9, 3.403872841748248*^9}, {
   3.403872982829082*^9, 3.4038729829697094`*^9}, {3.403873031595643*^9, 
   3.403873031720646*^9}, {3.4038734196343436`*^9, 3.4038734198374724`*^9}, {
   3.4038753783750753`*^9, 3.403875380922*^9}, {3.40387624346981*^9, 
   3.403876243938569*^9}, 3.4038769829683833`*^9, {3.403877122346059*^9, 
   3.4038771227679424`*^9}, {3.4038771625499563`*^9, 3.403877163065591*^9}, {
   3.403877324631193*^9, 3.4038773551474037`*^9}, {3.4038773936168923`*^9, 
   3.40387739764822*^9}, {3.4038780215976996`*^9, 3.40387809141154*^9}, 
   3.4038782021792917`*^9, 3.4038782387893696`*^9, {3.4038791308846226`*^9, 
   3.403879131431508*^9}, {3.4038791725729227`*^9, 3.4038791727135506`*^9}, 
   3.403880915450135*^9, {3.403881572775256*^9, 3.4038816079634314`*^9}, {
   3.4038817484661293`*^9, 3.403881834889663*^9}, {3.403881964439026*^9, 
   3.4038819903613987`*^9}, {3.4038820541126223`*^9, 
   3.4038820551126413`*^9}, {3.403882087738268*^9, 3.4038822508976507`*^9}, {
   3.40388231024254*^9, 3.4038823888221736`*^9}, {3.4038826393894844`*^9, 
   3.403882698968753*^9}, 3.4038827641887555`*^9, {3.4038828400964627`*^9, 
   3.4038828570967894`*^9}, {3.4039407380848007`*^9, 3.40394075161631*^9}, {
   3.4039469958143215`*^9, 3.4039472324751153`*^9}, 3.4039472679757967`*^9, {
   3.403947357758771*^9, 3.4039473853218*^9}, {3.403947507839777*^9, 
   3.4039475596532717`*^9}, {3.4039476866088343`*^9, 3.403947691202673*^9}, {
   3.4039482225566244`*^9, 3.4039482791358356`*^9}, {3.403949588801606*^9, 
   3.403949589160988*^9}, {3.403949749835948*^9, 3.403949785352255*^9}, {
   3.4039500598262744`*^9, 3.4039500646232414`*^9}, {3.403950358238254*^9, 
   3.4039503617383213`*^9}, {3.403950421067585*^9, 3.4039504374897757`*^9}, {
   3.4039506060398865`*^9, 3.4039506065086455`*^9}, 3.4039508020436497`*^9, {
   3.4039508397318735`*^9, 3.403950861747921*^9}, {3.403950893982915*^9, 
   3.4039508942172947`*^9}, {3.403951078517708*^9, 3.403951078986467*^9}, {
   3.403952006348022*^9, 3.4039520495051003`*^9}, {3.4039520956153607`*^9, 
   3.4039521059593096`*^9}, {3.4039522097581778`*^9, 3.4039522109457*^9}, {
   3.403952602000083*^9, 3.403952625531785*^9}, {3.4039527686751585`*^9, 
   3.40395278725364*^9}, {3.403977810144146*^9, 3.403977810424946*^9}, {
   3.403977841858946*^9, 3.403977845353346*^9}, {3.404149383978135*^9, 
   3.4041493938841352`*^9}, 3.404194167101803*^9, {3.404194474420203*^9, 
   3.4041944878892117`*^9}, 3.4042069235810976`*^9, 3.40435950413175*^9, {
   3.40435963947735*^9, 3.40435967031855*^9}, {3.40435979385495*^9, 
   3.40435979937735*^9}, {3.40435992101055*^9, 3.40435992205575*^9}, 
   3.4043600113657503`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"45.926999999999815`", ",", 
   GraphicsBox[{InsetBox[
      GraphicsBox[{{}, {}, 
        {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
          "]]}, 
        {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
          "]]}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->True,
       AxesOrigin->{0, 0.0095},
       DisplayFunction:>$DisplayFunction,
       FormatType->TraditionalForm,
       PlotLabel->FormBox["\"Implied normal vol\"", TraditionalForm],
       PlotRange->{{-0.02, 0.02}, {0.00938121155579217, 
        0.012430894334939142`}},
       PlotRangeClipping->True,
       PlotRangePadding->{
         Scaled[0.02], 
         Scaled[0.02]}], {-1, -0.6180339887498948}, {
      Left, Bottom}, {2, 1.2360679774997896`}], {
      {GrayLevel[0], 
       RectangleBox[{-1.15, -0.8680339887498949}, \
{-0.34999999999999987`, -0.2680339887498948}]}, 
      {GrayLevel[1], EdgeForm[{GrayLevel[0], Thickness[0.001]}], 
       RectangleBox[{-1.2, -0.8180339887498949}, \
{-0.3999999999999999, -0.21803398874989477`}], InsetBox[
        GraphicsBox[{{{InsetBox[
             GraphicsBox[
              {Hue[0.9060679774997897, 0.6, 0.6], 
               LineBox[{{0, 0}, {1, 0}}]}], {0.08, 0.08}, {
             Left, Bottom}, {1, 1}], 
            InsetBox["\<\"bilog\"\>", {1.21, 0.58}, {-1, 0}, Automatic, {1, 
             0}]}, {InsetBox[
             GraphicsBox[
              {Hue[0.67, 0.6, 0.6], 
               LineBox[{{0, 0}, {1, 0}}]}], {0.08, 1.24}, {
             Left, Bottom}, {1, 1}], 
            InsetBox["\<\"biheston\"\>", {1.21, 1.74}, {-1, 0}, Automatic, {1,
              0}]}}, {}},
         AspectRatio->0.7500000000000001,
         FormatType->TraditionalForm,
         PlotRange->{{-0.1, 3.26}, {-0.1, 
          2.42}}], {-1.2, -0.8180339887498949}, {
        Left, Bottom}, {0.8, 0.6000000000000001}]}}},
    AspectRatio->Automatic,
    Background->None,
    ColorOutput->Automatic,
    ImageSize->{411., Automatic},
    PlotRange->All]}], "}"}]], "Output",
 CellChangeTimes->{3.4041942092901125`*^9, 3.40435978377735*^9, 
  3.40435984655175*^9, 3.40435997050935*^9, 3.404415466589348*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"S1", "=", "0.05"}], ",", 
      RowBox[{"S2", "=", "0.05"}], ",", 
      RowBox[{"M1", "=", 
       RowBox[{"-", "0.05"}]}], ",", 
      RowBox[{"M2", "=", 
       RowBox[{"-", "0.05"}]}], ",", 
      RowBox[{"\[Theta]1", "=", "0.03"}], ",", 
      RowBox[{"\[Theta]2", "=", "0.041"}], ",", 
      RowBox[{"\[Rho]s", "=", "0.6"}], ",", 
      RowBox[{"\[Rho]sinf", "=", "0.8"}], ",", 
      RowBox[{"\[Rho]m1", "=", "0.3"}], ",", 
      RowBox[{"\[Rho]m2", "=", 
       RowBox[{"-", "0.3"}]}], ",", 
      RowBox[{"\[Rho]1", "=", "0.5"}], ",", 
      RowBox[{"\[Rho]2", "=", "0.8"}], ",", " ", 
      RowBox[{"\[CapitalSigma]1", "=", "0.04"}], ",", 
      RowBox[{"\[CapitalSigma]2", "=", "0.05"}], ",", 
      RowBox[{"\[Beta]", "=", "5"}], ",", 
      RowBox[{"\[Tau]", "=", "5"}], ",", 
      RowBox[{"\[Lambda]1", "=", "1.1"}], ",", 
      RowBox[{"\[Lambda]2", "=", "1.2"}], ",", 
      RowBox[{"\[Nu]1", "=", "0.01"}], ",", 
      RowBox[{"\[Nu]2", "=", "0.01"}], ",", "M", ",", "\[CapitalSigma]inf", 
      ",", "\[CapitalSigma]", ",", "Q", ",", "\[Beta]m", ",", "S", ",", 
      "\[Rho]", ",", 
      RowBox[{"printflag", "=", "0"}], ",", 
      RowBox[{"Lcoefs", "=", 
       RowBox[{"LegendreCoeffs", "[", "40", "]"}]}], ",", 
      "\[IndentingNewLine]", "smile1", ",", "smile2", ",", "smile3", ",", 
      "inter1", ",", "inter2", ",", "inter3", ",", "smileLN", ",", 
      "interLN"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"M", "=", 
      RowBox[{"(", GridBox[{
         {"M1", 
          RowBox[{"\[Rho]m1", 
           SqrtBox[
            RowBox[{"M1", " ", "M2"}]]}]},
         {
          RowBox[{"\[Rho]m2", 
           SqrtBox[
            RowBox[{"M1", " ", "M2"}]]}], "M2"}
        }], ")"}]}], ";", 
     RowBox[{"\[CapitalSigma]inf", "=", 
      RowBox[{"(", GridBox[{
         {"\[Theta]1", 
          RowBox[{
           SqrtBox[
            RowBox[{"\[Theta]1", " ", "\[Theta]2"}]], " ", "\[Rho]sinf"}]},
         {
          RowBox[{
           SqrtBox[
            RowBox[{"\[Theta]1", " ", "\[Theta]2"}]], " ", "\[Rho]sinf"}], 
          "\[Theta]2"}
        }], ")"}]}], ";", 
     RowBox[{"\[CapitalSigma]", "=", 
      RowBox[{"(", GridBox[{
         {"\[CapitalSigma]1", 
          RowBox[{
           SqrtBox[
            RowBox[{"\[CapitalSigma]1", " ", "\[CapitalSigma]2"}]], " ", 
           "\[Rho]s"}]},
         {
          RowBox[{
           SqrtBox[
            RowBox[{"\[CapitalSigma]1", " ", "\[CapitalSigma]2"}]], " ", 
           "\[Rho]s"}], "\[CapitalSigma]2"}
        }], ")"}]}], ";", 
     RowBox[{"S", "=", 
      RowBox[{"{", 
       RowBox[{"S1", ",", "S2"}], "}"}]}], ";", 
     RowBox[{"\[Rho]", "=", 
      RowBox[{"{", 
       RowBox[{"\[Rho]1", ",", "\[Rho]2"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"strikes", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.02"}], ",", 
        RowBox[{"-", "0.01"}], ",", 
        RowBox[{"-", "0.005"}], ",", 
        RowBox[{"-", "0.002"}], ",", 
        RowBox[{"-", "0.001"}], ",", 
        RowBox[{"-", "0.0005"}], ",", 
        RowBox[{"-", "0.0002"}], ",", 
        RowBox[{"-", "0.0001"}], ",", "0", ",", "0.0001", ",", "0.0002", ",", 
        "0.0005", ",", "0.001", ",", "0.002", ",", "0.005", ",", "0.0075", 
        ",", "0.01", ",", "0.015", ",", "0.02"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Rho]m1", "=", 
      RowBox[{"-", "0.5"}]}], ";", 
     RowBox[{"\[Rho]m2", "=", 
      RowBox[{"-", "0.5"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"M", "=", 
      RowBox[{"(", GridBox[{
         {"M1", 
          RowBox[{"\[Rho]m1", 
           SqrtBox[
            RowBox[{"M1", " ", "M2"}]]}]},
         {
          RowBox[{"\[Rho]m2", 
           SqrtBox[
            RowBox[{"M1", " ", "M2"}]]}], "M2"}
        }], ")"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"smile1", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"strikes", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"NormalImplicitVol", "[", 
           RowBox[{
            RowBox[{"S1", "-", "S2"}], ",", 
            RowBox[{"strikes", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "\[Tau]", ",", 
            "\[IndentingNewLine]", 
            RowBox[{"BiHestonVanilla", "[", 
             RowBox[{"S", ",", 
              RowBox[{"strikes", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", "\[Tau]", ",", 
              "\[CapitalSigma]", ",", "M", ",", "\[CapitalSigma]inf", ",", 
              "\[Beta]", ",", "\[Rho]", ",", "printflag"}], "]"}]}], "]"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "strikes", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"inter1", "=", 
      RowBox[{"Interpolation", "[", 
       RowBox[{"smile1", ",", 
        RowBox[{"InterpolationOrder", "\[Rule]", "2"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Rho]m1", "=", 
      RowBox[{"-", "0.5"}]}], ";", 
     RowBox[{"\[Rho]m2", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"M", "=", 
      RowBox[{"(", GridBox[{
         {"M1", 
          RowBox[{"\[Rho]m1", 
           SqrtBox[
            RowBox[{"M1", " ", "M2"}]]}]},
         {
          RowBox[{"\[Rho]m2", 
           SqrtBox[
            RowBox[{"M1", " ", "M2"}]]}], "M2"}
        }], ")"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"smile2", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"strikes", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"NormalImplicitVol", "[", 
           RowBox[{
            RowBox[{"S1", "-", "S2"}], ",", 
            RowBox[{"strikes", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "\[Tau]", ",", 
            "\[IndentingNewLine]", 
            RowBox[{"BiHestonVanilla", "[", 
             RowBox[{"S", ",", 
              RowBox[{"strikes", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", "\[Tau]", ",", 
              "\[CapitalSigma]", ",", "M", ",", "\[CapitalSigma]inf", ",", 
              "\[Beta]", ",", "\[Rho]", ",", "printflag"}], "]"}]}], "]"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "strikes", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"inter2", "=", 
      RowBox[{"Interpolation", "[", 
       RowBox[{"smile2", ",", 
        RowBox[{"InterpolationOrder", "\[Rule]", "2"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Rho]m1", "=", 
      RowBox[{"-", "0.5"}]}], ";", 
     RowBox[{"\[Rho]m2", "=", "0.5"}], ";", "\[IndentingNewLine]", 
     RowBox[{"M", "=", 
      RowBox[{"(", GridBox[{
         {"M1", 
          RowBox[{"\[Rho]m1", 
           SqrtBox[
            RowBox[{"M1", " ", "M2"}]]}]},
         {
          RowBox[{"\[Rho]m2", 
           SqrtBox[
            RowBox[{"M1", " ", "M2"}]]}], "M2"}
        }], ")"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"smile3", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"strikes", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"NormalImplicitVol", "[", 
           RowBox[{
            RowBox[{"S1", "-", "S2"}], ",", 
            RowBox[{"strikes", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "\[Tau]", ",", 
            "\[IndentingNewLine]", 
            RowBox[{"BiHestonVanilla", "[", 
             RowBox[{"S", ",", 
              RowBox[{"strikes", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", "\[Tau]", ",", 
              "\[CapitalSigma]", ",", "M", ",", "\[CapitalSigma]inf", ",", 
              "\[Beta]", ",", "\[Rho]", ",", "printflag"}], "]"}]}], "]"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "strikes", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"inter3", "=", 
      RowBox[{"Interpolation", "[", 
       RowBox[{"smile3", ",", 
        RowBox[{"InterpolationOrder", "\[Rule]", "2"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"vol1", "=", 
      RowBox[{"ImpVolHeston2", "[", 
       RowBox[{
       "S1", ",", "S1", ",", "\[Tau]", ",", "\[CapitalSigma]1", ",", 
        "\[Theta]1", ",", "\[Rho]1", ",", 
        RowBox[{"-", "M1"}], ",", "\[Nu]1", ",", "Lcoefs"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"vol2", "=", 
      RowBox[{"ImpVolHeston2", "[", 
       RowBox[{
       "S2", ",", "S2", ",", "\[Tau]", ",", "\[CapitalSigma]2", ",", 
        "\[Theta]2", ",", "\[Rho]2", ",", 
        RowBox[{"-", "M2"}], ",", "\[Nu]2", ",", "Lcoefs"}], "]"}]}], ";", 
     RowBox[{"\[Rho]smod", "=", "\[Rho]s"}], ";", "\[IndentingNewLine]", 
     RowBox[{"smileLN", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"strikes", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"NormalImplicitVol", "[", 
           RowBox[{
            RowBox[{"S1", "-", "S2"}], ",", 
            RowBox[{"strikes", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "\[Tau]", ",", 
            RowBox[{"LogNormalSpreadOption", "[", 
             RowBox[{
             "S1", ",", "S2", ",", "vol1", ",", "vol2", ",", "\[Rho]smod", 
              ",", 
              RowBox[{"strikes", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", "\[Tau]"}], "]"}]}], 
           "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "strikes", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"interLN", "=", 
      RowBox[{"Interpolation", "[", "smileLN", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"inter1", "[", "x", "]"}], ",", 
         RowBox[{"inter2", "[", "x", "]"}], ",", 
         RowBox[{"inter3", "[", "x", "]"}], ",", 
         RowBox[{"interLN", "[", "x", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"strikes", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"Last", "[", "strikes", "]"}]}], "}"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<Implied normal vol\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotLegend", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<biheston --\>\"", ",", "\"\<biheston -0\>\"", ",", 
          "\"\<biheston -+\>\"", ",", "\"\<bilog\>\""}], "}"}]}], ",", 
       RowBox[{"LegendPosition", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}]}]}], "]"}]}]}], "\[IndentingNewLine]",
    "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.400420962348207*^9, 3.4004210687721252`*^9}, {
   3.4004211951964273`*^9, 3.400421290026373*^9}, {3.4004217619885597`*^9, 
   3.400421783613975*^9}, {3.4009064818853397`*^9, 3.400906510698393*^9}, {
   3.4020336908625154`*^9, 3.4020337021752324`*^9}, {3.402033860818903*^9, 
   3.4020338717566133`*^9}, {3.4020340123218117`*^9, 3.402034022884515*^9}, {
   3.402143532804983*^9, 3.4021435714776*^9}, {3.4021502545434127`*^9, 
   3.402150277340726*^9}, {3.402150318060257*^9, 3.4021503190602765`*^9}, {
   3.4021508739146795`*^9, 3.402150926103182*^9}, {3.402205941048216*^9, 
   3.402206032299968*^9}, {3.402222386473337*^9, 3.4022223919109416`*^9}, {
   3.4022282113507977`*^9, 3.4022282342887383`*^9}, {3.4034169071994333`*^9, 
   3.4034171368132167`*^9}, {3.403417190251743*^9, 3.4034171928924184`*^9}, {
   3.4038720435454235`*^9, 3.4038720779367085`*^9}, {3.403872150328723*^9, 
   3.4038722699716454`*^9}, {3.4038728308886647`*^9, 3.403872841748248*^9}, {
   3.403872982829082*^9, 3.4038729829697094`*^9}, {3.403873031595643*^9, 
   3.403873031720646*^9}, {3.4038734196343436`*^9, 3.4038734198374724`*^9}, {
   3.4038753783750753`*^9, 3.403875380922*^9}, {3.40387624346981*^9, 
   3.403876243938569*^9}, 3.4038769829683833`*^9, {3.403877122346059*^9, 
   3.4038771227679424`*^9}, {3.4038771625499563`*^9, 3.403877163065591*^9}, {
   3.403877324631193*^9, 3.4038773551474037`*^9}, {3.4038773936168923`*^9, 
   3.40387739764822*^9}, {3.4038780215976996`*^9, 3.40387809141154*^9}, 
   3.4038782021792917`*^9, 3.4038782387893696`*^9, {3.4038791308846226`*^9, 
   3.403879131431508*^9}, {3.4038791725729227`*^9, 3.4038791727135506`*^9}, 
   3.403880915450135*^9, {3.403881572775256*^9, 3.4038816079634314`*^9}, {
   3.4038817484661293`*^9, 3.403881834889663*^9}, {3.403881964439026*^9, 
   3.4038819903613987`*^9}, {3.4038820541126223`*^9, 
   3.4038820551126413`*^9}, {3.403882087738268*^9, 3.4038822508976507`*^9}, {
   3.40388231024254*^9, 3.4038823888221736`*^9}, {3.4038826393894844`*^9, 
   3.403882698968753*^9}, 3.4038827641887555`*^9, {3.4038828400964627`*^9, 
   3.4038828570967894`*^9}, {3.4039407380848007`*^9, 3.40394075161631*^9}, {
   3.4039469958143215`*^9, 3.4039472324751153`*^9}, 3.4039472679757967`*^9, {
   3.403947357758771*^9, 3.4039473853218*^9}, {3.403947507839777*^9, 
   3.4039475596532717`*^9}, {3.4039476866088343`*^9, 3.403947691202673*^9}, {
   3.4039482225566244`*^9, 3.4039482791358356`*^9}, {3.403949588801606*^9, 
   3.403949589160988*^9}, {3.403949749835948*^9, 3.403949785352255*^9}, {
   3.4039500598262744`*^9, 3.4039500646232414`*^9}, {3.403950358238254*^9, 
   3.4039503617383213`*^9}, {3.403950421067585*^9, 3.4039504374897757`*^9}, {
   3.4039506060398865`*^9, 3.4039506065086455`*^9}, 3.4039508020436497`*^9, {
   3.4039508397318735`*^9, 3.403950861747921*^9}, {3.403950893982915*^9, 
   3.4039508942172947`*^9}, {3.403951078517708*^9, 3.403951078986467*^9}, {
   3.403952006348022*^9, 3.4039520495051003`*^9}, {3.4039520956153607`*^9, 
   3.4039521059593096`*^9}, {3.4039522097581778`*^9, 3.4039522109457*^9}, {
   3.403952602000083*^9, 3.403952625531785*^9}, {3.4039527686751585`*^9, 
   3.40395278725364*^9}, {3.403977810144146*^9, 3.403977810424946*^9}, {
   3.403977841858946*^9, 3.403977845353346*^9}, {3.403981650390746*^9, 
   3.403981706784746*^9}, {3.403981815828746*^9, 3.403982011608746*^9}, {
   3.403982144926346*^9, 3.403982164987946*^9}, {3.403982254438346*^9, 
   3.403982265763946*^9}, {3.403982370174746*^9, 3.403982381999546*^9}, {
   3.403982413433546*^9, 3.403982447160746*^9}, {3.403982563536746*^9, 
   3.403982584627946*^9}, {3.4039826522539463`*^9, 3.403982666824346*^9}, {
   3.404149430746935*^9, 3.4041494580937347`*^9}, {3.404194629063797*^9, 
   3.4041947223155875`*^9}, 3.40436007718215*^9, {3.4043601359629498`*^9, 
   3.4043602234633503`*^9}, {3.40436040720015*^9, 3.40436041163055*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"137.0779999999999`", ",", 
   GraphicsBox[{InsetBox[
      GraphicsBox[{{}, {}, 
        {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
qBb0E+fzX2+g////GMRdNeW+g/4frjUHbQ==
          "]]}, 
        {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
I6Vz6P8BO/1SZw==
          "]]}, 
        {Hue[0.14213595499957954`, 0.6, 0.6], LineBox[CompressedData["
1:eJwt2Hk4Fd8fB3BEkaJQJCpr9kTJ/rHLmt2171SyJDuFuvdakvX2rYRos1Xf
FLLlICmhaJXiW4hQkQrR8vvc5/n9Nc/rmTkzn5k5c877jJhvmF0AGwsLizAr
CwtzS31ZpvE+nkGUtZTzrrqlgcBQ42xFDIN8Ujsb9tA1DS6P9pZFRDLI0cfn
A6dc0qBj9tsG9lAGEe6PKlWipAEHt96ctA+D7JWMMq93SAM6DFQeMmWQw2yl
B/qs0iC1nFNkkZ9B5ouuv+XXS4OM+AN/eK7nk37bgtMTkmngNUZaPvXmkUrp
zAL36VQIz94ylv87l6jGzWU73EkFg9+eFrY7c4nuoT7vSVoqjCrvutFin0O0
dX6pbLRLhSQLiU9TXNnkazPc95dIhRetq47Um50iZZUj6UVzdPi36d+jt3JP
kiS7+ay8Djr8Vd9vBwvpRPduf7fxeTp81jffoqCZRj4/Fow3C6eDba92TVUB
nVhobL86YEYHjeG5XucVNEJJryxukaJDS/zTYT+zE2TjDv6zLH9p0HiuvYHt
egr5alraSH1Lg7K0esEVb5OI9d7emRsNNHj3MeKeS2gi6ZZz3MtbQIOV1tYr
XmrFkRX9JZVDx2gQ9ChxJ19HFGFblBB970eDWoueb0dSI4i+Sd30LUsaJD4c
2ivPHUrG+ryrNdVoUMi7s2GbTBCZLDXyVJTA8/vnN4XwBBHfxBNT0+I0kGz8
cbfxeyBRCjAqqURf829sd2gLJK0+lmky6KYGw54010DyZGWUubQYDQb9nP6b
zQwgDBbZM7JbabCpPoGj7asfaby12W7fZhr8491p69PkTWLXK1gLCtCAYX3e
nnrBm/TmZp97w0+DPO1wx7IT3iR/fcuGEvQpIWGXzxbeRNK8zkoWzVn6pnWu
3os4pHDJ6/DRYCxZblh82YPcDyvJCV1HgyK9h0InklzJjGXOqsU1NDgrEiHS
ZepKhDONHNvRjMXN23jXuZLzsWkvM9GZN8O2ny9xIUUu5Ig4On6boNrtNgop
05oUsuGmgRNLoP3oCmfSk6TIU8tFA57WFVmGafbEnTP28pWVNKBcm5nScrAn
Pft/UOPQF8++Md21zZ6M2wbkWaH3HL7NKlVvRza0iOya56CBt7hf1MqPtiTg
z2SeGfo2td29y9SGGNkINiyuoEF1HptzMY850ZfdHBzLivWZL0sEb9IkxZ8d
zVh/UyGmJfO1r5UGKe46LPP+FxV8VbZku6aoE9PbHUptaHVh/SWzSTWS/S9v
dQp6bJLeJ9OgStgsNTPZ0U88hOjbPqsQg9M8Vz4sU6Gxv0JLSEyFyH/a9KET
ndPQc3VVujL53v5iMB0979pc/yduB3lhQM8JRvca/Cfx5b0i8egLCbFCX5Zj
yx4yUyBZwZmHd6Dj+aSWeqrlSJDASOF6tM2SaUDzJlkyWaGftbxEBemRg31V
KdtJ6dWQuHH0r65TWucnpQgtpenKY/TT6ptXM2wlyWlNef4adPm5Z+vjG8TJ
k/7mtn/Qx1LmEw+IiZHdpuHV0cz9T1X6qvm2ks4C4xF7tOPF2Ks5I5vJiR5t
ByU0a0RLYtgtIWLV/DL0z08qXNdnt7c+voH8Pc0X24nmbt/6V9CIhzyIE6h0
Rd/8rX5fc81oyzSbfmb+IhWa+X3FNZ916SYJczL80VmrDr589WNGV/iGMH03
WtXwROHSXXaIU7sXOLRAhcFLCzPaW7hBV97FsQatz1ZXCmQdNJ++b3AKPekr
9yNlqyCMdIsJG6O188e2XNonDBln1rNLonPuFe/tSBKFqYFXn9jRc3EKDXPO
24A9J/L5xDwVRPK4rFfMisHL5onGHrRJ5fgIf5oE+HjtLLmNDm+/FyO5TQqu
xNhSC9EFgyVrdtdLw0WOvUGp6I65o6XGNjLgzLXBLBL9ZbWbmtNHWbh/vF7W
Dy0kod4dmCwPNaTP3gp9yH7ue+pNJajzsDfdil7tqioZkKYCYss8a+7/oEJ1
Y1lM2Ud1yG7yWiOEXkxO6fx7XwM+P3rtyorWNXXbQLmkCTJTigNT36nw6BnP
bU5PbVCl+Hu1oEc+RX058AygZI6rJAidzntRZaOXIaymxf/p+EaFa3M8ru29
hqDtKVNYje57kZASqm0Ehz1GQorRGwsd+zo3GcNob/z1WPRFGa7QmOcmMB2t
U7QD3agfXjFgZg5Zk1xQNkeFIcmhPmq9OcyKx4ueQbNwmi8qb7cAx+PzO1LR
Jo8lTNPZLUHmNv/XIPQz11djGsQKvr39b1QePa9jtGZc0RpCTKp9RdHCYtWq
eYXWMPUiawMv2nsi4/hU3D74HBgq+O0rHq+xNceqwAbUNCeK7qLTql5cutRv
A8Hqi09uojeJZt75yWkL8uGsey6jtVl+DuO7A/vMX5dOoo93PlX842AHWjGn
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
ZB3tRG+6rMn9Bv3//zEQeGfg9Hv0/wBCbHSm
          "]]}, 
        {Hue[0.37820393249936934`, 0.6, 0.6], LineBox[CompressedData["
1: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

          "]]}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->True,
       AxesOrigin->{0, 0.0095},
       DisplayFunction:>$DisplayFunction,
       FormatType->TraditionalForm,
       PlotLabel->FormBox["\"Implied normal vol\"", TraditionalForm],
       PlotRange->{{-0.02, 0.02}, {0.009298033236653699, 
        0.012445273913014684`}},
       PlotRangeClipping->True,
       PlotRangePadding->{
         Scaled[0.02], 
         Scaled[0.02]}], {-1, -0.6180339887498948}, {
      Left, Bottom}, {2, 1.2360679774997896`}], {
      {GrayLevel[0], 
       RectangleBox[{1.05, -0.05}, \
{1.6053719008264464`, 0.7499999999999999}]}, 
      {GrayLevel[1], EdgeForm[{GrayLevel[0], Thickness[0.001]}], 
       RectangleBox[{1, 0}, {1.5553719008264464`, 0.7999999999999999}], 
       InsetBox[
        GraphicsBox[{{{InsetBox[
             GraphicsBox[
              {Hue[0.37820393249936846`, 0.6, 0.6], 
               LineBox[{{0, 0}, {1, 0}}]}], {0.08, 0.08}, {
             Left, Bottom}, {1, 1}], 
            InsetBox["\<\"bilog\"\>", {1.21, 0.58}, {-1, 0}, Automatic, {1, 
             0}]}, {InsetBox[
             GraphicsBox[
              {Hue[0.1421359549995791, 0.6, 0.6], 
               LineBox[{{0, 0}, {1, 0}}]}], {0.08, 1.24}, {
             Left, Bottom}, {1, 1}], 
            InsetBox["\<\"biheston -+\"\>", {1.21, 1.74}, {-1, 0}, 
             Automatic, {1, 0}]}, {InsetBox[
             GraphicsBox[
              {Hue[0.9060679774997897, 0.6, 0.6], 
               LineBox[{{0, 0}, {1, 0}}]}], {0.08, 2.4}, {
             Left, Bottom}, {1, 1}], 
            InsetBox["\<\"biheston -0\"\>", {1.21, 2.9}, {-1, 0}, Automatic, {
             1, 0}]}, {InsetBox[
             GraphicsBox[
              {Hue[0.67, 0.6, 0.6], 
               LineBox[{{0, 0}, {1, 0}}]}], {0.08, 3.56}, {
             Left, Bottom}, {1, 1}], 
            InsetBox["\<\"biheston --\"\>", {1.21, 4.0600000000000005`}, {-1, 0},
              Automatic, {1, 0}]}}, {}},
         AspectRatio->1.44047619047619,
         FormatType->TraditionalForm,
         PlotRange->{{-0.1, 3.26}, {-0.1, 4.739999999999999}}], {1, 0}, {
        Left, Bottom}, {0.5553719008264464, 0.7999999999999999}]}}},
    AspectRatio->Automatic,
    Background->None,
    ColorOutput->Automatic,
    ImageSize->{547., Automatic},
    PlotRange->All]}], "}"}]], "Output",
 CellChangeTimes->{3.40436036298975*^9, 3.40436055184335*^9, 
  3.4044119165313473`*^9, 3.4044124522175474`*^9, 3.4044132182301474`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"InterpolatingFunction", "::", "\"\<dmval\>\""}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Timing", "[", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"S1", "=", "0.05"}], ",", 
      RowBox[{"S2", "=", "0.04"}], ",", 
      RowBox[{"M1", "=", 
       RowBox[{"-", "0.05"}]}], ",", 
      RowBox[{"M2", "=", 
       RowBox[{"-", "0.06"}]}], ",", 
      RowBox[{"\[Theta]1", "=", "0.03"}], ",", 
      RowBox[{"\[Theta]2", "=", "0.041"}], ",", 
      RowBox[{"\[Rho]s", "=", "0.6"}], ",", 
      RowBox[{"\[Rho]sinf", "=", "0.8"}], ",", 
      RowBox[{"\[Rho]m1", "=", "0."}], ",", 
      RowBox[{"\[Rho]m2", "=", "0."}], ",", 
      RowBox[{"\[Rho]1", "=", 
       RowBox[{"-", "0.5"}]}], ",", 
      RowBox[{"\[Rho]2", "=", 
       RowBox[{"-", "0.8"}]}], ",", " ", 
      RowBox[{"\[CapitalSigma]1", "=", "0.04"}], ",", 
      RowBox[{"\[CapitalSigma]2", "=", "0.05"}], ",", 
      RowBox[{"\[Beta]", "=", "5"}], ",", 
      RowBox[{"\[Tau]", "=", "5"}], ",", 
      RowBox[{"\[Lambda]1", "=", "1.1"}], ",", 
      RowBox[{"\[Lambda]2", "=", "1.2"}], ",", "M", ",", "\[CapitalSigma]inf",
       ",", "\[CapitalSigma]", ",", "Q", ",", "\[Beta]m", ",", "S", ",", 
      "\[Rho]", ",", 
      RowBox[{"printflag", "=", "0"}], ",", 
      RowBox[{"Lcoefs", "=", 
       RowBox[{"LegendreCoeffs", "[", "40", "]"}]}], ",", 
      "\[IndentingNewLine]", "smile1", ",", "smile2", ",", "smile3", ",", 
      "inter1", ",", "inter2", ",", "inter3", ",", "smileLN", ",", 
      "interLN"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"M", "=", 
      RowBox[{"(", GridBox[{
         {"M1", 
          RowBox[{"\[Rho]m1", 
           SqrtBox[
            RowBox[{"M1", " ", "M2"}]]}]},
         {
          RowBox[{"\[Rho]m2", 
           SqrtBox[
            RowBox[{"M1", " ", "M2"}]]}], "M2"}
        }], ")"}]}], ";", 
     RowBox[{"\[CapitalSigma]inf", "=", 
      RowBox[{"(", GridBox[{
         {"\[Theta]1", 
          RowBox[{
           SqrtBox[
            RowBox[{"\[Theta]1", " ", "\[Theta]2"}]], " ", "\[Rho]sinf"}]},
         {
          RowBox[{
           SqrtBox[
            RowBox[{"\[Theta]1", " ", "\[Theta]2"}]], " ", "\[Rho]sinf"}], 
          "\[Theta]2"}
        }], ")"}]}], ";", 
     RowBox[{"\[CapitalSigma]", "=", 
      RowBox[{"(", GridBox[{
         {"\[CapitalSigma]1", 
          RowBox[{
           SqrtBox[
            RowBox[{"\[CapitalSigma]1", " ", "\[CapitalSigma]2"}]], " ", 
           "\[Rho]s"}]},
         {
          RowBox[{
           SqrtBox[
            RowBox[{"\[CapitalSigma]1", " ", "\[CapitalSigma]2"}]], " ", 
           "\[Rho]s"}], "\[CapitalSigma]2"}
        }], ")"}]}], ";", 
     RowBox[{"S", "=", 
      RowBox[{"{", 
       RowBox[{"S1", ",", "S2"}], "}"}]}], ";", 
     RowBox[{"\[Rho]", "=", 
      RowBox[{"{", 
       RowBox[{"\[Rho]1", ",", "\[Rho]2"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"strikes", "=", 
      RowBox[{"{", 
       RowBox[{
       "0.01", ",", "0.02", ",", "0.025", ",", "0.03", ",", "0.035", ",", 
        "0.04", ",", "0.045", ",", "0.048", ",", "0.05", ",", "0.055", ",", 
        "0.06", ",", "0.08", ",", "0.1"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"smile1", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"strikes", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"ImpVolBS", "[", 
           RowBox[{"S1", ",", 
            RowBox[{"strikes", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "\[Tau]", ",", 
            RowBox[{"BiHestonUnderlying1Vanilla", "[", 
             RowBox[{"S", ",", 
              RowBox[{"strikes", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", "\[Tau]", ",", 
              "\[CapitalSigma]", ",", "M", ",", "\[CapitalSigma]inf", ",", 
              "\[Beta]", ",", "\[Rho]", ",", "printflag"}], "]"}]}], "]"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "strikes", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"inter1", "=", 
      RowBox[{"Interpolation", "[", 
       RowBox[{"smile1", ",", 
        RowBox[{"InterpolationOrder", "\[Rule]", "2"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", " ", 
     RowBox[{"Q", "=", 
      RowBox[{
       SqrtBox[
        RowBox[{
         RowBox[{"-", "M1"}], " ", "\[Theta]1"}]], "/", "\[Beta]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"smile2", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"strikes", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"ImpVolHeston2", "[", 
           RowBox[{"S1", ",", 
            RowBox[{"strikes", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "\[Tau]", ",", 
            "\[CapitalSigma]1", ",", "\[Theta]1", ",", "\[Rho]1", ",", 
            RowBox[{"-", "M1"}], ",", "Q", ",", "Lcoefs"}], "]"}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "strikes", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"inter2", "=", 
      RowBox[{"Interpolation", "[", "smile2", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"smile3", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"strikes", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "+", "0.0001"}], ",", 
          RowBox[{"ImpVolBS", "[", 
           RowBox[{"S1", ",", 
            RowBox[{
             RowBox[{"strikes", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "+", "0.0001"}], ",", "\[Tau]", 
            ",", 
            RowBox[{"BiHestonVanilla", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"S1", ",", "0.0001"}], "}"}], ",", 
              RowBox[{"strikes", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", "\[Tau]", ",", 
              "\[CapitalSigma]", ",", "M", ",", "\[CapitalSigma]inf", ",", 
              "\[Beta]", ",", "\[Rho]", ",", "printflag"}], "]"}]}], "]"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "strikes", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"inter3", "=", 
      RowBox[{"Interpolation", "[", "smile3", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"inter1", "[", "x", "]"}], ",", 
         RowBox[{"inter2", "[", "x", "]"}], ",", 
         RowBox[{"inter3", "[", "x", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"strikes", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"Last", "[", "strikes", "]"}]}], "}"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<Implied BS vol\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotLegend", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<BiHestonUnderlying1\>\"", ",", "\"\<Heston\>\"", ",", 
          "\"\<Bihestonlimit\>\""}], "}"}]}], ",", 
       RowBox[{"LegendPosition", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}]}]}], "]"}]}]}], "\[IndentingNewLine]",
    "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.400420962348207*^9, 3.4004210687721252`*^9}, {
   3.4004211951964273`*^9, 3.400421290026373*^9}, {3.4004217619885597`*^9, 
   3.400421783613975*^9}, {3.4009064818853397`*^9, 3.400906510698393*^9}, {
   3.4020336908625154`*^9, 3.4020337021752324`*^9}, {3.402033860818903*^9, 
   3.4020338717566133`*^9}, {3.4020340123218117`*^9, 3.402034022884515*^9}, {
   3.402143532804983*^9, 3.4021435714776*^9}, {3.4021502545434127`*^9, 
   3.402150277340726*^9}, {3.402150318060257*^9, 3.4021503190602765`*^9}, {
   3.4021508739146795`*^9, 3.402150926103182*^9}, {3.402205941048216*^9, 
   3.402206032299968*^9}, {3.402222386473337*^9, 3.4022223919109416`*^9}, {
   3.4022282113507977`*^9, 3.4022282342887383`*^9}, {3.4034169071994333`*^9, 
   3.4034171368132167`*^9}, {3.403417190251743*^9, 3.4034171928924184`*^9}, {
   3.4038720435454235`*^9, 3.4038720779367085`*^9}, {3.403872150328723*^9, 
   3.4038722699716454`*^9}, {3.4038728308886647`*^9, 3.403872841748248*^9}, {
   3.403872982829082*^9, 3.4038729829697094`*^9}, {3.403873031595643*^9, 
   3.403873031720646*^9}, {3.4038734196343436`*^9, 3.4038734198374724`*^9}, {
   3.4038753783750753`*^9, 3.403875380922*^9}, {3.40387624346981*^9, 
   3.403876243938569*^9}, 3.4038769829683833`*^9, {3.403877122346059*^9, 
   3.4038771227679424`*^9}, {3.4038771625499563`*^9, 3.403877163065591*^9}, {
   3.403877324631193*^9, 3.4038773551474037`*^9}, {3.4038773936168923`*^9, 
   3.40387739764822*^9}, {3.4038780215976996`*^9, 3.40387809141154*^9}, 
   3.4038782021792917`*^9, 3.4038782387893696`*^9, {3.4038791308846226`*^9, 
   3.403879131431508*^9}, {3.4038791725729227`*^9, 3.4038791727135506`*^9}, 
   3.403880915450135*^9, {3.403881572775256*^9, 3.4038816079634314`*^9}, {
   3.4038817484661293`*^9, 3.403881834889663*^9}, {3.403881964439026*^9, 
   3.4038819903613987`*^9}, {3.4038820541126223`*^9, 
   3.4038820551126413`*^9}, {3.403882087738268*^9, 3.4038822508976507`*^9}, {
   3.40388231024254*^9, 3.4038823888221736`*^9}, {3.4038826393894844`*^9, 
   3.403882698968753*^9}, 3.4038827641887555`*^9, {3.4038828400964627`*^9, 
   3.4038828570967894`*^9}, {3.4039407380848007`*^9, 3.40394075161631*^9}, {
   3.4039469958143215`*^9, 3.4039472324751153`*^9}, 3.4039472679757967`*^9, {
   3.403947357758771*^9, 3.4039473853218*^9}, {3.403947507839777*^9, 
   3.4039475596532717`*^9}, {3.4039476866088343`*^9, 3.403947691202673*^9}, {
   3.4039482225566244`*^9, 3.4039482791358356`*^9}, {3.403949588801606*^9, 
   3.403949589160988*^9}, {3.403949749835948*^9, 3.403949785352255*^9}, {
   3.4039500598262744`*^9, 3.4039500646232414`*^9}, {3.403950358238254*^9, 
   3.4039503617383213`*^9}, {3.403950421067585*^9, 3.4039504374897757`*^9}, {
   3.4039506060398865`*^9, 3.4039506065086455`*^9}, 3.4039508020436497`*^9, {
   3.4039508397318735`*^9, 3.403950861747921*^9}, {3.403950893982915*^9, 
   3.4039508942172947`*^9}, {3.403951078517708*^9, 3.403951078986467*^9}, {
   3.403952006348022*^9, 3.4039520495051003`*^9}, {3.4039520956153607`*^9, 
   3.4039521059593096`*^9}, {3.4039522097581778`*^9, 3.4039522109457*^9}, {
   3.403952602000083*^9, 3.403952625531785*^9}, {3.4039527686751585`*^9, 
   3.40395278725364*^9}, {3.403962473002103*^9, 3.403962542425311*^9}, {
   3.403962979621205*^9, 3.4039629824650097`*^9}, {3.403963031247196*^9, 
   3.4039631014360437`*^9}, {3.403963208469349*^9, 3.4039633677224064`*^9}, {
   3.4039634210203047`*^9, 3.403963424332868*^9}, {3.4039635263504515`*^9, 
   3.403963538085052*^9}, {3.4039635832577944`*^9, 3.4039635837265534`*^9}, 
   3.403965193523086*^9, {3.403986059855546*^9, 3.403986060276746*^9}, {
   3.4040512059748607`*^9, 3.4040512353028603`*^9}, {3.4040512855660605`*^9, 
   3.4040512994812603`*^9}, {3.4040513403064604`*^9, 3.404051376716861*^9}, {
   3.4040514232360606`*^9, 3.4040514282904606`*^9}, {3.4040658213347464`*^9, 
   3.4040658225647464`*^9}, 3.4040659258917465`*^9, {3.404065992996746*^9, 
   3.4040660517637463`*^9}, {3.4040661798527465`*^9, 
   3.4040662006767464`*^9}, {3.4040662460997467`*^9, 
   3.4040663483277464`*^9}, {3.4040664508527465`*^9, 3.404066472515746*^9}, {
   3.4040667138297462`*^9, 3.4040667237417464`*^9}, 3.404066760468746*^9, {
   3.4040670381497464`*^9, 3.4040670580127463`*^9}, {3.4040673011627464`*^9, 
   3.4040673016907463`*^9}, {3.4040673572537465`*^9, 
   3.4040673732357464`*^9}, {3.4040677498897467`*^9, 
   3.4040678043237467`*^9}, {3.404068030475746*^9, 3.4040680348357463`*^9}, {
   3.4040682808217463`*^9, 3.4040683272817464`*^9}, {3.4040685723407464`*^9, 
   3.4040686117087464`*^9}, {3.404068953581746*^9, 3.4040689574937468`*^9}, {
   3.404129782168208*^9, 3.4041297967778635`*^9}, {3.404132651473297*^9, 
   3.4041327303654375`*^9}, {3.4041328301798534`*^9, 
   3.4041328345549374`*^9}, {3.4041332141559753`*^9, 3.404133237062666*^9}, {
   3.404133702462226*^9, 3.404133722978245*^9}, {3.4041338334959917`*^9, 
   3.4041338532307453`*^9}, {3.404149656432135*^9, 3.404149672219335*^9}, {
   3.404153919065935*^9, 3.404153946428335*^9}, 3.404154287584735*^9, 
   3.4041548076419353`*^9, 3.4041975540730815`*^9, 3.404198112193172*^9, 
   3.40436061920415*^9, {3.40436067556695*^9, 3.40436070166575*^9}, {
   3.40436076938535*^9, 3.40436079621735*^9}, 3.4043608322845497`*^9, {
   3.4043708549935436`*^9, 3.404370862543944*^9}, {3.404375357399744*^9, 
   3.404375360254544*^9}, {3.4043761487941437`*^9, 3.4043761526473436`*^9}, {
   3.4043762925013437`*^9, 3.4043762995213437`*^9}, 3.404376330284544*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"237.30900000000017`", ",", 
   GraphicsBox[{InsetBox[
      GraphicsBox[{{}, {}, 
        {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwV0Xs0lHsXB3BRiSb0ulRSLoV4EYlU6qtG51QSipyElEvl1unQ8HZRdNGF
1VxJRDVDSi4ZzExC0uWZ5ykp76HCUU3Ukrc56aZI7+/8sdden7X22nuvvS23
794QramhoZFK4p9sH7yld1FlNpaaDPvpdTKYOkjlf36WjRkHA80DHzFweCfN
bKg4g9G3URV+hxkkRe5xN204g0sS1jPNNAY3upz6OMwZtIUaPZftZ7DmwZWV
zm/PoOk2e6ttCgNpx6O0xwZcqKOsOGaJDNpkdxd7r+UiV7P3z/BQBrr7rlfa
NXAxThwU5r2EgZO7gfZvd7jIUI9uXODBIGAoMfw4w8VJj/GWVu4MzsY6TFE9
48Lx1oLl2gsY2G65HFvwhYu7xfrH3tgx8PY8b63vzIMnTXlrmDJIGzuR/+kS
D6tSPbL4IzQqDum3NF7l4YW9KEnwjUaPRs7AiWoeUl13H835SsNTS7x41m0e
Cn/JtxJ/pPFNu6Fz1UsempPb/Tve0Uie+sEw15yPmL9bkiXdNHbN3Zy1uIAP
h+ji571NNM4W90q1JHyEdl77YN1Ig7KJ6XpYxseJIpcFiTdp2Ngl2W+v56PT
RTp/goLGa8ds6tRzPnzDc8x8q2mEL2oe3z1dgNyO7gbvYhqBa+0OpokEKPWO
nd2eRcMj3YrbUiDAY/BcU07TMJPPFE+SCNDS+MB+1ikafdZ6Sn61AFqr05sS
M2lwxn00uvxIgPeZL9LnZZD95DevPdIRIrkhJfZLCo0D6tomo6lCOH7uvyDn
0IiwqXyyeboQVVWxigN7adgJLw6rbITQl1ZydZNo3Nh93HuYLcTSvvlPPRNp
FJYcCl7mI4TnUra5XgKNjJ7U2IwNQkw0jlv9Mo6Gj08cl7VNiC8bh72yd9Fw
zogSB+wUYqYizCBmJw0jRVhdzm4hdC51NnvtoDGs3qTs4gjRrBcTNCuGRreN
f7dFmhCBxdZrVkTTuBW2Rh19TIjQkrv99VE0JMKVmmVZZP8hRZk7cYKm2zy3
fOLYojKHSBpjPTOS18iFEHeFHTHdRsNCpJr8x5AQO+6U8n+E0ojWSlnaEiPC
+nKO88tAGkE/c2dLEkX4e9rwcBDxqhH5uGMcEWq9rqrpjTSsP36//8txEUoe
XNhRu4Hc+1VaIF0swrzWjvQsf9Lv9vGEx69FuJISs5W9jjg9p6h3ew6Kooya
2tnEP2u1RsNzsaXkqsEhVxouExQyzfV5+P7R9VamMflv6q7Vd2bm403WiNuU
H0o4Ok1W/cfgPNZG7yrEayXCAkJCBlSF+NlvHJ/WqoRDU124UfAFiGVLIuQ3
lLD86iEq97sIzheVl3uJEjV9U5dIFl2Cfu3XUJZQica9KpWRqxjyF4czt6Qr
UaGbe2TQToILlpcHb+1WwnPTRZ6lQTGe1HirzSKUWMGWSNp0SuBx38uU8VNC
1f/DumeoBN97XnEMVyjx49/+1yLVl3Fw3XttmQvx3qPzAt6UIk5wzs1ijhLn
OPqGBa1XsLI5dJnamMybLtDcpryKJOXlyBFtJSL2JEQckZbhD+8jk9eNUBhu
tath5V3D69Skh65qCtqtf7EM+OVYwJa6HHhFQXpkoP33fRXYOxLtMNJBofP5
+yIfTiVMc9ktN2kKv+cPVN1zr8Jy1vmTQ40UWubqrDG5WoV3PJMe5xoKT8bE
Kivb63A0Y+qUpRTmL4x1+yv/Olq37pFFFlL4GWep6atXjbu1C50ShBROfwp8
nHqqGu+e1NT1nqQQ81QavHGsGkk7fdirDlMYZZ15MbBfimMbXTrMORReFogs
XD5IsfnKnrG+eAqL52d32UfVgGrfMdkkioLvv8blvXxRA3dEJsWHUKjyvzDl
16BasPfzCzMCKLT21h/d1V4LQZvFZt3VFLbuoTjwq8O6kIr16uUUEK5hced2
HeqqFkoK3Cl05dcwE7xk6A5YP/eeI4W7C4VOX2pk0Bjxaa62pmDVFsU6ZyuH
jZ+54dAsCktvXh/8LpbjdFvhG5kxBbGW/VHd6QoYHQ5i3PUo3MufPbtTpECZ
YH2190QK1d8GbfuJmcXWt9nEhcH1Lp+JI3JHH68k5hj+tsowR4F3qeUfvIit
T/Pi/Ygz/pzmsoz46L7x9feJaz7pVbkRr9w8ECzPVcCeOV5hQ+wkk2+7T/x1
a3KjNbGpcWZcB/GSa9tb5xIPtc059InYIm7Feyvii6vDSpzPKpCQoe1kTqzh
0faplJg1ra58GvGgqHBMRuwyp7LBhPjpx/hJ94np/tKHxsRVlTpmfcThwsL/
GRJH2LLZlnkKTDzJdzQgXndsqq8zcYc/b5k+sYeqdxOIZ7ZxffWIDYoOxIb9
U/+Zl8AiHh1dmxxPXHZOcHAy8duQGWn7ie99FWXrEv9X/ibzFPEmVt55HeIm
kzpeHnHo04LyScT/B8VJoqg=
          "]]}, 
        {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJwVzns01HkABXA7ONaEhMi2KRWaHkopVrtupY48x6OIIhSVbOkU29JKjJIe
skySShjSw2PMGDNZ24P4facWm60sB9lZpWkOu+hlmfY7f9xzz+eve62jDgZE
s7S0tHxpNB2wRH5yIImHS4vc14xbyyE/N+4bepqH5KzJ2+ep1/9jZdGZz8P9
brY3h3pF3eEbzWIeImsn2DvnyWGEOcyNYR6kDiVpT6zkeBwQr38gKgNRRkPe
1bPl2JhkfnbC4yQUSw1UuTPlWE2ickwtM3Fw71XP5/pyvFf1Vi/TPYs8nbjh
A6MES9+KTjVWZaOxausHZR9BijqzcLwkBzcfuLIf/EawxZPzUwo/Fxt1OPss
GgmitX9Y2xTDh97Bt5MLq6k/12lPhufD9tByV14xgYOurJ7lWwDJ3tPVEXwC
56P7NjfPLsRfY+nqx1kEy+ynKX40vopnV7iz5qQShPmHhioV1yA8H7utPZH+
uScJNwu+jj2uulYrDxBYf3DmV3KLkbVI4BETTSAenOEicCrB9gqnAUEYwa8J
CoXZqlJYLi3k39pKUMXOT1dxBOi/WC5x9SX4Nqg4x9q4DJeDXJ3K3AnWuwkE
HfrlsHizNqx9HYHi1ZRN72g5yvgOLhIXgqklfnd2jdyACyuNE+lIncBb5P+6
AplM47I4e4LLidNNr7TdRFGKracZh+7NymVFkluIj/BPTV1AEHHo+4h00W0s
6ctwOmZF8LGNIzYouIOjmfO7GiwJ9Nr6DIx/rsTTNQkV980IROnKzvikKnCn
mmzXGxO86B4u8kqshk32GUHWNIL4QmVNy5oaZAQ+1zXRI2haqO9hfot603Gu
njbBU3WpYr6dEELRSEOLmsFyx9jVfYVCjLPU3W8nGHzeb83yMaoF+zC387sP
DM6Mb/n9aFYt5vqlt4eMMYjpEgUHqmthuOveWNsIg0mD7JfKZBGmyv4eNlQx
GLjCn+fwrwgrOUKToiEG3yw/17N4txgXHibd9Rtk4GPyRcHASzG0BMHd/QMM
avyuG7pvrYN2b2ragz4Gbf0NvH2dddDa0ZJ3pIfBzkNMIrgSDO1RGHp2MUC4
1rzmhxLk1cnLo58x6CkUP9ZdV4/bXiWnA54yeOSYZ/9eXI+mQH3bE+0M5nfs
NrhsJ4WO58wQ8oTB2l+EqolSKcLuJ/cOEAal2ot57FkydOTmZ69uZdBSaGX1
gi+D0Y64hm3NDGo/qexeUSvj/XZrfC24weEdtUOJo6HGiabbNplelOFTyFR4
MLXNmZw4LnW01QVWEDUvSaehldpk4q5HIPWGEGWwNF+GOR9tunyo7eulka3U
I5cMT2j81cxT+59Tmwe942g82rHg+Dh1hM2jZG/q4s1h5SsuydBuETPXi1rL
uWO8gprnVRmzmVrFv6aupw4QXpyucddY3Jet1LGrUqXu1DXV+l8PUiecDWRr
HGHn5mZdIMOrnP8qN1F7Z8zwWUE9+udgkMbOiv4gUG9w7fi8kdq46FhsGHXV
9jJ/jScnPY/EUTNmFybcqIdCLVOSqRcqk0o1/kP6+lQW9cOeaG+N75lLcgqo
i9/4vdtA/T/oLGuR
          "]]}, 
        {Hue[0.14213595499957954`, 0.6, 0.6], LineBox[CompressedData["
1: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
Yjp0S6P3YQ6uLXX1u0XsItrY1u3OQYdQylInYr3W+W+W+XKQqbx5civxVOSu
99YXOfhzsyBHizhG8vmXyhAOdtpdnh2bpnD0tcT3kQgO9HP+qntLvDJu34Q2
m4P419821BJPHIibOZbMwfGgXOd04nr5Tv64dA58Tm7ZeJM4oktRpDWH9K+3
rcGD2CnlmJhQEQffY+2n7Ik1ne8tM63kQOjSP3LixKOq/Qpn6zjY7lFtQk2R
+fVqqWVzOWBUmgkHEYfdd9fuec7Bivq5oI3EajrfDW27Oci57BuSPUlhr/60
zappDj4sLXnF+EWheIvE1V7DBPxU3C5oMEHhKt8+hrxpAvqq7073/aBgXc8O
tzdLAJYkZscT91kocmrtE3BjY5XB3DiFZTZahYmeCdDXW/GDO0bB79Dmvr0P
iL9Iv7IdoWDs77azUSERSp/1xdYMURCfa1eKW5GIT2dE57/6SmHgxpYfbqsS
MTcyUu1PHBcreU9sUyKc+96erRsk88urnnZySsThF8sW232hUNIvkT8ST7xg
XrLLJwpr91YuU5ZOwnlejbfLRwq6eot6L4ono/5hRsdEO4VK94H0Fplk2NVb
5cYT/5HZdGqZcjKQ89R3I7GzytXBR7rJsB170Xn5JYXYpT9GPlsmI2rVlJbg
CwqTE918DjeScboMEGul0FRbqLR2KhlbJGPvr+BS2DMT+fHKvBSYOwzzN7VQ
6Db2uPdsQQqkjDJPnSL+VaCl6SaTguVNHLOsZgqr0pN07xqmQPc75+SaJgrR
oQzTJV4pUPgRzNtcT+GIvZPTYG8Kft4zPnyziswr5dNeya8pyJCJ/NuUuHHQ
18Z0NAXHxcKKhh9TWB18a2sE3x2knNdxdSCeKa3SXLv8DhKTDF6rV1JIUlQe
u+hwB29sr79tKqPQ+bn3lgh1B9oaojMyRaS+tvSolONdZB0sHP6VRUH1pzHr
oW0qxjflO6jEkf/RL7ExfcM9XLGr7P2TQf7b+d5eqXVpUJhyCe48RyFvYdz1
IZ10KB6Jbd18koKpQ2q0qvh9CBV7/JbeT2GbWXp6m0gGXjeoJ8y3oND76bfG
+9EMiOdcr7toROH3KrvcE8OZsM3va9ykRXw+WNv+8wPISqdFULIUEvzEJJNa
szDWHZRbu4icJxvLf5zKRp3smA3fLBfOPh7O14ty4FinWnN9hItfrTrFopxc
+Lb4xjL7uRBu7RYVj3kIrejJC+MdXBRdH2z3DsjDnptfdc494+JN57c7Vn75
8H+w/b1lHRfeiYOPmo0eoaB23YWMEi4a1EV2SWc/goW6yBeRHC5ezqb1qmkV
YEDZehd1h4s1hu7ruxMLIDqiZhDE4mLutCq/zZJC8k7HZ1NvcXFrfN8L/7BC
ZG84aKZyjYtTHUWOe2cL4fvELfvaBS5mRCM/Dl4qglqe2FUzDy56klgqBiNF
SMxkLuk6wYXJmtvvVp4shs56RdEWJy5sls7j9HwsxqMTD/h17Ll4ZHd38Y79
JbAy1447vJOL1g+Pg93aS5DhsdJwZgsXx3y4frAtxe4zHa//W88FjvKpNNaX
4lh4/kSCLhfvEot5QlvLsK8gJqhYnYsmQ6beRHEZOgODRK8pcqHWdlI0Qasc
axd8i46Q4mJTVcHQVFo5Lp1usREW5SJNYGXwQtkK1L/q3qIpyEVzopLSG1YF
NK5n7s2fbkHh5JDWJ+KZlFL7POIUx8cGP4gDpppsHxL7SR6wkGRXwNW73yqH
WONW9Blb4g5HLfNM4uAAwcctxNJSZYZ3iLcfHHQsj6uAmcl86UhivbLy4y3E
ETuWS0UQyy8LOf0P8QGW4dLbxKNtK66ME7sOn1hyizh155EM/fgKbE5umh9C
zGfcNv6AuL2b+TOQeIiVMltGfKkv/8dl4o6xMwtaiCN0eGN/Ez/KF1HsJx71
4f8eQOysZWamyqlA2PTZAT9i6xsSNvrE7jNRn84TG/d+cABxjmle3zli8Tt/
ux8htr705aMv8cyM5bkzxFkXhT/4EA84yQVeIj5RpvHem/hV+eeQMGJ/Q/N3
XsS10qXRHOLP313eehL/DyiQAHY=
          "]]}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->True,
       AxesOrigin->{0.02, 0.19},
       DisplayFunction:>$DisplayFunction,
       FormatType->TraditionalForm,
       PlotLabel->FormBox["\"Implied BS vol\"", TraditionalForm],
       PlotRange->{{0.01, 0.1}, {0.1873606263596976, 0.21750048546543774`}},
       PlotRangeClipping->True,
       PlotRangePadding->{
         Scaled[0.02], 
         Scaled[0.02]}], {-1, -0.6180339887498948}, {
      Left, Bottom}, {2, 1.2360679774997896`}], {
      {GrayLevel[0], 
       RectangleBox[{1.05, -0.05}, \
{1.7804347826086957`, 0.7500000000000001}]}, 
      {GrayLevel[1], EdgeForm[{GrayLevel[0], Thickness[0.001]}], 
       RectangleBox[{1, 0}, {1.7304347826086959`, 0.8000000000000002}], 
       InsetBox[
        GraphicsBox[{{{InsetBox[
             GraphicsBox[
              {Hue[0.1421359549995791, 0.6, 0.6], 
               LineBox[{{0, 0}, {1, 0}}]}], {0.08, 0.08}, {
             Left, Bottom}, {1, 1}], 
            InsetBox["\<\"Bihestonlimit\"\>", {1.21, 0.58}, {-1, 0}, 
             Automatic, {1, 0}]}, {InsetBox[
             GraphicsBox[
              {Hue[0.9060679774997897, 0.6, 0.6], 
               LineBox[{{0, 0}, {1, 0}}]}], {0.08, 1.24}, {
             Left, Bottom}, {1, 1}], 
            InsetBox["\<\"Heston\"\>", {1.21, 1.74}, {-1, 0}, Automatic, {1, 
             0}]}, {InsetBox[
             GraphicsBox[
              {Hue[0.67, 0.6, 0.6], 
               LineBox[{{0, 0}, {1, 0}}]}], {0.08, 2.4}, {
             Left, Bottom}, {1, 1}], 
            InsetBox["\<\"BiHestonUnderlying1\"\>", {1.21, 2.9}, {-1, 0}, 
             Automatic, {1, 0}]}}, {}},
         AspectRatio->1.0952380952380953`,
         FormatType->TraditionalForm,
         PlotRange->{{-0.1, 3.26}, {-0.1, 3.5799999999999996`}}], {1, 0}, {
        Left, Bottom}, {0.7304347826086958, 0.8000000000000002}]}}},
    AspectRatio->Automatic,
    Background->None,
    ColorOutput->Automatic,
    ImageSize->{833., Automatic},
    PlotRange->All]}], "}"}]], "Output",
 CellChangeTimes->{3.4044117227821474`*^9, 3.4044127833549476`*^9, 
  3.4044140700585475`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"InterpolatingFunction", "::", "\"\<dmval\>\""}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Timing", "[", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"S1", "=", "0.05"}], ",", 
      RowBox[{"S2", "=", "0.04"}], ",", 
      RowBox[{"M1", "=", 
       RowBox[{"-", "0.05"}]}], ",", 
      RowBox[{"M2", "=", 
       RowBox[{"-", "0.06"}]}], ",", 
      RowBox[{"\[Theta]1", "=", "0.03"}], ",", 
      RowBox[{"\[Theta]2", "=", "0.041"}], ",", 
      RowBox[{"\[Rho]s", "=", "0.6"}], ",", 
      RowBox[{"\[Rho]sinf", "=", "0.8"}], ",", 
      RowBox[{"\[Rho]m1", "=", "0."}], ",", 
      RowBox[{"\[Rho]m2", "=", "0."}], ",", 
      RowBox[{"\[Rho]1", "=", 
       RowBox[{"-", "0.5"}]}], ",", 
      RowBox[{"\[Rho]2", "=", 
       RowBox[{"-", "0.8"}]}], ",", " ", 
      RowBox[{"\[CapitalSigma]1", "=", "0.04"}], ",", 
      RowBox[{"\[CapitalSigma]2", "=", "0.05"}], ",", 
      RowBox[{"\[Beta]", "=", "5"}], ",", 
      RowBox[{"\[Tau]", "=", "5"}], ",", 
      RowBox[{"\[Lambda]1", "=", "1.1"}], ",", 
      RowBox[{"\[Lambda]2", "=", "1.2"}], ",", "M", ",", "\[CapitalSigma]inf",
       ",", "\[CapitalSigma]", ",", "Q", ",", "\[Beta]m", ",", "S", ",", 
      "\[Rho]", ",", 
      RowBox[{"printflag", "=", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "4", ",", "6"}], "}"}]}], ",", 
      RowBox[{"Lcoefs", "=", 
       RowBox[{"LegendreCoeffs", "[", "40", "]"}]}], ",", 
      "\[IndentingNewLine]", "smile1", ",", "smile2", ",", "smile3", ",", 
      "inter1", ",", "inter2", ",", "inter3", ",", "smileLN", ",", 
      "interLN"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"M", "=", 
      RowBox[{"(", GridBox[{
         {"M1", 
          RowBox[{"\[Rho]m1", 
           SqrtBox[
            RowBox[{"M1", " ", "M2"}]]}]},
         {
          RowBox[{"\[Rho]m2", 
           SqrtBox[
            RowBox[{"M1", " ", "M2"}]]}], "M2"}
        }], ")"}]}], ";", 
     RowBox[{"\[CapitalSigma]inf", "=", 
      RowBox[{"(", GridBox[{
         {"\[Theta]1", 
          RowBox[{
           SqrtBox[
            RowBox[{"\[Theta]1", " ", "\[Theta]2"}]], " ", "\[Rho]sinf"}]},
         {
          RowBox[{
           SqrtBox[
            RowBox[{"\[Theta]1", " ", "\[Theta]2"}]], " ", "\[Rho]sinf"}], 
          "\[Theta]2"}
        }], ")"}]}], ";", 
     RowBox[{"\[CapitalSigma]", "=", 
      RowBox[{"(", GridBox[{
         {"\[CapitalSigma]1", 
          RowBox[{
           SqrtBox[
            RowBox[{"\[CapitalSigma]1", " ", "\[CapitalSigma]2"}]], " ", 
           "\[Rho]s"}]},
         {
          RowBox[{
           SqrtBox[
            RowBox[{"\[CapitalSigma]1", " ", "\[CapitalSigma]2"}]], " ", 
           "\[Rho]s"}], "\[CapitalSigma]2"}
        }], ")"}]}], ";", 
     RowBox[{"S", "=", 
      RowBox[{"{", 
       RowBox[{"S1", ",", "S2"}], "}"}]}], ";", 
     RowBox[{"\[Rho]", "=", 
      RowBox[{"{", 
       RowBox[{"\[Rho]1", ",", "\[Rho]2"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"strikes", "=", 
      RowBox[{"{", "0.04", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"smile1", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"strikes", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"ImpVolBS", "[", 
           RowBox[{"S1", ",", 
            RowBox[{"strikes", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "\[Tau]", ",", 
            RowBox[{"BiHestonUnderlying1Vanilla", "[", 
             RowBox[{"S", ",", 
              RowBox[{"strikes", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", "\[Tau]", ",", 
              "\[CapitalSigma]", ",", "M", ",", "\[CapitalSigma]inf", ",", 
              "\[Beta]", ",", "\[Rho]", ",", "printflag"}], "]"}]}], "]"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "strikes", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"smile3", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"strikes", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "+", "0.0001"}], ",", 
          RowBox[{"ImpVolBS", "[", 
           RowBox[{"S1", ",", 
            RowBox[{
             RowBox[{"strikes", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "+", "0.0001"}], ",", "\[Tau]", 
            ",", 
            RowBox[{"BiHestonVanilla", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"S1", ",", "0.0001"}], "}"}], ",", 
              RowBox[{"strikes", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", "\[Tau]", ",", 
              "\[CapitalSigma]", ",", "M", ",", "\[CapitalSigma]inf", ",", 
              "\[Beta]", ",", "\[Rho]", ",", "printflag"}], "]"}]}], "]"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "strikes", "]"}]}], "}"}]}], "]"}]}], ";", 
     RowBox[{"{", 
      RowBox[{"smile1", ",", "smile3"}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.400420962348207*^9, 3.4004210687721252`*^9}, {
   3.4004211951964273`*^9, 3.400421290026373*^9}, {3.4004217619885597`*^9, 
   3.400421783613975*^9}, {3.4009064818853397`*^9, 3.400906510698393*^9}, {
   3.4020336908625154`*^9, 3.4020337021752324`*^9}, {3.402033860818903*^9, 
   3.4020338717566133`*^9}, {3.4020340123218117`*^9, 3.402034022884515*^9}, {
   3.402143532804983*^9, 3.4021435714776*^9}, {3.4021502545434127`*^9, 
   3.402150277340726*^9}, {3.402150318060257*^9, 3.4021503190602765`*^9}, {
   3.4021508739146795`*^9, 3.402150926103182*^9}, {3.402205941048216*^9, 
   3.402206032299968*^9}, {3.402222386473337*^9, 3.4022223919109416`*^9}, {
   3.4022282113507977`*^9, 3.4022282342887383`*^9}, {3.4034169071994333`*^9, 
   3.4034171368132167`*^9}, {3.403417190251743*^9, 3.4034171928924184`*^9}, {
   3.4038720435454235`*^9, 3.4038720779367085`*^9}, {3.403872150328723*^9, 
   3.4038722699716454`*^9}, {3.4038728308886647`*^9, 3.403872841748248*^9}, {
   3.403872982829082*^9, 3.4038729829697094`*^9}, {3.403873031595643*^9, 
   3.403873031720646*^9}, {3.4038734196343436`*^9, 3.4038734198374724`*^9}, {
   3.4038753783750753`*^9, 3.403875380922*^9}, {3.40387624346981*^9, 
   3.403876243938569*^9}, 3.4038769829683833`*^9, {3.403877122346059*^9, 
   3.4038771227679424`*^9}, {3.4038771625499563`*^9, 3.403877163065591*^9}, {
   3.403877324631193*^9, 3.4038773551474037`*^9}, {3.4038773936168923`*^9, 
   3.40387739764822*^9}, {3.4038780215976996`*^9, 3.40387809141154*^9}, 
   3.4038782021792917`*^9, 3.4038782387893696`*^9, {3.4038791308846226`*^9, 
   3.403879131431508*^9}, {3.4038791725729227`*^9, 3.4038791727135506`*^9}, 
   3.403880915450135*^9, {3.403881572775256*^9, 3.4038816079634314`*^9}, {
   3.4038817484661293`*^9, 3.403881834889663*^9}, {3.403881964439026*^9, 
   3.4038819903613987`*^9}, {3.4038820541126223`*^9, 
   3.4038820551126413`*^9}, {3.403882087738268*^9, 3.4038822508976507`*^9}, {
   3.40388231024254*^9, 3.4038823888221736`*^9}, {3.4038826393894844`*^9, 
   3.403882698968753*^9}, 3.4038827641887555`*^9, {3.4038828400964627`*^9, 
   3.4038828570967894`*^9}, {3.4039407380848007`*^9, 3.40394075161631*^9}, {
   3.4039469958143215`*^9, 3.4039472324751153`*^9}, 3.4039472679757967`*^9, {
   3.403947357758771*^9, 3.4039473853218*^9}, {3.403947507839777*^9, 
   3.4039475596532717`*^9}, {3.4039476866088343`*^9, 3.403947691202673*^9}, {
   3.4039482225566244`*^9, 3.4039482791358356`*^9}, {3.403949588801606*^9, 
   3.403949589160988*^9}, {3.403949749835948*^9, 3.403949785352255*^9}, {
   3.4039500598262744`*^9, 3.4039500646232414`*^9}, {3.403950358238254*^9, 
   3.4039503617383213`*^9}, {3.403950421067585*^9, 3.4039504374897757`*^9}, {
   3.4039506060398865`*^9, 3.4039506065086455`*^9}, 3.4039508020436497`*^9, {
   3.4039508397318735`*^9, 3.403950861747921*^9}, {3.403950893982915*^9, 
   3.4039508942172947`*^9}, {3.403951078517708*^9, 3.403951078986467*^9}, {
   3.403952006348022*^9, 3.4039520495051003`*^9}, {3.4039520956153607`*^9, 
   3.4039521059593096`*^9}, {3.4039522097581778`*^9, 3.4039522109457*^9}, {
   3.403952602000083*^9, 3.403952625531785*^9}, {3.4039527686751585`*^9, 
   3.40395278725364*^9}, {3.403962473002103*^9, 3.403962542425311*^9}, {
   3.403962979621205*^9, 3.4039629824650097`*^9}, {3.403963031247196*^9, 
   3.4039631014360437`*^9}, {3.403963208469349*^9, 3.4039633677224064`*^9}, {
   3.4039634210203047`*^9, 3.403963424332868*^9}, {3.4039635263504515`*^9, 
   3.403963538085052*^9}, {3.4039635832577944`*^9, 3.4039635837265534`*^9}, 
   3.403965193523086*^9, {3.403986059855546*^9, 3.403986060276746*^9}, {
   3.4040512059748607`*^9, 3.4040512353028603`*^9}, {3.4040512855660605`*^9, 
   3.4040512994812603`*^9}, {3.4040513403064604`*^9, 3.404051376716861*^9}, {
   3.4040514232360606`*^9, 3.4040514282904606`*^9}, {3.4040658213347464`*^9, 
   3.4040658225647464`*^9}, 3.4040659258917465`*^9, {3.404065992996746*^9, 
   3.4040660517637463`*^9}, {3.4040661798527465`*^9, 
   3.4040662006767464`*^9}, {3.4040662460997467`*^9, 
   3.4040663483277464`*^9}, {3.4040664508527465`*^9, 3.404066472515746*^9}, {
   3.4040667138297462`*^9, 3.4040667237417464`*^9}, 3.404066760468746*^9, {
   3.4040670381497464`*^9, 3.4040670580127463`*^9}, {3.4040673011627464`*^9, 
   3.4040673016907463`*^9}, {3.4040673572537465`*^9, 
   3.4040673732357464`*^9}, {3.4040677498897467`*^9, 
   3.4040678043237467`*^9}, {3.404068030475746*^9, 3.4040680348357463`*^9}, {
   3.4040682808217463`*^9, 3.4040683272817464`*^9}, {3.4040685723407464`*^9, 
   3.4040686117087464`*^9}, {3.404068953581746*^9, 3.4040689574937468`*^9}, {
   3.404129782168208*^9, 3.4041297967778635`*^9}, {3.404132651473297*^9, 
   3.4041327303654375`*^9}, {3.4041328301798534`*^9, 
   3.4041328345549374`*^9}, {3.4041332141559753`*^9, 3.404133237062666*^9}, {
   3.404133702462226*^9, 3.404133722978245*^9}, {3.4041338334959917`*^9, 
   3.4041338532307453`*^9}, {3.404149656432135*^9, 3.404149672219335*^9}, {
   3.404153919065935*^9, 3.404153946428335*^9}, 3.404154287584735*^9, 
   3.4041548076419353`*^9, 3.4041975540730815`*^9, 3.404198112193172*^9, 
   3.40436061920415*^9, {3.40436067556695*^9, 3.40436070166575*^9}, {
   3.40436076938535*^9, 3.40436079621735*^9}, 3.4043608322845497`*^9, {
   3.4043708549935436`*^9, 3.404370862543944*^9}, {3.404375357399744*^9, 
   3.404375360254544*^9}, {3.4043761487941437`*^9, 3.4043761526473436`*^9}, {
   3.4043762925013437`*^9, 3.4043762995213437`*^9}, 3.404376330284544*^9, {
   3.4044092213451476`*^9, 3.4044092776767473`*^9}, {3.404409340950348*^9, 
   3.4044093469251475`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"72.08800000000008`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
       "0.04`", ",", 
        "0.198551661811462329983635615722543259966043088763`30."}], "}"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
       "0.040100000000000004`", ",", 
        "0.19818254000380127004068027827289246425654369917`30."}], "}"}], 
      "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.4044114066695476`*^9}]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->Automatic,
WindowSize->{1272, 740},
WindowMargins->{{7, Automatic}, {25, Automatic}},
ShowSelection->True,
FrontEndVersion->"7.0 for Mac OS X x86 (32-bit) (November 11, 2008)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[545, 20, 214, 5, 27, "Input",
 InitializationCell->True],
Cell[762, 27, 266, 6, 27, "Input",
 InitializationCell->True],
Cell[1031, 35, 289, 6, 27, "Input",
 InitializationCell->True],
Cell[1323, 43, 104, 2, 27, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[1452, 49, 397, 12, 49, "Subtitle"],
Cell[CellGroupData[{
Cell[1874, 65, 4587, 107, 146, "Input"],
Cell[CellGroupData[{
Cell[6486, 176, 4921, 127, 46, "Print"],
Cell[11410, 305, 1098, 23, 20, "Print"],
Cell[12511, 330, 94086, 1557, 122, "Print"],
Cell[106600, 1889, 1285, 25, 227, "Print"]
}, Open  ]],
Cell[107900, 1917, 375, 7, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[108312, 1929, 6026, 142, 210, "Input"],
Cell[CellGroupData[{
Cell[114363, 2075, 4650, 124, 43, "Print"],
Cell[119016, 2201, 926, 21, 23, "Print"],
Cell[119945, 2224, 96734, 1601, 121, "Print"],
Cell[216682, 3827, 1151, 25, 245, "Print"]
}, Open  ]],
Cell[217848, 3855, 254, 5, 30, "Output"]
}, Open  ]],
Cell[218117, 3863, 257, 5, 31, "Input"],
Cell[218377, 3870, 2855, 64, 179, "Input",
 InitializationCell->True],
Cell[221235, 3936, 252, 5, 31, "Input"],
Cell[221490, 3943, 3045, 68, 199, "Input",
 InitializationCell->True],
Cell[224538, 4013, 3350, 58, 92, "Input",
 InitializationCell->True],
Cell[227891, 4073, 3801, 67, 92, "Input",
 InitializationCell->True],
Cell[231695, 4142, 3408, 59, 92, "Input",
 InitializationCell->True],
Cell[235106, 4203, 3831, 67, 92, "Input",
 InitializationCell->True],
Cell[238940, 4272, 14017, 264, 471, "Input",
 InitializationCell->True],
Cell[252960, 4538, 13773, 259, 451, "Input",
 InitializationCell->True],
Cell[266736, 4799, 17881, 373, 664, "Input",
 InitializationCell->True],
Cell[284620, 5174, 205, 4, 29, "Text"],
Cell[284828, 5180, 18083, 375, 664, "Input",
 InitializationCell->True],
Cell[302914, 5557, 14829, 327, 328, "Input",
 InitializationCell->True],
Cell[317746, 5886, 493, 13, 29, "Text"],
Cell[318242, 5901, 17499, 394, 401, "Input",
 InitializationCell->True],
Cell[335744, 6297, 218, 4, 29, "Text"],
Cell[335965, 6303, 9529, 255, 328, "Input",
 InitializationCell->True],
Cell[345497, 6560, 11916, 318, 401, "Input",
 InitializationCell->True],
Cell[357416, 6880, 3046, 81, 119, "Input",
 InitializationCell->True],
Cell[360465, 6963, 613, 16, 47, "Input",
 InitializationCell->True],
Cell[361081, 6981, 1701, 45, 72, "Input",
 InitializationCell->True],
Cell[362785, 7028, 679, 17, 47, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[363501, 7050, 469, 12, 49, "Subtitle"],
Cell[CellGroupData[{
Cell[363995, 7066, 4598, 106, 155, "Input"],
Cell[CellGroupData[{
Cell[368618, 7176, 4807, 126, 43, "Print"],
Cell[373428, 7304, 976, 22, 23, "Print"],
Cell[374407, 7328, 106266, 1759, 136, "Print"],
Cell[480676, 9089, 1165, 24, 240, "Print"]
}, Open  ]],
Cell[481856, 9116, 393, 8, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[482286, 9129, 6244, 145, 227, "Input"],
Cell[CellGroupData[{
Cell[488555, 9278, 4652, 124, 43, "Print"],
Cell[493210, 9404, 928, 21, 23, "Print"],
Cell[494141, 9427, 103361, 1716, 128, "Print"],
Cell[597505, 11145, 1183, 26, 240, "Print"]
}, Open  ]],
Cell[598703, 11174, 232, 5, 30, "Output"]
}, Open  ]],
Cell[598950, 11182, 257, 5, 31, "Input"],
Cell[599210, 11189, 2934, 65, 199, "Input",
 InitializationCell->True],
Cell[602147, 11256, 252, 5, 31, "Input"],
Cell[602402, 11263, 3153, 70, 199, "Input",
 InitializationCell->True],
Cell[605558, 11335, 3450, 59, 92, "Input",
 InitializationCell->True],
Cell[609011, 11396, 3508, 60, 92, "Input",
 InitializationCell->True],
Cell[612522, 11458, 13076, 252, 491, "Input",
 InitializationCell->True],
Cell[625601, 11712, 13062, 251, 471, "Input",
 InitializationCell->True],
Cell[638666, 11965, 9082, 183, 301, "Input",
 InitializationCell->True],
Cell[647751, 12150, 9144, 184, 301, "Input",
 InitializationCell->True],
Cell[656898, 12336, 579, 15, 51, "Input",
 InitializationCell->True],
Cell[657480, 12353, 570, 15, 51, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[658087, 12373, 445, 11, 49, "Subtitle"],
Cell[CellGroupData[{
Cell[658557, 12388, 4498, 105, 155, "Input"],
Cell[CellGroupData[{
Cell[663080, 12497, 4702, 124, 43, "Print"],
Cell[667785, 12623, 877, 20, 23, "Print"],
Cell[668665, 12645, 60599, 1009, 140, "Print"],
Cell[729267, 13656, 1138, 25, 237, "Print"]
}, Open  ]],
Cell[730420, 13684, 260, 6, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[730717, 13695, 6296, 146, 227, "Input"],
Cell[CellGroupData[{
Cell[737038, 13845, 4701, 125, 43, "Print"],
Cell[741742, 13972, 977, 22, 23, "Print"],
Cell[742722, 13996, 61306, 1022, 140, "Print"],
Cell[804031, 15020, 1236, 27, 237, "Print"]
}, Open  ]],
Cell[805282, 15050, 282, 6, 30, "Output"]
}, Open  ]],
Cell[805579, 15059, 257, 5, 31, "Input"],
Cell[805839, 15066, 2982, 65, 199, "Input",
 InitializationCell->True],
Cell[808824, 15133, 252, 5, 31, "Input"],
Cell[809079, 15140, 3207, 71, 199, "Input",
 InitializationCell->True],
Cell[812289, 15213, 3470, 59, 92, "Input",
 InitializationCell->True],
Cell[815762, 15274, 3556, 60, 92, "Input",
 InitializationCell->True],
Cell[819321, 15336, 13026, 251, 491, "Input",
 InitializationCell->True],
Cell[832350, 15589, 13201, 254, 491, "Input",
 InitializationCell->True],
Cell[845554, 15845, 9189, 182, 301, "Input",
 InitializationCell->True],
Cell[854746, 16029, 9253, 183, 301, "Input",
 InitializationCell->True],
Cell[864002, 16214, 631, 16, 51, "Input",
 InitializationCell->True],
Cell[864636, 16232, 622, 16, 51, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[865283, 16252, 153, 3, 31, "Input"],
Cell[865439, 16257, 131, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[865607, 16264, 155, 2, 71, "Section"],
Cell[865765, 16268, 1034, 29, 45, "Input",
 InitializationCell->True],
Cell[866802, 16299, 1031, 28, 45, "Input",
 InitializationCell->True],
Cell[867836, 16329, 17665, 397, 1139, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[885538, 16731, 158, 2, 71, "Section"],
Cell[885699, 16735, 162, 3, 31, "Input"],
Cell[885864, 16740, 2267, 54, 92, "Input",
 InitializationCell->True],
Cell[888134, 16796, 2364, 55, 72, "Input",
 InitializationCell->True],
Cell[890501, 16853, 158, 3, 31, "Input"],
Cell[890662, 16858, 2838, 66, 112, "Input",
 InitializationCell->True],
Cell[893503, 16926, 2983, 68, 72, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[896523, 16999, 176, 2, 71, "Section"],
Cell[896702, 17003, 288, 10, 31, "Input",
 InitializationCell->True],
Cell[896993, 17015, 224, 8, 57, "Input",
 InitializationCell->True],
Cell[897220, 17025, 1744, 49, 78, "Input",
 InitializationCell->True],
Cell[898967, 17076, 392, 10, 31, "Input",
 InitializationCell->True],
Cell[899362, 17088, 607, 16, 31, "Input",
 InitializationCell->True],
Cell[899972, 17106, 607, 16, 31, "Input",
 InitializationCell->True],
Cell[900582, 17124, 882, 23, 72, "Input",
 InitializationCell->True],
Cell[901467, 17149, 512, 13, 31, "Input",
 InitializationCell->True],
Cell[901982, 17164, 664, 15, 31, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[902671, 17183, 631, 17, 31, "Input"],
Cell[903305, 17202, 114, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[903456, 17208, 1326, 32, 52, "Input"],
Cell[904785, 17242, 397, 8, 30, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[905231, 17256, 105, 1, 71, "Section"],
Cell[905339, 17259, 4083, 112, 202, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[909447, 17375, 496, 12, 31, "Input"],
Cell[909946, 17389, 690, 13, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[910673, 17407, 132, 2, 31, "Input"],
Cell[910808, 17411, 466, 11, 30, "Output"]
}, Open  ]],
Cell[911289, 17425, 130, 1, 29, "Text"],
Cell[911422, 17428, 892, 23, 72, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[912363, 17457, 183, 3, 65, "Subtitle"],
Cell[CellGroupData[{
Cell[912571, 17464, 10898, 234, 354, "Input"],
Cell[923472, 17700, 12312, 216, 311, "Output"]
}, Open  ]],
Cell[935799, 17919, 89, 1, 52, "Input"],
Cell[CellGroupData[{
Cell[935913, 17924, 10467, 227, 354, "Input"],
Cell[946383, 18153, 13228, 233, 296, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[959648, 18391, 14942, 340, 701, "Input"],
Cell[974593, 18733, 25248, 435, 324, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[999878, 19173, 12983, 271, 421, "Input"],
Cell[1012864, 19446, 11126, 201, 457, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1024027, 19652, 10792, 214, 254, "Input"],
Cell[1034822, 19868, 522, 17, 30, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
