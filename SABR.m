(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Input::Initialization:: *)
Off[FindRoot::"precw",FindRoot::"lstol"]


(* ::Input::Initialization:: *)
Nd[x_]:=N[(Erf[x/Sqrt[2]]+1)/2,40]


(* ::Input::Initialization:: *)
BS1[f_,k_,t_,v_]:=f NormalDis[(Log[f/k]+(v^2 t)/2)/(v Sqrt[t])]-k NormalDis[(Log[f/k]-(v^2 t)/2)/(v Sqrt[t])]


(* ::Input::Initialization:: *)
BS[f_,k_,t_,v_]:= f  Nd[(Log[f/k]+(v^2 t)/2)/(v Sqrt[t])]-k  Nd[(Log[f/k]-(v^2 t)/2)/(v Sqrt[t])]


(* ::Input::Initialization:: *)
PhiVol[m_,u_]:=Exp[m] Nd[m/u+u/2]-Nd[m/u-u/2]


(* ::Input::Initialization:: *)
ImpVolBS[F_,K_,t_,discount_,opt_]:=Module[{o=opt/(K  discount),m=Log[F/K],ss},
ss=FindRoot[PhiVol[m,u]==o,{u,0.2,0.0001,15.},AccuracyGoal->8,WorkingPrecision->30,MaxIterations->200];ss[[1,2]]/Sqrt[t]]


(* ::Input::Initialization:: *)
SABRVol[f_,\[Alpha]_,\[Beta]_,\[Rho]_,\[Nu]_,{method_,zmethod_,zetamethod_,favmethod_},K_,T_]:=
Module[{z,Dzk,zp,x,b1,\[Theta],\[FinalSigma],\[Kappa],result,\[Sigma],a,b,sig,sigN,fav2,\[Gamma]1,\[Gamma]2,\[Xi],call,fav,v},
If[favmethod=="Strike",
fav=K;];
If[favmethod=="Arithmetic",
fav=(f+K)/2;];
If[favmethod=="Geometric",
fav=Sqrt[f K]];
If[favmethod=="Forward",
fav=f];
If[zmethod=="Exact",
 z=(f^(1-\[Beta])-K^(1-\[Beta]))/(\[Alpha] (1-\[Beta]));];
If[zmethod=="Geometric",
 z=1/\[Alpha] (f K)^((1-\[Beta])/2) Log[f/K];];
If[zmethod=="Arithmetic",
 z=1/\[Alpha] (f-K)/fav^\[Beta]];
If[zetamethod=="Exact",
 \[Xi]=\[Nu] (f^(1-\[Beta])-K^(1-\[Beta]))/(\[Alpha] (1-\[Beta]))];
If[zetamethod=="Geometric",
 \[Xi]=\[Nu]/\[Alpha] (fav)^(1-\[Beta]) Log[f/K]];
If[zetamethod=="Arithmetic",
 \[Xi]=\[Nu]/\[Alpha] (f-K)/fav^\[Beta]];
b1=\[Beta] fav^(\[Beta]-1);
x=Log[(-\[Rho]+\[Nu] z+Sqrt[1-2 \[Nu] \[Rho] z+\[Nu]^2 z^2])/(1-\[Rho])]/\[Nu];
\[Theta]=1/4 \[Alpha] b1 \[Nu] \[Rho] z^2+Log[(\[Alpha] (f K)^(\[Beta]/2) z)/(f-K)]+Log[(x (1-2 \[Nu] \[Rho] z+\[Nu]^2 z^2)^(1/4))/z];
\[Kappa]=1/8 ((\[Alpha]^2 (-2+\[Beta]) \[Beta] K^(2 \[Beta]))/K^2+(6 \[Alpha] \[Beta] K^\[Beta] \[Nu] \[Rho])/K+\[Nu]^2 (2-3 \[Rho]^2));
\[Sigma]=\[Alpha] f^(\[Beta]-1);
If[method=="Directe",
sig=Log[f/K]/ z \[Xi]/(\[Nu] x) (1-2 T((\[Theta]-Log[(Log[f/K] Sqrt[f K])/(f-K)])/x^2))^(-1/2);
  result=sig;];
If[method=="NormaleHagan",
sig=\[Alpha]/(f K)^((1-\[Beta])/2 ) z/x  (1+(1/24 \[Alpha]^2 (1-\[Beta])^2 (f K)^(-1+\[Beta])+1/4 \[Alpha] \[Beta] (f K)^(1/2 (-1+\[Beta])) \[Nu] \[Rho]+1/24 \[Nu]^2 (2-3 \[Rho]^2)) T) / (1+1/24 (1-\[Beta])^2 Log[f/K]^2+((1-\[Beta])^4 Log[f/K]^4)/1920);
  result=sig;];
If[method=="MetaNormale",
\[Gamma]1=\[Beta]/fav;\[Gamma]2=(\[Beta](\[Beta]-1))/fav^2;
sig= Log[f/K] /z*\[Xi] /( \[Nu] x)*(1+(((2\[Gamma]2-\[Gamma]1^2+1/fav^2)\[Alpha]^2)/(24fav^(-2\[Beta]))+(\[Rho] \[Alpha] \[Nu] \[Gamma]1 )/(4fav^-\[Beta])+1/24 \[Nu]^2 (2-3 \[Rho]^2))T);

   result=sig;];
If[method=="SuperNormale",

sigN=(f-K) /z*\[Xi]/( \[Nu] x)*(1+((-\[Beta](2-\[Beta])\[Alpha]^2)/(24fav^(2-2\[Beta]))+(\[Rho] \[Alpha] \[Nu] \[Beta])/(4fav^(1-\[Beta]))+1/24 \[Nu]^2 (2-3 \[Rho]^2))T);
sig=sigN/Sqrt[f K] (1+1/24 (1-1/120 Log[f/K]^2)T sigN^2/(f K))/(1+1/24 Log[f/K]^2+1/1920 Log[f/K]^4);
  result=sig];
If[method=="SABR Type",
b=x;
a=Sqrt[-\[Kappa]];
  (*(call=N[Max[f-K,0]+(f-K)/(2Sqrt[2\[Pi]])\[ExponentialE]^\[Theta]/x \!\(
\*SubsuperscriptBox[\(\[Integral]\), \(0\), \(T\)]\(
\*FractionBox[
SuperscriptBox[\(\[ExponentialE]\), \(\(-
\*FractionBox[
SuperscriptBox[\(b\), \(2\)], \(2 v\)]\) - 
\*SuperscriptBox[\(a\), \(2\)]\ v\)], 
SqrtBox[\(v\)]]\[DifferentialD]v\)\) ];*)
result=ImpVolBS[f,K,T,1,call]];
If[method=="SABR Type Analytic",
b=Abs[x];
a=Sqrt[-\[Kappa]];
call=Max[f-K,0]+(f-K)/(2Sqrt[2\[Pi]]) E^\[Theta]/x Re[(1/(2 a) (E^(-Sqrt[2] a b) Sqrt[\[Pi]] (1-E^(2 Sqrt[2] a b)+E^(2 Sqrt[2] a b) Erf[b/(Sqrt[2] Sqrt[T])+a Sqrt[T]]-Erf[(Sqrt[2] b-2 a T)/(2 Sqrt[T])])))];
result=VolImpliciteBS[f,K,T,1,call];];
result];


(* ::Input::Initialization:: *)
SABROption[f_,\[Alpha]_,\[Beta]_,\[Rho]_,\[Nu]_,{method_,zmethod_,zetamethod_,favmethod_},K_,T_]:=
Module[{z,Dzk,zp,x,b1,\[Theta],\[FinalSigma],\[Kappa],result,\[Sigma],a,b,sig,sigN,fav2,\[Gamma]1,\[Gamma]2,\[Xi],call,fav},
If[favmethod=="Strike",
fav=K;];
If[favmethod=="Arithmetic",
fav=(f+K)/2;];
If[favmethod=="Geometric",
fav=Sqrt[f K]];
If[favmethod=="Forward",
fav=f];
If[zmethod=="Exact",
If[\[Beta]!=1, z=(f^(1-\[Beta])-K^(1-\[Beta]))/(\[Alpha] (1-\[Beta]));Dzk=-(K^-\[Beta]/\[Alpha]),z=Log[f]/\[Alpha]-Log[K]/\[Alpha];Dzk=-(1/(K \[Alpha]))]];
If[zmethod=="Geometric",
 z=1/\[Alpha] (f K)^((1-\[Beta])/2) Log[f/K];Dzk=-((f (f K)^(-(1/2)-\[Beta]/2) (2+(-1+\[Beta]) Log[f/K]))/(2 \[Alpha]))];
If[zmethod=="Arithmetic",
 z=1/\[Alpha] (f-K)/fav^\[Beta]];
If[zetamethod=="Exact",
If[\[Beta]!=1, \[Xi]=\[Nu] (f^(1-\[Beta])-K^(1-\[Beta]))/(\[Alpha] (1-\[Beta])), \[Xi]=\[Nu](Log[f]/\[Alpha]-Log[K]/\[Alpha])]];
If[zetamethod=="Geometric",
 \[Xi]=\[Nu]/\[Alpha] (fav)^(1-\[Beta]) Log[f/K]];
If[zetamethod=="Arithmetic",
 \[Xi]=\[Nu]/\[Alpha] (f-K)/fav^\[Beta]];
b1=\[Beta] fav^(\[Beta]-1);
If[z==0,x=1,
x=Log[(-\[Rho]+\[Nu] z+Sqrt[1-2 \[Nu] \[Rho] z+\[Nu]^2 z^2])/(1-\[Rho])]/\[Nu]];
If[z==0 ,\[Theta]=0,
\[Theta]=1/4 \[Alpha] b1 \[Nu] \[Rho] z^2+Log[(\[Alpha] (f K)^(\[Beta]/2) z)/(f-K)]+Log[(x (1-2 \[Nu] \[Rho] z+\[Nu]^2 z^2)^(1/4))/z]];
\[Kappa]=1/8 ((\[Alpha]^2 (-2+\[Beta]) \[Beta] K^(2 \[Beta]))/K^2+(6 \[Alpha] \[Beta] K^\[Beta] \[Nu] \[Rho])/K+\[Nu]^2 (2-3 \[Rho]^2));
\[Sigma]=\[Alpha] f^(\[Beta]-1);
If[method=="Directe",
If[Abs[z]<=10^-4,sig=K^(-1+\[Beta]) \[Alpha] (1-2 T (K^(2 \[Beta]) \[Alpha]^2 (-1+\[Beta])^2+K^2 \[Nu] (6 b1 \[Alpha] \[Rho]+\[Nu] (2-3 \[Rho]^2)))/(24 K^2))^(-1/2),
sig=Log[f/K]/ z \[Xi]/(\[Nu] x) (1-2 T((\[Theta]-Log[(Log[f/K] Sqrt[f K])/(f-K)])/x^2))^(-1/2)];
  result={sig,BS[f,K,T,sig]};];
If[method=="NormaleHagan",

If[z==0,sig=K^(-1+\[Beta]) \[Alpha] (1+(1/24 \[Alpha]^2 (1-\[Beta])^2 (f K)^(-1+\[Beta])+1/4 \[Alpha] \[Beta] (f K)^(1/2 (-1+\[Beta])) \[Nu] \[Rho]+1/24 \[Nu]^2 (2-3 \[Rho]^2)) T) / (1+1/24 (1-\[Beta])^2 Log[f/K]^2+((1-\[Beta])^4 Log[f/K]^4)/1920),
sig=\[Alpha]/(f K)^((1-\[Beta])/2 ) z/x  (1+(1/24 \[Alpha]^2 (1-\[Beta])^2 (f K)^(-1+\[Beta])+1/4 \[Alpha] \[Beta] (f K)^(1/2 (-1+\[Beta])) \[Nu] \[Rho]+1/24 \[Nu]^2 (2-3 \[Rho]^2)) T) / (1+1/24 (1-\[Beta])^2 Log[f/K]^2+((1-\[Beta])^4 Log[f/K]^4)/1920)];
  result={sig,BS[f,K,T,sig]};];
If[method=="MetaNormale",
\[Gamma]1=\[Beta]/fav;\[Gamma]2=(\[Beta](\[Beta]-1))/fav^2;
sig= Log[f/K] /z*\[Xi] /( \[Nu] x)*(1+(((2\[Gamma]2-\[Gamma]1^2+1/fav^2)\[Alpha]^2)/(24fav^(-2\[Beta]))+(\[Rho] \[Alpha] \[Nu] \[Gamma]1 )/(4fav^-\[Beta])+1/24 \[Nu]^2 (2-3 \[Rho]^2))T);

   result={sig,BS[f,K,T,sig]};];
If[method=="SuperNormale",

sigN=(f-K) /z*\[Xi]/( \[Nu] x)*(1+((-\[Beta](2-\[Beta])\[Alpha]^2)/(24fav^(2-2\[Beta]))+(\[Rho] \[Alpha] \[Nu] \[Beta])/(4fav^(1-\[Beta]))+1/24 \[Nu]^2 (2-3 \[Rho]^2))T);
sig=sigN/Sqrt[f K] (1+1/24 (1-1/120 Log[f/K]^2)T sigN^2/(f K))/(1+1/24 Log[f/K]^2+1/1920 Log[f/K]^4);
  result={sig,BS[f,K,T,sig]}];
If[method=="SABR Type Analytic",
b=Abs[x];
a=Sqrt[-\[Kappa]];
If[z==0,call=N[(K^\[Beta] \[Alpha])/(2 Sqrt[2 \[Pi]]) Re[(1/(2 a) (E^(-Sqrt[2] a b) Sqrt[\[Pi]] (1-E^(2 Sqrt[2] a b)+E^(2 Sqrt[2] a b) Erf[b/(Sqrt[2] Sqrt[T])+a Sqrt[T]]-Erf[(Sqrt[2] b-2 a T)/(2 Sqrt[T])])))]],
call=N[Max[f-K,0]+(f-K)/(2Sqrt[2\[Pi]]) E^\[Theta]/x Re[(1/(2 a) (E^(-Sqrt[2] a b) Sqrt[\[Pi]] (1-E^(2 Sqrt[2] a b)+E^(2 Sqrt[2] a b) Erf[b/(Sqrt[2] Sqrt[T])+a Sqrt[T]]-Erf[(Sqrt[2] b-2 a T)/(2 Sqrt[T])])))]]];
result={ImpVolBS[f,K,T,1,call],call};];
If[method=="DirecteSimple",

sig=(Log[f/K] \[Xi])/( x z \[Nu]);
  result={sig,BS[f,K,T,sig]}];

result];


(* ::Input::Initialization:: *)
SABRVol[f_,\[Alpha]_,\[Beta]_,\[Rho]_,\[Nu]_,{method_,zmethod_,zetamethod_,favmethod_,{Tanh,zerocuterKb_,\[Alpha]p_}},K1_,T_]:=
Module[{z,Dzk,zp,x,b1,\[Theta],\[FinalSigma],\[Kappa],result,\[Sigma],a,b,sig,sigN,fav2,\[Gamma]1,\[Gamma]2,\[Xi],call,fav},K=UnitStep[K1-zerocuterKb]K1+(UnitStep[zerocuterKb-K1]) zerocuterKb(1+\[Alpha]p Tanh[(K1-zerocuterKb)/(\[Alpha]p zerocuterKb)]);
SABRVol[f,\[Alpha],\[Beta],\[Rho],\[Nu],{method,zmethod,zetamethod,favmethod},K1,T]]


(* ::Input::Initialization:: *)
SABRVol[f_,\[Alpha]_,\[Beta]_,\[Rho]_,\[Nu]_,{method_,zmethod_,zetamethod_,favmethod_,{Exponential,\[Epsilon]_}},K1_,T_]:=
Module[{z,Dzk,zp,x,b1,\[Theta],\[FinalSigma],\[Kappa],result,\[Sigma],a,b,sig,sigN,fav2,\[Gamma]1,\[Gamma]2,\[Xi],call,fav},
K=K1+\[Epsilon] E^(-K1/\[Epsilon]);
SABRVol[f,\[Alpha],\[Beta],\[Rho],\[Nu],{method,zmethod,zetamethod,favmethod},K1,T]]


(* ::Input::Initialization:: *)
SABROption[f_,\[Alpha]_,\[Beta]_,\[Rho]_,\[Nu]_,{method_,zmethod_,zetamethod_,favmethod_,{Tanh,zerocuterKb_,\[Alpha]p_}},K1_,T_]:=
Module[{z,Dzk,zp,x,b1,\[Theta],\[FinalSigma],\[Kappa],result,\[Sigma],a,b,sig,sigN,fav2,\[Gamma]1,\[Gamma]2,\[Xi],call,fav},K=UnitStep[K1-zerocuterKb]K1+(UnitStep[zerocuterKb-K1]) zerocuterKb(1+\[Alpha]p Tanh[(K1-zerocuterKb)/(\[Alpha]p zerocuterKb)]);
SABROption[f,\[Alpha],\[Beta],\[Rho],\[Nu],{method,zmethod,zetamethod,favmethod},K1,T]]


(* ::Input::Initialization:: *)
SABROption[f_,\[Alpha]_,\[Beta]_,\[Rho]_,\[Nu]_,{method_,zmethod_,zetamethod_,favmethod_,{Exponential,\[Epsilon]_}},K1_,T_]:=
Module[{z,Dzk,zp,x,b1,\[Theta],\[FinalSigma],\[Kappa],result,\[Sigma],a,b,sig,sigN,fav2,\[Gamma]1,\[Gamma]2,\[Xi],call,fav},
K=K1+\[Epsilon] E^(-K1/\[Epsilon]);
SABROption[f,\[Alpha],\[Beta],\[Rho],\[Nu],{method,zmethod,zetamethod,favmethod},K1,T]]


(* ::Input::Initialization:: *)
SABROptionDistribution[f_,\[Alpha]_,\[Beta]_,\[Rho]_,\[Nu]_,Meth_,K_,T_]:=Module[{shift=0.00001},1-(-SABROption[f,\[Alpha],\[Beta],\[Rho],\[Nu],Meth,K+shift,T][[2]]+SABROption[f,\[Alpha],\[Beta],\[Rho],\[Nu],Meth,K-shift,T][[2]])/(2shift)]


(* ::Input::Initialization:: *)
SABROptionQuantile[f_,\[Alpha]_,\[Beta]_,\[Rho]_,\[Nu]_,Meth_,p_,T_]:=Module[{x,ss},ss=FindRoot[SABROptionDistribution[f,\[Alpha],\[Beta],\[Rho],\[Nu],Meth,x,T]==p,{x,f*1.1,10^(-100),1.},AccuracyGoal->8,WorkingPrecision->30,MaxIterations->200];
ss[[1,2]]]


(* ::Input::Initialization:: *)
SABROptionQuantile[f_,\[Alpha]_,\[Beta]_,\[Rho]_,\[Nu]_,Meth_,p_,T_]:=Module[{x,ss},ss=NewtonFindRoot[(SABROptionDistribution[f,\[Alpha],\[Beta],\[Rho],\[Nu],Meth,#,T]-p)&,f*1.1,0.00001,10^(-10),200]]


(* ::Input::Initialization:: *)
BS[f_,k_,t_,v_]:= f  Nd[(Log[f/k]+(v^2 t)/2)/(v Sqrt[t])]-k  Nd[(Log[f/k]-(v^2 t)/2)/(v Sqrt[t])]


(* ::Input::Initialization:: *)
DerKSABROption[method_]:=Block[{SABRfunc,SABRder,SABRder2,zerocuterKb,\[Alpha]p,l,f,\[Alpha],\[Beta],\[Rho],\[Nu],K,T,\[Epsilon]},
l=Length[method];
If[l==4,SABRfunc=BS[f,K,T,SABRVol[f,\[Alpha],\[Beta],\[Rho],\[Nu],method,K,T]];
SABRder=\!\(
\*SubscriptBox[\(\[PartialD]\), \(K\)]SABRfunc\);
ReplacePart[{{f,\[Alpha],\[Beta],\[Rho],\[Nu],K,T},SABRder},Function,0],If[l==5&&method[[5,1]]===Exponential,
\[Epsilon]=method[[5,2]];
SABRfunc=SABRVol[f,\[Alpha],\[Beta],\[Rho],\[Nu],Take[method,4],K+\[Epsilon] E^(-(K/\[Epsilon])),T];
SABRder=\!\(
\*SubscriptBox[\(\[PartialD]\), \({K, 1}\)]\(BS[f, K, T, SABRfunc]\)\);
ReplacePart[{{f,\[Alpha],\[Beta],\[Rho],\[Nu],K,T},SABRder},Function,0],
If[l==5&&method[[5,1]]===Tanh,
zerocuterKb=method[[5,2]];
\[Alpha]p=method[[5,3]];
SABRfunc1=SABRVol[f,\[Alpha],\[Beta],\[Rho],\[Nu],Take[method,4],K1,T];
SABRder1=\!\(
\*SubscriptBox[\(\[PartialD]\), \({K1, 1}\)]\(BS[f, K1, T, SABRfunc1]\)\);
SABRfunc2=SABRVol[f,\[Alpha],\[Beta],\[Rho],\[Nu],Take[method,4],K,T]/. {K-> zerocuterKb (1+\[Alpha]p Tanh[(K1-zerocuterKb)/(\[Alpha]p zerocuterKb)])};
SABRder2=(\!\(
\*SubscriptBox[\(\[PartialD]\), \({K1, 1}\)]\(BS[f, K1, T, SABRfunc2]\)\))/. {K-> zerocuterKb (1+\[Alpha]p Tanh[(K1-zerocuterKb)/(\[Alpha]p zerocuterKb)])};

SABRder=(UnitStep[K1-zerocuterKb]SABRder1+UnitStep[zerocuterKb-K1] SABRder2);
ReplacePart[{{f,\[Alpha],\[Beta],\[Rho],\[Nu],K1,T},SABRder},Function,0]]]]]


(* ::Input::Initialization:: *)
(* Q[x_,w_]:=1/Sqrt[2\[Pi] w]\[ExponentialE]^(-(x^2/(2t))+\!\(
\*SubsuperscriptBox[\(\[Integral]\), \(0\), \(w\)]\(\[Kappa][s]\[DifferentialD]s\)\)) *)


(* ::Input::Initialization:: *)

(* FullSimplify[(Q^(0,1))[x,t]-1/2(Q^(2,0))[x,t]-\[Kappa][t]Q[x,t]] *)


(* ::Input::Initialization:: *)
GIntegral[a_,b_,x_]:=Module[{},Print["a=",a," b=",b];NIntegrate[Exp[-a^2 x1^2-b^2/x1^2],{x1,0,x}]]


(* ::Input::Initialization:: *)
GIntegralAnalytical[a1_,b1_,x1_]:=Module[{a,b,x},
x=Abs[x1];
b=Abs[b1];
a=Abs[a1];
Re[If[Abs[a]>0.001,Sign[x1](Sqrt[\[Pi]]/( 4a) (E^(- 2a  b)  (1-E^(4  a b)+E^(4  a b) Erf[b/x+a x]-Erf[ b/ x-a x]))),
Sign[x1](-b Sqrt[\[Pi]]+E^(-(b^2/x^2)) x+b Sqrt[\[Pi]] Erf[b/x])+1/3 (-E^(-(b^2/x^2)) (2b^3 E^(b^2/x^2) Sqrt[\[Pi]]-2 b^2 x+x^3)+2b^3 Sqrt[\[Pi]] Erf[b/x]) a^2+1/30 E^(-(b^2/x^2)) (-4 b^5 E^(b^2/x^2) Sqrt[\[Pi]]+4 b^4 x-2 b^2 x^3+3 x^5+4 b^5 E^(b^2/x^2) Sqrt[\[Pi]] Erf[b/x]) a^4
]]]


(* ::Input::Initialization:: *)
GIntegralAnalytical4[a_,b_,T_]:=Re[(1/(2 a) (E^(-Sqrt[2] a b) Sqrt[\[Pi]] (1-E^(2 Sqrt[2] a b)+E^(2 Sqrt[2] a b) Erf[b/(Sqrt[2] Sqrt[T])+a Sqrt[T]]-Erf[(Sqrt[2] b-2 a T)/(2 Sqrt[T])])))]


(* ::Input::Initialization:: *)
GIntegral[a_,b_,x_]:=NIntegrate[Exp[-a^2 x1^2-b^2/x1^2],{x1,0,x}]


(* ::Input::Initialization:: *)
GIntegralAnalytical[a1_,b1_,x1_]:=Module[{a,b,x},
x=Abs[x1];
b=Abs[b1];
a=Abs[a1];
Re[If[Abs[a]>0.001,Sign[x1](Sqrt[\[Pi]]/( 4a) (E^(- 2a  b)  (1-E^(4  a b)+E^(4  a b) Erf[b/x+a x]-Erf[ b/ x-a x]))),
Sign[x1](-b Sqrt[\[Pi]]+E^(-(b^2/x^2)) x+b Sqrt[\[Pi]] Erf[b/x])+1/3 (-E^(-(b^2/x^2)) (2b^3 E^(b^2/x^2) Sqrt[\[Pi]]-2 b^2 x+x^3)+2b^3 Sqrt[\[Pi]] Erf[b/x]) a^2+1/30 E^(-(b^2/x^2)) (-4 b^5 E^(b^2/x^2) Sqrt[\[Pi]]+4 b^4 x-2 b^2 x^3+3 x^5+4 b^5 E^(b^2/x^2) Sqrt[\[Pi]] Erf[b/x]) a^4
]]]


(* ::Input::Initialization:: *)
GIntegralAnalytical1[a1_,b1_,x1_]:=Module[{a,b,x},
x=Abs[x1];
b=Abs[b1];
a=Abs[a1];
Re[If[Abs[a]>0.001,Sign[x1] ((E^(-2 a b)) Sqrt[\[Pi]] (1-E^(4 a b)-NormalCDF[Sqrt[2] (b/x-a x)]+E^(4 a b) NormalCDF[Sqrt[2] (b/x+a x)]) )/(2 a),
Sign[x1]/30 (E^(-(b^2/x^2)) x (30+10 a^2 (2 b^2-x^2)+a^4 (4 b^4-2 b^2 x^2+3 x^4))+4 b (15+10 a^2 b^2+2 a^4 b^4) Sqrt[\[Pi]] (-1+NormalCDF[(Sqrt[2] b)/x]))
]]]


(* ::Input::Initialization:: *)
GIntegralAnalytical2[a2_,b1_,x1_]:=Module[{a,b,x,a0,b0,c0,d0,e0,argERF,ERF},
x=Abs[x1];
b=Abs[b1];
argERF=b/x Sqrt[2];
ERF=2NormalDis[b/x Sqrt[2]]-2;
a0=E^(-(b^2/x^2)) x+b Sqrt[\[Pi]] ERF;
b0=E^(-(b^2/x^2)) (2 b^2 x-x^3)+2b^3 Sqrt[\[Pi]] ERF;
c0=E^(-(b^2/x^2)) (4 b^4 x-2 b^2 x^3+3 x^5)+4 b^5  Sqrt[\[Pi]] ERF;
d0=E^(-(b^2/x^2)) (8 b^6 x-4 b^4 x^3+6 b^2 x^5-15 x^7)+8 b^7 Sqrt[\[Pi]] ERF;
e0=E^(-(b^2/x^2)) (16 b^8 x-8 b^6 x^3+12 b^4 x^5-30 b^2 x^7+105 x^9)+16 b^9  Sqrt[\[Pi]]ERF ;
Sign[x1](a0+1/3 b0  a2+1/30 c0 a2^2+1/630 d0 a2^3+1/22680 e0 a2^4 )];


(* ::Input::Initialization:: *)
GIntegralAnalytical3[a1_,b1_,x1_]:=Module[{a,b,x,a0,b0,c0,d0,e0},
x=Abs[x1];
b=Abs[b1];
a=a1;
ERF=(2NormalDis[b/x Sqrt[2]]-1)-1;
a0=E^(-(b^2/x^2)) x+b Sqrt[\[Pi]] ERF;
b0=E^(-(b^2/x^2)) (2 b^2 x-x^3)+2b^3 Sqrt[\[Pi]] ERF;
c0=E^(-(b^2/x^2)) (4 b^4 x-2 b^2 x^3+3 x^5)+4 b^5  Sqrt[\[Pi]] ERF;
d0=E^(-(b^2/x^2)) (8 b^6 x-4 b^4 x^3+6 b^2 x^5-15 x^7)+8 b^7 Sqrt[\[Pi]] ERF;
e0=E^(-(b^2/x^2)) (16 b^8 x-8 b^6 x^3+12 b^4 x^5-30 b^2 x^7+105 x^9)+16 b^9  Sqrt[\[Pi]]ERF ;
Sign[x1](a0+1/3 b0  a^2+1/30 c0 a^4+1/630 d0 a^6+1/22680 e0 a^8 )];


(* ::Input::Initialization:: *)
DigitalSABROption[f_,\[Alpha]_,\[Beta]_,\[Rho]_,\[Nu]_,{method_,zmethod_,zetavmethod_,b1method_},K_,T_]:=Module[{shift=0.0001 f},-(SABROption[f,\[Alpha],\[Beta],\[Rho],\[Nu],{method,zmethod,zetavmethod,b1method},K+shift,T][[2]]-SABROption[f,\[Alpha],\[Beta],\[Rho],\[Nu],{method,zmethod,zetavmethod,b1method},K-shift,T][[2]])/(2shift)]


(* ::Input::Initialization:: *)
DistributionSABROption[f_,\[Alpha]_,\[Beta]_,\[Rho]_,\[Nu]_,{method_,zmethod_,zetavmethod_,b1method_},K_,T_]:=Module[{},If[K>f/200,1-DigitalSABROption[f,\[Alpha],\[Beta],\[Rho],\[Nu],{method,zmethod,zetavmethod,b1method},K,T],0]]


(* ::Input::Initialization:: *)
DistributionSABROptionInverse[f_,\[Alpha]_,\[Beta]_,\[Rho]_,\[Nu]_,{method_,zmethod_,zetavmethod_,b1method_},p_,T_]:=Module[{x,ss},ss=FindRoot[DistributionSABROption[f,\[Alpha],\[Beta],\[Rho],\[Nu],{method,zmethod,zetavmethod,b1method},x,T]==p,{x,f*1.1,10^(-100),1.},AccuracyGoal->8,WorkingPrecision->30,MaxIterations->200];
ss[[1,2]]]


(* ::Input::Initialization:: *)
DensitySABROption[f_,\[Alpha]_,\[Beta]_,\[Rho]_,\[Nu]_,{method_,zmethod_,zetavmethod_,b1method_},K_,T_]:=Module[{shift=0.0001 f},
If[K>f/200,(SABROption[f,\[Alpha],\[Beta],\[Rho],\[Nu],{method,zmethod,zetavmethod,b1method},K-shift,T][[2]]-2SABROption[f,\[Alpha],\[Beta],\[Rho],\[Nu],{method,zmethod,zetavmethod,b1method},K,T][[2]]+
SABROption[f,\[Alpha],\[Beta],\[Rho],\[Nu],{method,zmethod,zetavmethod,b1method},K+shift,T][[2]])/(shift^2),
0]]


(* ::Input::Initialization:: *)
PlotVolCase[f_,\[Alpha]_,\[Beta]_,\[Rho]_,\[Nu]_,{method_,zmethod_,zetamethod_,b1method_},{Kmin_,Kmax_},T_]:=Module[{},
Off[FindRoot::"lstol",FindRoot::"precw",FindRoot::"reged"];
Plot[
SABROption[f,\[Alpha],\[Beta],\[Rho],\[Nu],{method,zmethod,zetamethod,b1method},K,T][[1]]
,{K,Kmin,Kmax},PlotRange->All,
PlotStyle->{RGBColor[1,0,0]}]];


(* ::Input::Initialization:: *)
PlotDensityCase[f_,\[Alpha]_,\[Beta]_,\[Rho]_,\[Nu]_,{method_,zmethod_,zetamethod_,b1method_},{Kmin_,Kmax_},T_]:=Module[{},
Off[FindRoot::"lstol",FindRoot::"precw",FindRoot::"reged"];
Plot[
DensitySABROption[f,\[Alpha],\[Beta],\[Rho],\[Nu],{method,zmethod,zetamethod,b1method},K,T],{K,Kmin,Kmax},PlotRange->All,
PlotStyle->{RGBColor[1,0,0]}]];


(* ::Input::Initialization:: *)
PlotDigitalCase[f_,\[Alpha]_,\[Beta]_,\[Rho]_,\[Nu]_,{method_,zmethod_,zetamethod_,b1method_},{Kmin_,Kmax_},T_]:=Module[{},
Off[FindRoot::"lstol",FindRoot::"precw",FindRoot::"reged"];
Plot[
DigitalSABROption[f,\[Alpha],\[Beta],\[Rho],\[Nu],{method,zmethod,zetamethod,b1method},K,T]
,{K,Kmin,Kmax},PlotRange->{0,1.2},
PlotStyle->{RGBColor[1,0,0]}]];


(* ::Input::Initialization:: *)
SimplifiedSABROption[f_,\[Alpha]_,\[Beta]_,\[Rho]_,\[Nu]_,K_,T_,printflag_]:=
Module[{z,zp,x,b1,\[Theta],\[FinalSigma],\[Kappa],result,\[Sigma],a,b,sig,sigN,fav2,\[Gamma]1,\[Gamma]2,\[Xi],call,intrinsec},
fav=(f+K)/2;
 z=(f^(1-\[Beta])-K^(1-\[Beta]))/(\[Alpha] (1-\[Beta]));
 \[Xi]=\[Nu] (f^(1-\[Beta])-K^(1-\[Beta]))/(\[Alpha] (1-\[Beta]));
x=Log[(-\[Rho]+\[Nu] z+Sqrt[1-2 \[Nu] \[Rho] z+\[Nu]^2 z^2])/(1-\[Rho])]/\[Nu];
b1=\[Beta] fav^(\[Beta]-1);
I0=Sqrt[1-2 \[Nu] \[Rho] z+\[Nu]^2 z^2];
B0B\[Alpha]z=(K f)^\[Beta];
f1overf0=E^(1/4 \[Alpha] b1 \[Nu] \[Rho] z^2);
intrinsec=Max[f-K,0];
\[Kappa]=1/8 ((\[Alpha]^2 (-2+\[Beta]) \[Beta] K^(2 \[Beta]))/K^2+(6 \[Alpha] \[Beta] K^\[Beta] \[Nu] \[Rho])/K+\[Nu]^2 (2-3 \[Rho]^2));
If[printflag>0,Print["call: x=",x," f1overf0=",f1overf0," \!\(\*SqrtBox[\(B0B\[Alpha]z\)]\)=",Sqrt[B0B\[Alpha]z]," I0=",I0," \[Kappa]=",\[Kappa]," intrinsec=",intrinsec]];
  call=N[intrinsec+f1overf0/Sqrt[2\[Pi]] \[Alpha]  Sqrt[B0B\[Alpha]z] Sqrt[I0] Re[GIntegralAnalytical3[Sqrt[-\[Kappa]],Abs[x]/Sqrt[2] ,Sqrt[T]]]];
result={ImpVolBS[f,K,T,1,call],call};
result];


(* ::Input::Initialization:: *)
 SABRHaganVol[f_,\[Alpha]_,\[Beta]_,\[Rho]_,\[Nu]_,K_,T_]:=Module[{z,x,Effetmat},z=(f^(1-\[Beta])-K^(1-\[Beta]))/(\[Alpha] (1-\[Beta]));
x=Log[(-\[Rho]+\[Nu] z+Sqrt[1-2 \[Nu] \[Rho] z+\[Nu]^2 z^2])/(1-\[Rho])]/\[Nu];
Effetmat=(1+(1/24 \[Alpha]^2 (1-\[Beta])^2 (f K)^(-1+\[Beta])+1/4 \[Alpha] \[Beta] (f K)^(1/2 (-1+\[Beta])) \[Nu] \[Rho]+1/24 \[Nu]^2 (2-3 \[Rho]^2)) T)/(1+1/24 (1-\[Beta])^2 Log[f/K]^2+((1-\[Beta])^4 Log[f/K]^4)/1920);
If[z==0,K^(-1+\[Beta]) \[Alpha] Effetmat,
\[Alpha]/(f K)^((1-\[Beta])/2 ) z/x  Effetmat  ]]


(* ::Input::Initialization:: *)
 SABRHaganOption[f_,\[Alpha]_,\[Beta]_,\[Rho]_,\[Nu]_,K_,T_]:=Module[{vol},
vol=  SABRHaganVol[f,\[Alpha],\[Beta],\[Rho],\[Nu],K,T];
BS[f,K,T,vol ]]


(* ::Input::Initialization:: *)
 SABRHaganDensity[f_,K_,\[Alpha]_,\[Beta]_,\[Rho]_,\[Nu]_,T_]:=Module[{v0,v1,v2,shift},
shift=Min[K,f]/10000;
v0= SABRHaganOption[f,\[Alpha],\[Beta],\[Rho],\[Nu],K,T];
v1= SABRHaganOption[f,\[Alpha],\[Beta],\[Rho],\[Nu],K+shift,T];
v2= SABRHaganOption[f,\[Alpha],\[Beta],\[Rho],\[Nu],K-shift,T];
(v1+v2-2v0)/(shift^2)]


(* ::Input::Initialization:: *)
 SABROptionHagan[f_,\[Alpha]_,\[Beta]_,\[Rho]_,\[Nu]_,K_,T_]:=Module[{vol},
vol=  SABRHaganVol[f,\[Alpha],\[Beta],\[Rho],\[Nu],K,T];
{vol,BS[f,K,T,vol ]}]


(* ::Input::Initialization:: *)
SABROptionAnalyticDistribution[f_,\[Alpha]_,\[Beta]_,\[Rho]_,\[Nu]_,K_,T_]:=Module[{shift=0.00001},(-SABROptionAnalyticOption[f,\[Alpha],\[Beta],\[Rho],\[Nu],K+shift,T]+SABROptionAnalyticOption[f,\[Alpha],\[Beta],\[Rho],\[Nu],K-shift,T])/(2shift)]


(* ::Input::Initialization:: *)
SABROptionAnalyticDensity[f_,\[Alpha]_,\[Beta]_,\[Rho]_,\[Nu]_,K_,T_]:=Module[{shift=0.00001},(SABROptionAnalyticOption[f,\[Alpha],\[Beta],\[Rho],\[Nu],K+shift,T]+SABROptionAnalyticOption[f,\[Alpha],\[Beta],\[Rho],\[Nu],K-shift,T]-2SABROptionAnalyticOption[f,\[Alpha],\[Beta],\[Rho],\[Nu],K,T])/(shift^2)]


(* ::Input::Initialization:: *)
SABROptionAnalyticQuantile[f_,\[Alpha]_,\[Beta]_,\[Rho]_,\[Nu]_,T_,prob_]:=Module[{K},If[prob>0.5,NewtonFindRoot[(SABROptionAnalyticDistribution[f,\[Alpha],\[Beta],\[Rho],\[Nu],#,T]-prob)&,0.8f,0.0001,0.0000001,100][[1]],
NewtonFindRoot[(SABROptionAnalyticDistribution[f,\[Alpha],\[Beta],\[Rho],\[Nu],#,T]-prob)&,1.2f,0.0001,0.0000001,100][[1]]]]


(* ::Input::Initialization:: *)
SABROptionAnalyticOption[f_,\[Alpha]_,\[Beta]_,\[Rho]_,\[Nu]_,K_,T_]:=
Module[{z,zp,x,b1,\[Theta],\[FinalSigma],\[Kappa],result,\[Sigma],a,b,sig,sigN,fav2,\[Gamma]1,\[Gamma]2,\[Xi],call},
fav=(f+K)/2;
If[\[Beta]!=1, z=(f^(1-\[Beta])-K^(1-\[Beta]))/(\[Alpha] (1-\[Beta])),z=Log[f]/\[Alpha]-Log[K]/\[Alpha]];
If[\[Beta]!=1, \[Xi]=\[Nu] (f^(1-\[Beta])-K^(1-\[Beta]))/(\[Alpha] (1-\[Beta])), \[Xi]=\[Nu](Log[f]/\[Alpha]-Log[K]/\[Alpha])];
x=Log[(-\[Rho]+\[Nu] z+Sqrt[1-2 \[Nu] \[Rho] z+\[Nu]^2 z^2])/(1-\[Rho])]/\[Nu];
b1=\[Beta] fav^(\[Beta]-1);
If[z==0,\[Theta]=0,
\[Theta]=1/4 \[Alpha] b1 \[Nu] \[Rho] z^2+Log[(\[Alpha] (f K)^(\[Beta]/2) z)/(f-K)]+Log[(x (1-2 \[Nu] \[Rho] z+\[Nu]^2 z^2)^(1/4))/z]];
\[Kappa]=1/8 ((\[Alpha]^2 (-2+\[Beta]) \[Beta] K^(2 \[Beta]))/K^2+(6 \[Alpha] \[Beta] K^\[Beta] \[Nu] \[Rho])/K+\[Nu]^2 (2-3 \[Rho]^2));
\[Sigma]=\[Alpha] f^(\[Beta]-1);
b=Abs[x];
a=Sqrt[-\[Kappa]];
If[z==0,call=(K^\[Beta] \[Alpha])/(2 Sqrt[2 \[Pi]]) Re[(1/(2 a) (E^(-Sqrt[2] a b) Sqrt[\[Pi]] (1-E^(2 Sqrt[2] a b)+E^(2 Sqrt[2] a b) Erf[b/(Sqrt[2] Sqrt[T])+a Sqrt[T]]-Erf[(Sqrt[2] b-2 a T)/(2 Sqrt[T])])))],
  call=N[Max[f-K,0]+(f-K)/(2Sqrt[2\[Pi]]) E^\[Theta]/x Re[(1/(2 a) (E^(-Sqrt[2] a b) Sqrt[\[Pi]] (1-E^(2 Sqrt[2] a b)+E^(2 Sqrt[2] a b) Erf[b/(Sqrt[2] Sqrt[T])+a Sqrt[T]]-Erf[(Sqrt[2] b-2 a T)/(2 Sqrt[T])])))]]];
call];


(* ::Input::Initialization:: *)
SABROptionAnalytic[f_,\[Alpha]_,\[Beta]_,\[Rho]_,\[Nu]_,K_,T_]:=
Module[{z,zp,x,b1,\[Theta],\[FinalSigma],\[Kappa],result,\[Sigma],a,b,sig,sigN,fav2,\[Gamma]1,\[Gamma]2,\[Xi],call},
fav=(f+K)/2;
If[\[Beta]!=1, z=(f^(1-\[Beta])-K^(1-\[Beta]))/(\[Alpha] (1-\[Beta])),z=Log[f]/\[Alpha]-Log[K]/\[Alpha]];
If[\[Beta]!=1, \[Xi]=\[Nu] (f^(1-\[Beta])-K^(1-\[Beta]))/(\[Alpha] (1-\[Beta])), \[Xi]=\[Nu](Log[f]/\[Alpha]-Log[K]/\[Alpha])];
x=Log[(-\[Rho]+\[Nu] z+Sqrt[1-2 \[Nu] \[Rho] z+\[Nu]^2 z^2])/(1-\[Rho])]/\[Nu];
b1=\[Beta] fav^(\[Beta]-1);
If[z==0,\[Theta]=0,
\[Theta]=1/4 \[Alpha] b1 \[Nu] \[Rho] z^2+Log[(\[Alpha] (f K)^(\[Beta]/2) z)/(f-K)]+Log[(x (1-2 \[Nu] \[Rho] z+\[Nu]^2 z^2)^(1/4))/z]];
\[Kappa]=1/8 ((\[Alpha]^2 (-2+\[Beta]) \[Beta] K^(2 \[Beta]))/K^2+(6 \[Alpha] \[Beta] K^\[Beta] \[Nu] \[Rho])/K+\[Nu]^2 (2-3 \[Rho]^2));
\[Sigma]=\[Alpha] f^(\[Beta]-1);
b=Abs[x];
a=Sqrt[-\[Kappa]];
If[z==0,call=(K^\[Beta] \[Alpha])/(2 Sqrt[2 \[Pi]]) Re[(1/(2 a) (E^(-Sqrt[2] a b) Sqrt[\[Pi]] (1-E^(2 Sqrt[2] a b)+E^(2 Sqrt[2] a b) Erf[b/(Sqrt[2] Sqrt[T])+a Sqrt[T]]-Erf[(Sqrt[2] b-2 a T)/(2 Sqrt[T])])))],
  call=N[Max[f-K,0]+(f-K)/(2Sqrt[2\[Pi]]) E^\[Theta]/x Re[(1/(2 a) (E^(-Sqrt[2] a b) Sqrt[\[Pi]] (1-E^(2 Sqrt[2] a b)+E^(2 Sqrt[2] a b) Erf[b/(Sqrt[2] Sqrt[T])+a Sqrt[T]]-Erf[(Sqrt[2] b-2 a T)/(2 Sqrt[T])])))]]];
result={ImpVolBS[f,K,T,1,call],call};

result];


(* ::Input::Initialization:: *)
SABROptionAnalytic[f_,\[Alpha]_,\[Beta]_,\[Rho]_,\[Nu]_,K_,T_,printflag_]:=
Module[{z,zp,x,b1,\[Theta],\[FinalSigma],\[Kappa],result,\[Sigma],a,b,sig,sigN,fav2,\[Gamma]1,\[Gamma]2,\[Xi],call,I1,I0,I2,B0B\[Alpha]z,f1overf0},
fav=(f+K)/2;
If[\[Beta]!=1, z=(f^(1-\[Beta])-K^(1-\[Beta]))/(\[Alpha] (1-\[Beta])),z=Log[f]/\[Alpha]-Log[K]/\[Alpha]];
x=Log[(-\[Rho]+\[Nu] z+Sqrt[1-2 \[Nu] \[Rho] z+\[Nu]^2 z^2])/(1-\[Rho])]/\[Nu];
b1=\[Beta] fav^(\[Beta]-1);
I0=Sqrt[1+z  \[Nu] (z \[Nu]-2 \[Rho])];I1=(z \[Nu]-\[Rho])/I0;I2=(1-\[Rho]^2)/I0^3;
B0B\[Alpha]z=(f K)^\[Beta];
f1overf0=E^(1/4 \[Alpha] b1 \[Nu] \[Rho] z^2);
\[Kappa]=1/8 ((\[Alpha]^2 (-2+\[Beta]) \[Beta] K^(2 \[Beta]))/K^2+(6 \[Alpha] \[Beta] K^\[Beta] \[Nu] \[Rho])/K+\[Nu]^2 (2-3 \[Rho]^2));
\[Sigma]=\[Alpha] f^(\[Beta]-1);
b=Abs[x];
a=Sqrt[-\[Kappa]];
If[printflag>0,Print["SABROptionAnalytic: z=",SetPrecision[z,12]," x=",SetPrecision[x,12]," \[Kappa]=",SetPrecision[\[Kappa],12]," b1=",SetPrecision[b1,12]," I0=",SetPrecision[I0,12]," f1overf0=",SetPrecision[f1overf0,12]]];
If[printflag>0,Print["SABROptionAnalytic: \!\(\*FractionBox[\(\*SuperscriptBox[\(\[Alpha]\), \(2\)]\\\ \((\(-2\) + \[Beta])\)\\\ \[Beta]\\\ \*SuperscriptBox[\(K\), \(2\\\ \[Beta]\)]\), SuperscriptBox[\(K\), \(2\)]]\)=",SetPrecision[(\[Alpha]^2 (-2+\[Beta]) \[Beta] K^(2 \[Beta]))/K^2,12]," \!\(\*FractionBox[\(6\\\ \[Alpha]\\\ \[Beta]\\\ \*SuperscriptBox[\(K\), \(\[Beta]\)]\\\ \[Nu]\\\ \[Rho]\), \(K\)]\)=",SetPrecision[(6 \[Alpha] \[Beta] K^\[Beta] \[Nu] \[Rho])/K,12]," \!\(\*SuperscriptBox[\(\[Nu]\), \(2\)]\) (2-3 \!\(\*SuperscriptBox[\(\[Rho]\), \(2\)]\))=",SetPrecision[\[Nu]^2 (2-3 \[Rho]^2),12]]];
If[printflag>0,Print["SABROptionAnalytic: \!\(\*FractionBox[\(1\), \(2\)]\)Re[(\!\(\*FractionBox[\(1\), \(2\\\ a\)]\)(\!\(\*SuperscriptBox[\(\[ExponentialE]\), \(\(-\*SqrtBox[\(2\)]\)\\\ a\\\ b\)]\) \!\(\*SqrtBox[\(\[Pi]\)]\) (1-\!\(\*SuperscriptBox[\(\[ExponentialE]\), \(2\\\ \*SqrtBox[\(2\)]\\\ a\\\ b\)]\)+\!\(\*SuperscriptBox[\(\[ExponentialE]\), \(2\\\ \*SqrtBox[\(2\)]\\\ a\\\ b\)]\) Erf[\!\(\*FractionBox[\(b\), \(\*SqrtBox[\(2\)]\\\ \*SqrtBox[\(T\)]\)]\)+a \!\(\*SqrtBox[\(T\)]\)]-Erf[\!\(\*FractionBox[\(\*SqrtBox[\(2\)]\\\ b - 2\\\ a\\\ T\), \(2\\\ \*SqrtBox[\(T\)]\)]\)])))]]=",SetPrecision[1/2 Re[(1/(2 a) (E^(-Sqrt[2] a b) Sqrt[\[Pi]] (1-E^(2 Sqrt[2] a b)+E^(2 Sqrt[2] a b) Erf[b/(Sqrt[2] Sqrt[T])+a Sqrt[T]]-Erf[(Sqrt[2] b-2 a T)/(2 Sqrt[T])])))],12]]];
  call=N[Max[f-K,0]+\[Alpha]/(2Sqrt[2\[Pi]]) Sqrt[I0] Sqrt[B0B\[Alpha]z]f1overf0 Re[(1/(2 a) (E^(-Sqrt[2] a b) Sqrt[\[Pi]] (1-E^(2 Sqrt[2] a b)+E^(2 Sqrt[2] a b) Erf[b/(Sqrt[2] Sqrt[T])+a Sqrt[T]]-Erf[(Sqrt[2] b-2 a T)/(2 Sqrt[T])])))]];
result={ImpVolBS[f,K,T,1,call],call};

result];


(* ::Input::Initialization:: *)
SABROptionAnalyticFromATMVol[f_,ATMvol_,\[Beta]_,\[Rho]_,\[Nu]_,K_,T_]:=
Module[{\[Alpha],z,zp,x,b1,\[Theta],\[FinalSigma],\[Kappa],result,\[Sigma],a,b,sig,sigN,fav2,\[Gamma]1,\[Gamma]2,\[Xi],call,I1,I0,I2,B0B\[Alpha]z,f1overf0},
\[Alpha]=NewtonFindRoot[(SABROptionAnalytic[f,#,\[Beta],\[Rho],\[Nu],f*1.00001,T][[1]]+SABROptionAnalytic[f,#,\[Beta],\[Rho],\[Nu],f*0.99999,T][[1]]-2ATMvol)&,0.05,0.01,0.00001,10][[1]];

fav=(f+K)/2;
If[\[Beta]!=1, z=(f^(1-\[Beta])-K^(1-\[Beta]))/(\[Alpha] (1-\[Beta])),z=Log[f]/\[Alpha]-Log[K]/\[Alpha]];
x=Log[(-\[Rho]+\[Nu] z+Sqrt[1-2 \[Nu] \[Rho] z+\[Nu]^2 z^2])/(1-\[Rho])]/\[Nu];
b1=\[Beta] fav^(\[Beta]-1);
I0=Sqrt[1+z  \[Nu] (z \[Nu]-2 \[Rho])];I1=(z \[Nu]-\[Rho])/I0;I2=(1-\[Rho]^2)/I0^3;
B0B\[Alpha]z=(f K)^\[Beta];
f1overf0=E^(1/4 \[Alpha] b1 \[Nu] \[Rho] z^2);
\[Kappa]=1/8 ((\[Alpha]^2 (-2+\[Beta]) \[Beta] K^(2 \[Beta]))/K^2+(6 \[Alpha] \[Beta] K^\[Beta] \[Nu] \[Rho])/K+\[Nu]^2 (2-3 \[Rho]^2));
\[Sigma]=\[Alpha] f^(\[Beta]-1);
b=Abs[x];
a=Sqrt[-\[Kappa]];
  call=N[Max[f-K,0]+\[Alpha]/(2Sqrt[2\[Pi]]) Sqrt[I0] Sqrt[B0B\[Alpha]z]f1overf0 Re[(1/(2 a) (E^(-Sqrt[2] a b) Sqrt[\[Pi]] (1-E^(2 Sqrt[2] a b)+E^(2 Sqrt[2] a b) Erf[b/(Sqrt[2] Sqrt[T])+a Sqrt[T]]-Erf[(Sqrt[2] b-2 a T)/(2 Sqrt[T])])))]];
result={ImpVolBS[f,K,T,1,call],call};

result];


(* ::Input::Initialization:: *)
SABRHaganDistribution[f_,\[Alpha]_,\[Beta]_,\[Rho]_,\[Nu]_,K_,T_]:=Module[{shift=0.00001},(-SABRHaganOption[f,\[Alpha],\[Beta],\[Rho],\[Nu],K+shift,T]+SABRHaganOption[f,\[Alpha],\[Beta],\[Rho],\[Nu],K-shift,T])/(2shift)]


(* ::Input::Initialization:: *)
SABROptionDirect[f_,\[Alpha]_,\[Beta]_,\[Rho]_,\[Nu]_,K_,T_]:=Module[{z,zp,x,b1,\[Theta],\[FinalSigma],\[Kappa],result,\[Sigma],a,b,sig,sigN,fav2,\[Gamma]1,\[Gamma]2,fav,\[Xi],call},
fav=(f+K)/2;
If[\[Beta]!=1, z=(f^(1-\[Beta])-K^(1-\[Beta]))/(\[Alpha] (1-\[Beta])),z=Log[f]/\[Alpha]-Log[K]/\[Alpha]];
If[\[Beta]!=1, \[Xi]=\[Nu] (f^(1-\[Beta])-K^(1-\[Beta]))/(\[Alpha] (1-\[Beta])), \[Xi]=\[Nu](Log[f]/\[Alpha]-Log[K]/\[Alpha])];
x=Log[(-\[Rho]+\[Nu] z+Sqrt[1-2 \[Nu] \[Rho] z+\[Nu]^2 z^2])/(1-\[Rho])]/\[Nu];
b1=\[Beta] fav^(\[Beta]-1);
If[z==0,\[Theta]=1;sig=K^(-1+\[Beta]) \[Alpha] (1-2 T (K^(2 \[Beta]) \[Alpha]^2 (-1+\[Beta])^2+K^2 \[Nu] (6 b1 \[Alpha] \[Rho]+\[Nu] (2-3 \[Rho]^2)))/(24 K^2))^(-1/2),
\[Theta]=1/4 \[Alpha] b1 \[Nu] \[Rho] z^2+Log[(\[Alpha] (f K)^(\[Beta]/2) z)/(f-K)]+Log[(x (1-2 \[Nu] \[Rho] z+\[Nu]^2 z^2)^(1/4))/z];
sig=Log[f/K]/ z \[Xi]/(\[Nu] x) (1-2 T((\[Theta]-Log[(Log[f/K] Sqrt[f K])/(f-K)])/x^2))^(-1/2)];
result={sig,BS[f,K,T,sig ]};

result];


(* ::Input::Initialization:: *)
SABROptionDirect2[f_,\[Alpha]_,\[Beta]_,\[Rho]_,\[Nu]_,K_,T_]:=Module[{z,zp,x,b1,\[Theta],\[FinalSigma],\[Kappa],result,\[Sigma],a,b,sig,sigN,fav2,\[Gamma]1,\[Gamma]2,\[Xi],fav,call},
fav=(f+K)/2;
If[\[Beta]!=1, z=(f^(1-\[Beta])-K^(1-\[Beta]))/(\[Alpha] (1-\[Beta])),z=Log[f]/\[Alpha]-Log[K]/\[Alpha]];
If[\[Beta]!=1, \[Xi]=\[Nu] (f^(1-\[Beta])-K^(1-\[Beta]))/(\[Alpha] (1-\[Beta])), \[Xi]=\[Nu](Log[f]/\[Alpha]-Log[K]/\[Alpha])];
x=Log[(-\[Rho]+\[Nu] z+Sqrt[1-2 \[Nu] \[Rho] z+\[Nu]^2 z^2])/(1-\[Rho])]/\[Nu];
b1=\[Beta] fav^(\[Beta]-1);
\[Theta]=1/4 \[Alpha] b1 \[Nu] \[Rho] z^2+Log[(\[Alpha] (f K)^(\[Beta]/2) z)/(f-K)]+Log[(x (1-2 \[Nu] \[Rho] z+\[Nu]^2 z^2)^(1/4))/z];
sig=Log[f/K]/ z \[Xi]/(\[Nu] x) (Exp[-2 T((\[Theta]-Log[(Log[f/K] Sqrt[f K])/(f-K)])/x^2)])^(-1/2);
result={sig,BS[f,K,T,sig ]};

result];


(* ::Input::Initialization:: *)
SABRgeneric5[intrinsec_,z_,b1_,b2_,zavg_,SqB0B\[Alpha]z_,T_,\[Mu]_,\[Alpha]_,\[Rho]_,\[Nu]_,printflag_]:=
Module[{x,I0,I1,I2,\[Kappa],f1overf0,xp},
x=Log[(-\[Rho]+\[Nu] z+Sqrt[1-2 \[Nu] \[Rho] z+\[Nu]^2 z^2])/(1-\[Rho])]/\[Nu];(*  x    est la distance geodesique , on approxime la prob de transition par \[ExponentialE]^(-x^2/(2T))(1+..)  *)
If[printflag>0,Print["SABRgeneric5:z=",SetPrecision[z,12]," zavg=",SetPrecision[zavg,12]," \[Rho]=",SetPrecision[\[Rho],12]," \[Nu]=",SetPrecision[\[Nu],12]," Iz2=",SetPrecision[1-2 \[Nu] \[Rho] z+\[Nu]^2 z^2,12]," x=",SetPrecision[x,12]]];
If[printflag>20,
Plot[(-\[Rho]+\[Nu] z1+Sqrt[1-2 \[Nu] \[Rho] z1+\[Nu]^2 z1^2])/(1-\[Rho]),{z1,-0.2,0.2},AxesLabel->{"z","x"}]];

I0=Sqrt[1+z \[Nu] (z \[Nu]-2 \[Rho])];
I1=(z \[Nu]-\[Rho])/I0;
I2=(1-\[Rho]^2)/I0^3;
\[Kappa]=(12  \[Mu]+ (-3 b1^2 +2 b2) \[Alpha]^2-4 z^2 \[Mu]^2+((3I0^2-1) I0 I2-I1^2) \[Nu]^2+(6 b1 \[Alpha] -16 z \[Mu] )\[Nu] \[Rho])/8 ;


f1overf0=E^((1/4 \[Alpha] b1 \[Nu] \[Rho]+\[Mu]/2) z^2);
f1overf0=E^(((2 \[Mu]+b1 \[Alpha]  \[Nu] \[Rho]) (2 \[Rho] ArcTan[(z  \[Nu]-\[Rho])/Sqrt[1-\[Rho]^2]]+2 \[Rho] ArcTan[\[Rho]/Sqrt[1-\[Rho]^2]]+Sqrt[1-\[Rho]^2] Log[1+z^2  \[Nu]^2-2 z  \[Nu] \[Rho]]))/(4  \[Nu]^2 Sqrt[1-\[Rho]^2]));

If[printflag>20,
Plot[ GIntegralAnalytical3[Sqrt[-\[Kappa]],Abs[(-\[Rho]+\[Nu] z1+Sqrt[1-2 \[Nu] \[Rho] z1+\[Nu]^2 z1^2])/(1-\[Rho])]/Sqrt[2] ,Sqrt[T]],{z1,-0.2,0.2},AxesLabel->{"z","GIntegralAnalytical3[x[z]]"},PlotRange->All]];

If[printflag>0,Print[" f1overf0=",SetPrecision[f1overf0,12]," SqB0B\[Alpha]z=",SetPrecision[SqB0B\[Alpha]z,12]," I0=",SetPrecision[I0,12]," \[Kappa]=",SetPrecision[\[Kappa],12]," GIntegralAnalytical[\!\(\*SqrtBox[\(-\[Kappa]\)]\),\!\(\*FractionBox[\(Abs[x]\), SqrtBox[\(2\)]]\),\!\(\*SqrtBox[\(T\)]\)]=",SetPrecision[GIntegralAnalytical[Sqrt[-\[Kappa]],Abs[x]/Sqrt[2],Sqrt[T]],12],
" GIntegralAnalytical2[-\[Kappa],\!\(\*FractionBox[\(Abs[x]\), SqrtBox[\(2\)]]\),\!\(\*SqrtBox[\(T\)]\)]=",SetPrecision[GIntegralAnalytical2[-\[Kappa],Abs[x]/Sqrt[2],Sqrt[T]],12]," intrinsec=",intrinsec]];
If[printflag>20,Plot[ GIntegralAnalytical3[Sqrt[-\[Kappa]],Abs[(-\[Rho]+\[Nu] z1+Sqrt[1-2 \[Nu] \[Rho] z1+\[Nu]^2 z1^2])/(1-\[Rho])]/Sqrt[2] ,Sqrt[T]],{z1,-0.2,0.2},AxesLabel->{"z","GIntegralAnalytical3[x[z]]"},PlotRange->All]];
intrinsec+\[Alpha]/2 Sqrt[2/\[Pi]]SqB0B\[Alpha]z  f1overf0 Sqrt[I0] GIntegralAnalytical2[-\[Kappa],Abs[x]/Sqrt[2],Sqrt[T]]]


(* ::Input::Initialization:: *)
SABRgeneric6[intrinsec_,z_,b1_,b2_,zavg_,SqB0B\[Alpha]z_,T_,\[Mu]_,\[Alpha]_,\[Rho]_,\[Nu]_,printflag_]:=
Module[{x,I0,I1,I2,\[Kappa],f1overf0,xp},
x=Log[(-\[Rho]+\[Nu] z+Sqrt[1-2 \[Nu] \[Rho] z+\[Nu]^2 z^2])/(1-\[Rho])]/\[Nu];(*  x    est la distance geodesique , on approxime la prob de transition par \[ExponentialE]^(-x^2/(2T))(1+..)  *)
If[printflag>0,Print["SABRgeneric5:z=",SetPrecision[z,12]," zavg=",SetPrecision[zavg,12]," \[Rho]=",SetPrecision[\[Rho],12]," \[Nu]=",SetPrecision[\[Nu],12]," Iz2=",SetPrecision[1-2 \[Nu] \[Rho] z+\[Nu]^2 z^2,12]," x=",SetPrecision[x,12]]];
If[printflag>20,
Plot[(-\[Rho]+\[Nu] z1+Sqrt[1-2 \[Nu] \[Rho] z1+\[Nu]^2 z1^2])/(1-\[Rho]),{z1,-0.2,0.2},AxesLabel->{"z","x"}]];

I0=Sqrt[1+z \[Nu] (z \[Nu]-2 \[Rho])];
I1=(z \[Nu]-\[Rho])/I0;
I2=(1-\[Rho]^2)/I0^3;
(*\[Kappa]=(12  \[Mu]+ (-3 b1^2 +2 b2) \[Alpha]^2-4 z^2 \[Mu]^2+(2 I0 I2-I1^2) \[Nu]^2+(6 b1 \[Alpha] -16 zavg \[Mu] )\[Nu] \[Rho])/(8 (1+zavg  \[Nu] (z  \[Nu]-2 \[Rho])));*)
\[Kappa]=(12  \[Mu]+ (-3 b1^2 +2 b2) \[Alpha]^2-4 z^2 \[Mu]^2+((3I0^2-1) I0 I2-I1^2) \[Nu]^2+(6 b1 \[Alpha] -16 z \[Mu] )\[Nu] \[Rho])/8 ;(* avec la modif qui stabilise et qui reprice hagan *)
f1overf0=E^((1/4 \[Alpha] b1 \[Nu] \[Rho]+\[Mu]/2) z^2);

If[printflag>20,
Plot[ GIntegralAnalytical3[Sqrt[-\[Kappa]],Abs[(-\[Rho]+\[Nu] z1+Sqrt[1-2 \[Nu] \[Rho] z1+\[Nu]^2 z1^2])/(1-\[Rho])]/Sqrt[2] ,Sqrt[T]],{z1,-0.2,0.2},AxesLabel->{"z","GIntegralAnalytical3[x[z]]"},PlotRange->All]];

If[printflag>0,Print["SABRgeneric5: f1overf0=",SetPrecision[f1overf0,12]," SqB0B\[Alpha]z=",SetPrecision[SqB0B\[Alpha]z,12]," I0=",SetPrecision[I0,12]," \[Kappa]=",SetPrecision[\[Kappa],12]," GIntegralAnalytical[\!\(\*SqrtBox[\(-\[Kappa]\)]\),\!\(\*FractionBox[\(Abs[x]\), SqrtBox[\(2\)]]\),\!\(\*SqrtBox[\(T\)]\)]=",SetPrecision[GIntegralAnalytical[Sqrt[-\[Kappa]],Abs[x]/Sqrt[2],Sqrt[T]],12],
" GIntegralAnalytical2[-\[Kappa],\!\(\*FractionBox[\(Abs[x]\), SqrtBox[\(2\)]]\),\!\(\*SqrtBox[\(T\)]\)]=",SetPrecision[GIntegralAnalytical2[-\[Kappa],Abs[x]/Sqrt[2],Sqrt[T]],12]," intrinsec=",intrinsec]];
If[printflag>20,Plot[ GIntegralAnalytical3[Sqrt[-\[Kappa]],Abs[(-\[Rho]+\[Nu] z1+Sqrt[1-2 \[Nu] \[Rho] z1+\[Nu]^2 z1^2])/(1-\[Rho])]/Sqrt[2] ,Sqrt[T]],{z1,-0.2,0.2},AxesLabel->{"z","GIntegralAnalytical3[x[z]]"},PlotRange->All]];
intrinsec+1.1 \[Alpha]/2 Sqrt[2/\[Pi]]SqB0B\[Alpha]z  f1overf0 Sqrt[I0] GIntegralAnalytical2[-\[Kappa],Abs[x]/Sqrt[2],Sqrt[T]]]


(* ::Input::Initialization:: *)
SABRgeneric5[intrinsec_,z_,b1_,b2_,SqB0B\[Alpha]z_,f_,K_,T_,\[Mu]_,\[Alpha]_,\[Rho]_,\[Nu]_,printflag_]:=Module[{x,d,I0,I1,I2,\[Kappa],f1overf0,xp,z1},
x=Log[(-\[Rho]+\[Nu] z+Sqrt[1-2 \[Nu] \[Rho] z+\[Nu]^2 z^2])/(1-\[Rho])]/\[Nu];(*  x    est la distance geodesique , on approxime la prob de transition par \[ExponentialE]^(-x^2/(2T))DetVanVleck (1+..)  *)
If[printflag>0,
Plot[(-\[Rho]+\[Nu] z1+Sqrt[1-2 \[Nu] \[Rho] z1+\[Nu]^2 z1^2])/(1-\[Rho]),{z1,-0.2,0.2},AxesLabel->{"z","x"}]];
f1overf0=E^((1/4 \[Alpha] b1 \[Nu] \[Rho]+\[Mu]/2) z^2);

I0=Sqrt[1-2 \[Nu] \[Rho] z+\[Nu]^2 z^2];
I1=(z \[Nu]-\[Rho])/I0;
I2=(1-\[Rho]^2)/I0^3;

(*\[Kappa]=(12  \[Mu]+ (-3 b1^2 \[Alpha]^2+2 b2 \[Alpha]^2-4 z^2 \[Mu]^2-I1^2 \[Nu]^2+2 I0 I2 \[Nu]^2+6 b1 \[Alpha] \[Nu] \[Rho]-16 z \[Mu] \[Nu] \[Rho]))/(8 I0^2);*)

\[Kappa]=(12  \[Mu]+ (-3 b1^2 \[Alpha]^2+2 b2 \[Alpha]^2-4 z^2 \[Mu]^2-I1^2 \[Nu]^2+(3I0^2-1) I0 I2 \[Nu]^2+6 b1 \[Alpha] \[Nu] \[Rho]-16 z \[Mu] \[Nu] \[Rho]))/8 ; (* avec la modif qui stabilise et qui reprice hagan *)



If[printflag>0,
Plot[ GIntegralAnalytical3[Sqrt[-\[Kappa]],Abs[(-\[Rho]+\[Nu] z1+Sqrt[1-2 \[Nu] \[Rho] z1+\[Nu]^2 z1^2])/(1-\[Rho])]/Sqrt[2] ,Sqrt[T]],{z1,-0.2,0.2},AxesLabel->{"z","GIntegralAnalytical3[x[z]]"},PlotRange->All]];
If[printflag>0,Print["SABRgeneric5:z=",z,",  x=",x]];

If[printflag>0,Print["SABRgeneric5: f1overf0=",f1overf0," SqB0B\[Alpha]z=",SqB0B\[Alpha]z," I0=",I0," \[Kappa]=",\[Kappa]," GIntegralAnalytical3[\!\(\*SqrtBox[\(-\[Kappa]\)]\),\!\(\*FractionBox[\(Abs[x]\), \(\(SqrtBox[2]\)\(\\\ \)\)]\),\!\(\*SqrtBox[\(T\)]\)]=",GIntegralAnalytical3[Sqrt[-\[Kappa]],Abs[x]/Sqrt[2] ,Sqrt[T]]]];
intrinsec+f1overf0/Sqrt[2\[Pi]] \[Alpha]  SqB0B\[Alpha]z Sqrt[I0] Re[GIntegralAnalytical2[-\[Kappa],Abs[x]/Sqrt[2] ,Sqrt[T]]]]


(* ::Input::Initialization:: *)
SABRUsuelPlus5[f_,K_,T_,A_,\[Alpha]_,\[Beta]_,\[Rho]_,\[Nu]_,printflag_]:=Module[{z,b1,b2,B0B\[Alpha]z,favg,zavg,intrinsec,I0,I1,I2,call,result},
z=(  (A+f)^(1-\[Beta]) -(A+K)^(1-\[Beta]))/(\[Alpha]  (1-\[Beta]));
favg=(f+K)/2;
b1=\[Beta] (favg+A)^(\[Beta]-1);
b2=\[Beta](\[Beta]-1)(favg+A)^(\[Beta]-2) (favg+A)^\[Beta]+b1^2;
B0B\[Alpha]z=(A+K)^\[Beta] (A+f)^\[Beta];
intrinsec=Max[f-K,0];
call=SABRgeneric5[intrinsec,z,b1,b2,Sqrt[B0B\[Alpha]z],f,K,T,0,\[Alpha],\[Rho],\[Nu],printflag];
If[printflag>0,Print["b1=",b1," b2=",b2," \!\(\*SqrtBox[\(B0B\[Alpha]z\)]\)=",Sqrt[B0B\[Alpha]z]," z=",z," intrinsec=",intrinsec," favg=",favg," call=",call]];
result={ImpVolBS[f,K,T,1,call],call};
result
]


(* ::Input::Initialization:: *)
SABRgeneric7[intrinsec_,z_,b1_,b2_,SqB0B\[Alpha]z_,f_,K_,T_,\[Mu]_,\[Alpha]_,\[Rho]_,\[Nu]_,printflag_]:=Module[{x,d,I0,I1,I2,\[Kappa],f1overf0,xp},
(*  x    est la distance geodesique , on approxime la prob de transition par \[ExponentialE]^(-x^2/(2T))(1+..)  *)
x=1/\[Nu] ArcCosh[(-1-z \[Nu] (z \[Nu]+\[Rho] Sqrt[1+z^2 \[Nu]^2-2 z  \[Nu] \[Rho]])+ \[Rho] (2 z \[Nu]+\[Rho] Sqrt[1+z^2 \[Nu]^2-2 z  \[Nu] \[Rho]]))/( Sqrt[1+z^2 \[Nu]^2-2 z  \[Nu] \[Rho]] (-1+\[Rho]^2))];
f1overf0=E^((1/4 \[Alpha] b1 \[Nu] \[Rho]+\[Mu]/2) z^2);

I0=Sqrt[1-2 \[Nu] \[Rho] z+\[Nu]^2 z^2];
I1=(z \[Nu]-\[Rho])/I0;
I2=(1-\[Rho]^2)/I0^3;

(* original  : \[Kappa]=(12  \[Mu]+ (-3 b1^2 \[Alpha]^2+2 b2 \[Alpha]^2-4 z^2 \[Mu]^2-I1^2 \[Nu]^2+2 I0 I2 \[Nu]^2+6 b1 \[Alpha] \[Nu] \[Rho]-16 z \[Mu] \[Nu] \[Rho]))/(8 I0^2); *)

\[Kappa]=(12  \[Mu]+ (-3 b1^2 +2 b2) \[Alpha]^2-4 z^2 \[Mu]^2+((3I0^2-1) I0 I2-I1^2) \[Nu]^2+(6 b1 \[Alpha] -16 z \[Mu] )\[Nu] \[Rho])/8 ;(* avec la modif qui stabilise et qui reprice hagan *)
If[printflag>0,Print["SABRgeneric7:z=",z,",  x=",x," xp=",xp]];

If[printflag>0,Print["SABRgeneric7: f1overf0=",f1overf0," SqB0B\[Alpha]z=",SqB0B\[Alpha]z," I0=",I0," \[Kappa]=",\[Kappa]," GIntegralAnalytical3[\!\(\*SqrtBox[\(-\[Kappa]\)]\),\!\(\*FractionBox[\(Abs[x]\), \(\(SqrtBox[2]\)\(\\\ \)\)]\),\!\(\*SqrtBox[\(T\)]\)]=",GIntegralAnalytical3[Sqrt[-\[Kappa]],Abs[x]/Sqrt[2] ,Sqrt[T]]]];
intrinsec+f1overf0/Sqrt[2\[Pi]] \[Alpha]  SqB0B\[Alpha]z Sqrt[I0] Re[GIntegralAnalytical3[Sqrt[-\[Kappa]],Abs[x]/Sqrt[2] ,Sqrt[T]]]]


(* ::Input::Initialization:: *)
SABRUsuelPlus7[f_,K_,T_,A_,\[Alpha]_,\[Beta]_,\[Rho]_,\[Nu]_,printflag_]:=Module[{z,b1,b2,B0B\[Alpha]z,favg,zavg,intrinsec,I0,I1,I2,call,result},
z=(  (A+f)^(1-\[Beta]) -(A+K)^(1-\[Beta]))/(\[Alpha]  (1-\[Beta]));
favg=(f+K)/2;
b1=\[Beta] (favg+A)^(\[Beta]-1);
b2=\[Beta](\[Beta]-1)(favg+A)^(\[Beta]-2) (favg+A)^\[Beta]+b1^2;
B0B\[Alpha]z=(A+K)^\[Beta] (A+f)^\[Beta];
intrinsec=Max[f-K,0];
call=SABRgeneric7[intrinsec,z,b1,b2,Sqrt[B0B\[Alpha]z],f,K,T,0,\[Alpha],\[Rho],\[Nu],printflag];
If[printflag>0,Print["b1=",b1," b2=",b2," \!\(\*SqrtBox[\(B0B\[Alpha]z\)]\)=",Sqrt[B0B\[Alpha]z]," z=",z," intrinsec=",intrinsec," favg=",favg," call=",call]];
result={ImpVolBS[f,K,T,1,call],call};
result
]


(* ::Input::Initialization:: *)
SABRgenericNormalVol[f_,K_,z_,b0_,b1_,b2_,b3_,b4_,bz_,T_,\[Mu]_,\[Alpha]_,\[Rho]_,\[Nu]_,printflag_]:=Module[{x,\[Sigma]N,Q,ratio},
If[printflag>0, Print["SABRgenericNormalVol:K=",K," z=",z," b0=",b0," b1=",b1," b2=",b2," b3=",b3," b4=",b4," bz=",bz," \[Mu]=",\[Mu]," \[Alpha]=",\[Alpha]," \[Rho]=",\[Rho]," \[Nu]=",\[Nu]]];
If[Abs[f-K]<f/5,
(* development a la monnaie *)
\[Sigma]N=-1/(362880 b0^3 \[Alpha]^3) (-362880 b0^4 \[Alpha]^4-181440 b0^4 b1 (f-K) \[Alpha]^4+30240 b0^4 b1^2 (f-K)^2 \[Alpha]^4-60480 b0^4 b2 (f-K)^2 \[Alpha]^4-15120 b0^4 b1^3 (f-K)^3 \[Alpha]^4+30240 b0^4 b1 b2 (f-K)^3 \[Alpha]^4-15120 b0^4 b3 (f-K)^3 \[Alpha]^4+9576 b0^4 b1^4 (f-K)^4 \[Alpha]^4-23184 b0^4 b1^2 b2 (f-K)^4 \[Alpha]^4+8064 b0^4 b2^2 (f-K)^4 \[Alpha]^4+9072 b0^4 b1 b3 (f-K)^4 \[Alpha]^4-3024 b0^4 b4 (f-K)^4 \[Alpha]^4+181440 b0^3 (f-K) \[Alpha]^3 \[Nu] \[Rho]-10080 b0^2 b1^2 (f-K)^4 \[Alpha]^2 \[Nu]^2 (2-3 \[Rho]^2)+30240 b0^2 (f-K)^2 \[Alpha]^2 \[Nu]^2 (-2+3 \[Rho]^2)-15120 b0^2 b1 (f-K)^3 \[Alpha]^2 \[Nu]^2 (-2+3 \[Rho]^2)-5040 b0^2 b2 (f-K)^4 \[Alpha]^2 \[Nu]^2 (-2+3 \[Rho]^2)+15120 b0 (f-K)^3 \[Alpha] \[Nu]^3 \[Rho] (-5+6 \[Rho]^2)-15120 b0 b1 (f-K)^4 \[Alpha] \[Nu]^3 \[Rho] (-5+6 \[Rho]^2)+504 (f-K)^4 \[Nu]^4 (34-240 \[Rho]^2+225 \[Rho]^4))-1/(362880 b0^3 \[Alpha]^3) (T (-1512 b0^6 (20 b2+(10 b3+3 b4 (f-K)) (f-K)) \[Alpha]^6+9 b0^6 (1680 b1^2-28 b1 (60 b2+(36 b3+11 b4 (f-K)) (f-K)) (f-K)-(616 b2^2+20 b2 (21 b3+5 b4 (f-K)) (f-K)+55 b3^2 (f-K)^2) (f-K)^2) \[Alpha]^6+7560 b0^6 b1^3 (f-K) \[Alpha]^6-1386 b0^6 b1^4 (f-K)^2 \[Alpha]^6+693 b0^6 b1^5 (f-K)^3 \[Alpha]^6+2772 b0^6 b1 b2^2 (f-K)^3 \[Alpha]^6-439 b0^6 b1^6 (f-K)^4 \[Alpha]^6-2496 b0^6 b1^2 b2^2 (f-K)^4 \[Alpha]^6+740 b0^6 b2^3 (f-K)^4 \[Alpha]^6+756 b0^5 b2^2 (f-K)^3 \[Alpha]^5 \[Nu] \[Rho]+378 b0^5 b1^2 (18 b2+5 b3 (f-K)) (f-K)^3 \[Alpha]^5 \[Nu] \[Rho]+2205 b0^5 b1^5 (f-K)^4 \[Alpha]^5 \[Nu] \[Rho]+1260 b0^5 b1 b2^2 (f-K)^4 \[Alpha]^5 \[Nu] \[Rho]-2268 b0^5 (40 b1-(f-K) (20 b2+(f-K) (10 b3+3 b4 f-3 b4 K))) \[Alpha]^5 \[Nu] \[Rho]-45360 b0^3 b1 (f-K)^2 \[Alpha]^3 \[Nu]^3 \[Rho]+18 b0^5 b1^2 (f-K) \[Alpha]^5 (b0 (308 b2+(77 b3+17 b4 (f-K)) (f-K)) (f-K) \[Alpha]-3780 \[Nu] \[Rho])+3 b0^5 b1^4 (f-K)^3 \[Alpha]^5 (647 b0 b2 (f-K) \[Alpha]-1197 \[Nu] \[Rho])-18 b0^5 b1^3 (f-K)^2 \[Alpha]^5 (b0 (154 b2+51 b3 (f-K)) (f-K) \[Alpha]-420 \[Nu] \[Rho])+180 b0^5 b1 b2 (f-K)^2 \[Alpha]^5 (11 b0 b3 (f-K)^2 \[Alpha]-84 \[Nu] \[Rho])-1890 b0^3 b1^2 (f-K)^3 \[Alpha]^3 \[Nu]^3 \[Rho] (-13+\[Rho]^2)+1890 b0^3 b1^3 (f-K)^4 \[Alpha]^3 \[Nu]^3 \[Rho] (-9+\[Rho]^2)+3780 b0^3 b2 (f-K)^3 \[Alpha]^3 \[Nu]^3 \[Rho] (-1+\[Rho]^2)+1890 b0^3 b3 (f-K)^4 \[Alpha]^3 \[Nu]^3 \[Rho] (-1+\[Rho]^2)+126 b0^4 b4 (f-K)^4 \[Alpha]^4 \[Nu]^2 (-20+3 \[Rho]^2)+630 b0^4 b3 (f-K)^3 \[Alpha]^4 \[Nu]^2 (-14+3 \[Rho]^2)-378 b0^4 b1 b3 (f-K)^4 \[Alpha]^4 \[Nu]^2 (-10+3 \[Rho]^2)-1260 b0^4 b1^2 (f-K)^2 \[Alpha]^4 \[Nu]^2 (-8+3 \[Rho]^2)+2520 b0^4 b2 (f-K)^2 \[Alpha]^4 \[Nu]^2 (-8+3 \[Rho]^2)-1260 b0^4 b1 b2 (f-K)^3 \[Alpha]^4 \[Nu]^2 (-8+3 \[Rho]^2)+7560 b0^3 (f-K) \[Alpha]^3 \[Nu]^3 \[Rho] (-4+3 \[Rho]^2)+15120 b0^4 \[Alpha]^4 \[Nu]^2 (-2+3 \[Rho]^2)+105 b0^2 b2 (f-K)^4 \[Alpha]^2 \[Nu]^4 (-2+3 \[Rho]^2)^2-84 b0^4 b2^2 (f-K)^4 \[Alpha]^4 \[Nu]^2 (-35+12 \[Rho]^2)-21 b0^4 b1^4 (f-K)^4 \[Alpha]^4 \[Nu]^2 (-155+57 \[Rho]^2)+42 b0^4 b1^2 b2 (f-K)^4 \[Alpha]^4 \[Nu]^2 (-190+69 \[Rho]^2)-315 b0 b1 (f-K)^4 \[Alpha] \[Nu]^5 \[Rho] (56-138 \[Rho]^2+81 \[Rho]^4)+126 b0^2 (f-K)^2 \[Alpha]^2 \[Nu]^4 (64-300 \[Rho]^2+225 \[Rho]^4)-21 b0^2 b1^2 (f-K)^4 \[Alpha]^2 \[Nu]^4 (-86-120 \[Rho]^2+225 \[Rho]^4)+63 b0 (f-K)^3 \[Alpha] \[Nu]^5 \[Rho] (364-1050 \[Rho]^2+675 \[Rho]^4)+(f-K)^4 \[Nu]^6 (-4660+59031 \[Rho]^2-123795 \[Rho]^4+68985 \[Rho]^6)-630 b0^4 b1^3 (f-K)^3 \[Alpha]^4 \[Nu] (8 b0 b2 (f-K) \[Alpha] \[Rho]+\[Nu] (8-3 \[Rho]^2))-1512 b0^4 b1 (f-K) \[Alpha]^4 \[Nu] (b0 b3 (f-K)^2 \[Alpha] \[Rho]-5 \[Nu] (-2+21 \[Rho]^2))-63 b0^2 b1 (f-K)^3 \[Alpha]^2 \[Nu]^3 (60 b0 b2 (f-K) \[Alpha] \[Rho] (-3+\[Rho]^2)+\[Nu] (64-120 \[Rho]^2+45 \[Rho]^4)))),
(* cas normal *)
Q=Sqrt[1+z^2 \[Nu]^2-2 z \[Nu] \[Rho]];

x=1/\[Nu] Log[(z \[Nu]-\[Rho]+Q)/(1-\[Rho])];
ratio=x/(f-K);
If[printflag>0,Print["SABRgenericNormalVol:Q=",Q," x/(f-K)=",ratio," coef en T =", (1/4 b0 b1 z^2 \[Alpha] \[Nu] \[Rho]+Log[Abs[(Sqrt[Q b0 bz] \[Alpha]  x)/(f-K) ]])/x^2 ]];

\[Sigma]N=Abs[ ((f-K)  (1+(T  (1/4 b0 b1 z^2 \[Alpha] \[Nu] \[Rho]+Log[Abs[(Sqrt[Q b0 bz] \[Alpha]  x)/(f-K) ]]))/x^2))/x]]]


(* ::Input::Initialization:: *)
SABRgenericNormalVol[f_,K_,z_,b0_,b1_,b2_,bz_,T_,\[Mu]_,\[Alpha]_,\[Rho]_,\[Nu]_,printflag_]:=Module[{x,\[Sigma]N,Q,ratio},
 If[printflag>0,Print["SABRgenericNormalVol:K=",K," z=",z," b0=",b0," b1=",b1," b2=",b2," bz=",bz," \[Mu]=",\[Mu]," \[Alpha]=",\[Alpha]," \[Rho]=",\[Rho]," \[Nu]=",\[Nu]]];
If[Abs[f-K]<Max[0.05f,0.005],If[printflag>0,Print["++++DL"]];
(* development a la monnaie *)
\[Sigma]N=-1/(362880 b0^3 \[Alpha]^3) (-362880 b0^4 \[Alpha]^4-181440 b0^4 b1 (f-K) \[Alpha]^4+30240 b0^4 b1^2 (f-K)^2 \[Alpha]^4-60480 b0^4 b2 (f-K)^2 \[Alpha]^4-15120 b0^4 b1^3 (f-K)^3 \[Alpha]^4+30240 b0^4 b1 b2 (f-K)^3 \[Alpha]^4+9576 b0^4 b1^4 (f-K)^4 \[Alpha]^4-23184 b0^4 b1^2 b2 (f-K)^4 \[Alpha]^4+8064 b0^4 b2^2 (f-K)^4 \[Alpha]^4+181440 b0^3 (f-K) \[Alpha]^3 \[Nu] \[Rho]-10080 b0^2 b1^2 (f-K)^4 \[Alpha]^2 \[Nu]^2 (2-3 \[Rho]^2)+30240 b0^2 (f-K)^2 \[Alpha]^2 \[Nu]^2 (-2+3 \[Rho]^2)-15120 b0^2 b1 (f-K)^3 \[Alpha]^2 \[Nu]^2 (-2+3 \[Rho]^2)-5040 b0^2 b2 (f-K)^4 \[Alpha]^2 \[Nu]^2 (-2+3 \[Rho]^2)+15120 b0 (f-K)^3 \[Alpha] \[Nu]^3 \[Rho] (-5+6 \[Rho]^2)-15120 b0 b1 (f-K)^4 \[Alpha] \[Nu]^3 \[Rho] (-5+6 \[Rho]^2)+504 (f-K)^4 \[Nu]^4 (34-240 \[Rho]^2+225 \[Rho]^4))-1/(362880 b0^3 \[Alpha]^3) (T (-30240 b0^6 b2 \[Alpha]^6+504 b0^6 (30 b1^2-30 b1 b2 (f-K)-11 b2^2 (f-K)^2) \[Alpha]^6+7560 b0^6 b1^3 (f-K) \[Alpha]^6-1386 b0^6 b1^4 (f-K)^2 \[Alpha]^6+693 b0^6 b1^5 (f-K)^3 \[Alpha]^6+2772 b0^6 b1 b2^2 (f-K)^3 \[Alpha]^6-439 b0^6 b1^6 (f-K)^4 \[Alpha]^6-2496 b0^6 b1^2 b2^2 (f-K)^4 \[Alpha]^6+740 b0^6 b2^3 (f-K)^4 \[Alpha]^6-15120 b0^5 b1 b2 (f-K)^2 \[Alpha]^5 \[Nu] \[Rho]+6804 b0^5 b1^2 b2 (f-K)^3 \[Alpha]^5 \[Nu] \[Rho]+756 b0^5 b2^2 (f-K)^3 \[Alpha]^5 \[Nu] \[Rho]+2205 b0^5 b1^5 (f-K)^4 \[Alpha]^5 \[Nu] \[Rho]+1260 b0^5 b1 b2^2 (f-K)^4 \[Alpha]^5 \[Nu] \[Rho]-45360 b0^5 (2 b1+b2 (-f+K)) \[Alpha]^5 \[Nu] \[Rho]-45360 b0^3 b1 (f-K)^2 \[Alpha]^3 \[Nu]^3 \[Rho]+18 b0^5 b1^2 (f-K) \[Alpha]^5 (308 b0 b2 (f-K) \[Alpha]-3780 \[Nu] \[Rho])+3 b0^5 b1^4 (f-K)^3 \[Alpha]^5 (647 b0 b2 (f-K) \[Alpha]-1197 \[Nu] \[Rho])-18 b0^5 b1^3 (f-K)^2 \[Alpha]^5 (154 b0 b2 (f-K) \[Alpha]-420 \[Nu] \[Rho])+1260 b0^4 b1^2 (f-K)^2 \[Alpha]^4 \[Nu]^2 (8-3 \[Rho]^2)-1890 b0^3 b1^2 (f-K)^3 \[Alpha]^3 \[Nu]^3 \[Rho] (-13+\[Rho]^2)+1890 b0^3 b1^3 (f-K)^4 \[Alpha]^3 \[Nu]^3 \[Rho] (-9+\[Rho]^2)+3780 b0^3 b2 (f-K)^3 \[Alpha]^3 \[Nu]^3 \[Rho] (-1+\[Rho]^2)+2520 b0^4 b2 (f-K)^2 \[Alpha]^4 \[Nu]^2 (-8+3 \[Rho]^2)-1260 b0^4 b1 b2 (f-K)^3 \[Alpha]^4 \[Nu]^2 (-8+3 \[Rho]^2)+7560 b0^3 (f-K) \[Alpha]^3 \[Nu]^3 \[Rho] (-4+3 \[Rho]^2)+15120 b0^4 \[Alpha]^4 \[Nu]^2 (-2+3 \[Rho]^2)+105 b0^2 b2 (f-K)^4 \[Alpha]^2 \[Nu]^4 (-2+3 \[Rho]^2)^2-84 b0^4 b2^2 (f-K)^4 \[Alpha]^4 \[Nu]^2 (-35+12 \[Rho]^2)+7560 b0^4 b1 (f-K) \[Alpha]^4 \[Nu]^2 (-2+21 \[Rho]^2)-21 b0^4 b1^4 (f-K)^4 \[Alpha]^4 \[Nu]^2 (-155+57 \[Rho]^2)+42 b0^4 b1^2 b2 (f-K)^4 \[Alpha]^4 \[Nu]^2 (-190+69 \[Rho]^2)-315 b0 b1 (f-K)^4 \[Alpha] \[Nu]^5 \[Rho] (56-138 \[Rho]^2+81 \[Rho]^4)+126 b0^2 (f-K)^2 \[Alpha]^2 \[Nu]^4 (64-300 \[Rho]^2+225 \[Rho]^4)-21 b0^2 b1^2 (f-K)^4 \[Alpha]^2 \[Nu]^4 (-86-120 \[Rho]^2+225 \[Rho]^4)+63 b0 (f-K)^3 \[Alpha] \[Nu]^5 \[Rho] (364-1050 \[Rho]^2+675 \[Rho]^4)+(f-K)^4 \[Nu]^6 (-4660+59031 \[Rho]^2-123795 \[Rho]^4+68985 \[Rho]^6)-630 b0^4 b1^3 (f-K)^3 \[Alpha]^4 \[Nu] (8 b0 b2 (f-K) \[Alpha] \[Rho]+\[Nu] (8-3 \[Rho]^2))-63 b0^2 b1 (f-K)^3 \[Alpha]^2 \[Nu]^3 (60 b0 b2 (f-K) \[Alpha] \[Rho] (-3+\[Rho]^2)+\[Nu] (64-120 \[Rho]^2+45 \[Rho]^4)))),
(* cas normal *)
Q=Sqrt[1+z^2 \[Nu]^2-2 z \[Nu] \[Rho]];

x=1/\[Nu] Log[(z \[Nu]-\[Rho]+Q)/(1-\[Rho])];
ratio=x/(f-K);
If[printflag>0,Print["SABRgenericNormalVol:Q=",Q," x/(f-K)=",ratio," arg de l'abs :=",(Sqrt[Q b0 bz] \[Alpha]  x)/(f-K) ," coef en T =", (1/4 b0 b1 z^2 \[Alpha] \[Nu] \[Rho]+Log[Abs[(Sqrt[Q b0 bz] \[Alpha]  x)/(f-K) ]])/x^2 ]];

\[Sigma]N=Abs[ ((f-K)  (1+(T  (1/4 b0 b1 z^2 \[Alpha] \[Nu] \[Rho]+Log[Abs[(Sqrt[Q b0 bz] \[Alpha]  x)/(f-K) ]]))/x^2))/x]]]


(* ::Input::Initialization:: *)
SABRgenericOption[f_,K_,z_,b0_,b1_,b2_,bz_,T_,\[Mu]_,\[Alpha]_,\[Rho]_,\[Nu]_,printflag_]:=Module[{\[Sigma]N},
\[Sigma]N=SABRgenericNormalVol[f,K,z,b0,b1,b2,bz,T,\[Mu],\[Alpha],\[Rho],\[Nu],printflag];
If[printflag>0,Print["SABRgenericOption:\[Sigma]N=",\[Sigma]N]];
NormalCall[f,\[Sigma]N,K,T]]


(* ::Input::Initialization:: *)
SABRgenericOption[f_,K_,z_,b0_,b1_,b2_,b3_,b4_,bz_,T_,\[Mu]_,\[Alpha]_,\[Rho]_,\[Nu]_,printflag_]:=Module[{\[Sigma]N},
\[Sigma]N=SABRgenericNormalVol[f,K,z,b0,b1,b2,b3,b4,bz,T,\[Mu],\[Alpha],\[Rho],\[Nu],printflag];
If[printflag>0,Print["SABRgenericOption:\[Sigma]N=",\[Sigma]N]];
NormalCall[f,\[Sigma]N,K,T]]


(* ::Input::Initialization:: *)
SABRNormalVol[f_,K_,T_,\[Alpha]_,\[Rho]_,\[Nu]_,printflag_]:=Module[{z,b0,b1,b2,b3,b4,bz,favg,zavg,intrinsec,I0,I1,I2,call,result},
z=(f-K)/\[Alpha];
b0=1;
b1=0;
b2=0;
bz=1;
SABRgenericNormalVol[f,K,z,b0,b1,b2,bz,T,0,\[Alpha],\[Rho],\[Nu],printflag]
]


(* ::Input::Initialization:: *)
SABRUsuelPlus6VolNormal[f_,K_,T_,\[Alpha]_,\[Beta]_,\[Rho]_,\[Nu]_,printflag_]:=Module[{z,b0,b1,b2,b3,b4,bz,favg,zavg,intrinsec,I0,I1,I2,call,result},
If[Abs[\[Beta]-1]<0.01,z=(Log[f]-Log[K])/\[Alpha]+((-Log[f]^2+Log[K]^2) (\[Beta]-1))/(2 \[Alpha])+((Log[f]^3-Log[K]^3) (\[Beta]-1)^2)/(6 \[Alpha]),
z=(  (f)^(1-\[Beta]) -(K)^(1-\[Beta]))/(\[Alpha]  (1-\[Beta]))];
favg=f;
b0=(K)^\[Beta];
b1=\[Beta]/K;
b2=\[Beta] (\[Beta]-1)/(K^2);
bz=(f)^\[Beta];
SABRgenericNormalVol[f,K,z,b0,b1,b2,bz,T,0,\[Alpha],\[Rho],\[Nu],printflag]
]


(* ::Input::Initialization:: *)
SABRUsuelPlus6VolNormal2[f_,K_,T_,\[Alpha]_,\[Beta]_,\[Rho]_,\[Nu]_,printflag_]:=Module[{z,b0,b1,b2,b3,b4,bz,favg,zavg,intrinsec,I0,I1,I2,call,result},
If[Abs[\[Beta]-1]<0.01,z=(Log[f]-Log[K])/\[Alpha]+((-Log[f]^2+Log[K]^2) (\[Beta]-1))/(2 \[Alpha])+((Log[f]^3-Log[K]^3) (\[Beta]-1)^2)/(6 \[Alpha]),
z=(  (f)^(1-\[Beta]) -(K)^(1-\[Beta]))/(\[Alpha]  (1-\[Beta]))];
favg=f;
b0=(K)^\[Beta];
b1=\[Beta]/K;
b2=\[Beta] (\[Beta]-1)/(K^2);
b3=\[Beta](\[Beta]-1)(\[Beta]-2)/(K^3);
b4=\[Beta](\[Beta]-1)(\[Beta]-2)(\[Beta]-3)/(K^4);
bz=(f)^\[Beta];
SABRgenericNormalVol[f,K,z,b0,b1,b2,b3,b4,bz,T,0,\[Alpha],\[Rho],\[Nu],printflag]
]


(* ::Input::Initialization:: *)
SABRUsuelPlus6Option[f_,K_,T_,\[Alpha]_,\[Beta]_,\[Rho]_,\[Nu]_,printflag_]:=Module[{z,b0,b1,b2,b3,b4,bz,favg,zavg,intrinsec,I0,I1,I2,call,result},
If[Abs[\[Beta]-1]<0.01,z=(Log[f]-Log[K])/\[Alpha]+((-Log[f]^2+Log[K]^2) (\[Beta]-1))/(2 \[Alpha])+((Log[f]^3-Log[K]^3) (\[Beta]-1)^2)/(6 \[Alpha]),
z=(  (f)^(1-\[Beta]) -(K)^(1-\[Beta]))/(\[Alpha]  (1-\[Beta]))];
favg=f;
b0=(K)^\[Beta];
b1=\[Beta]/K;
b2=\[Beta] (\[Beta]-1)/(K^2);
bz=(f)^\[Beta];
SABRgenericOption[f,K,z,b0,b1,b2,bz,T,0,\[Alpha],\[Rho],\[Nu],printflag]
]


(* ::Input::Initialization:: *)
SABRUsuelPlus6Option2[f_,K_,T_,\[Alpha]_,\[Beta]_,\[Rho]_,\[Nu]_,printflag_]:=Module[{z,b0,b1,b2,b3,b4,bz,favg,zavg,intrinsec,I0,I1,I2,call,result},
If[Abs[\[Beta]-1]<0.01,z=(Log[f]-Log[K])/\[Alpha]+((-Log[f]^2+Log[K]^2) (\[Beta]-1))/(2 \[Alpha])+((Log[f]^3-Log[K]^3) (\[Beta]-1)^2)/(6 \[Alpha]),
z=(  (f)^(1-\[Beta]) -(K)^(1-\[Beta]))/(\[Alpha]  (1-\[Beta]))];
favg=f;
b0=(K)^\[Beta];
b1=\[Beta]/K;
b2=\[Beta] (\[Beta]-1)/(K^2);
b3=\[Beta](\[Beta]-1)(\[Beta]-2)/(K^3);
b4=\[Beta](\[Beta]-1)(\[Beta]-2)(\[Beta]-3)/(K^4);
bz=(f)^\[Beta];
SABRgenericOption[f,K,z,b0,b1,b2,b3,b4,bz,T,0,\[Alpha],\[Rho],\[Nu],printflag]
]


(* ::Input::Initialization:: *)
SABRgenericNormalVol2[f_,K_,z_,b0_,b1_,b2_,b3_,b4_,bz_,T_,\[Mu]_,\[Alpha]_,\[Rho]_,\[Nu]_,printflag_]:=Module[{x,\[Sigma]N,Q,ratio},
If[printflag>0,Print["SABRgenericNormalVol2:K=",K," z=",z," b0=",b0," b1=",b1," b2=",b2," b3=",b3," b4=",b4," bz=",bz," \[Mu]=",\[Mu]," \[Alpha]=",\[Alpha]," \[Rho]=",\[Rho]," \[Nu]=",\[Nu]]];
If[Abs[f-K]<0.01f,
(* development a la monnaie *)
\[Sigma]N=1/5760 (E^(-(1/24) T (b0^2 (b1^2-2 b2) \[Alpha]^2-6 b0 b1 \[Alpha] \[Nu] \[Rho]+\[Nu]^2 (-2+3 \[Rho]^2))) (5760 b0 \[Alpha]+2880 b0 b1 (f-K) \[Alpha]-480 b0 b1^2 (f-K)^2 \[Alpha]+960 b0 b2 (f-K)^2 \[Alpha]-2880 (f-K) \[Nu] \[Rho]+(480 (f-K)^2 \[Nu]^2 (2-3 \[Rho]^2))/(b0 \[Alpha])))+1/5760 (E^(-(1/24) T (b0^2 (b1^2-2 b2) \[Alpha]^2-6 b0 b1 \[Alpha] \[Nu] \[Rho]+\[Nu]^2 (-2+3 \[Rho]^2))) T^2 (5 b0^5 b3^2 (f-K)^2 \[Alpha]^5+10 b0^4 (b1^2-2 b2) b3 (f-K)^2 \[Alpha]^4 \[Nu] \[Rho]+5 b0^3 b1^4 (f-K)^2 \[Alpha]^3 \[Nu]^2 \[Rho]^2-20 b0^3 b1^2 b2 (f-K)^2 \[Alpha]^3 \[Nu]^2 \[Rho]^2+20 b0^3 b2^2 (f-K)^2 \[Alpha]^3 \[Nu]^2 \[Rho]^2-60 b0^3 b1 b3 (f-K)^2 \[Alpha]^3 \[Nu]^2 \[Rho]^2-60 b0^2 b1 (b1^2-2 b2) (f-K)^2 \[Alpha]^2 \[Nu]^3 \[Rho]^3-180 b1 (f-K)^2 \[Nu]^5 \[Rho]^3+180 b1 (f-K)^2 \[Nu]^5 \[Rho]^5-30 b0^2 b3 (f-K)^2 \[Alpha]^2 \[Nu]^3 \[Rho] (-1+\[Rho]^2)+60 b0 b2 (f-K)^2 \[Alpha] \[Nu]^4 \[Rho]^2 (-1+\[Rho]^2)+(45 (f-K)^2 \[Nu]^6 \[Rho]^2 (-1+\[Rho]^2)^2)/(b0 \[Alpha])+30 b0 b1^2 (f-K)^2 \[Alpha] \[Nu]^4 \[Rho]^2 (1+5 \[Rho]^2)))+1/5760 (E^(-(1/24) T (b0^2 (b1^2-2 b2) \[Alpha]^2-6 b0 b1 \[Alpha] \[Nu] \[Rho]+\[Nu]^2 (-2+3 \[Rho]^2))) T (240 b0^3 b3 (f-K) \[Alpha]^3+2 b0^3 b1^4 (f-K)^2 \[Alpha]^3-8 b0^3 b1^2 b2 (f-K)^2 \[Alpha]^3+8 b0^3 b2^2 (f-K)^2 \[Alpha]^3+144 b0^3 b1 b3 (f-K)^2 \[Alpha]^3+72 b0^3 b4 (f-K)^2 \[Alpha]^3+240 b0^2 (b1^2-2 b2) (f-K) \[Alpha]^2 \[Nu] \[Rho]-360 b0^2 b3 (f-K)^2 \[Alpha]^2 \[Nu] \[Rho]+480 b1 (f-K)^2 \[Nu]^3 \[Rho]-1440 b0 b1 (f-K) \[Alpha] \[Nu]^2 \[Rho]^2+360 b1 (f-K)^2 \[Nu]^3 \[Rho]^3-720 (f-K) \[Nu]^3 \[Rho] (-1+\[Rho]^2)-20 b0 b1^2 (f-K)^2 \[Alpha] \[Nu]^2 (4+3 \[Rho]^2)+40 b0 b2 (f-K)^2 \[Alpha] \[Nu]^2 (4+3 \[Rho]^2)-(2 (f-K)^2 \[Nu]^4 (104-420 \[Rho]^2+315 \[Rho]^4))/(b0 \[Alpha]))),
(* cas normal *)
Q=Sqrt[1+z^2 \[Nu]^2-2 z \[Nu] \[Rho]];

x=1/\[Nu] Log[(z \[Nu]-\[Rho]+Q)/(1-\[Rho])];
ratio=x/(f-K);
If[printflag>0,Print["Q=",Q," x/(f-K)=",ratio," coef en T =", (1/4 b0 b1 z^2 \[Alpha] \[Nu] \[Rho]+Log[Abs[(Sqrt[Q b0 bz] \[Alpha]  x)/(f-K) ]])/x^2 ]];

\[Sigma]N=Abs[ ((f-K)  Exp[(T  (1/4 b0 b1 z^2 \[Alpha] \[Nu] \[Rho]+Log[Abs[(Sqrt[Q b0 bz] \[Alpha]  x)/(f-K) ]]))/x^2])/x]]]


(* ::Input::Initialization:: *)
SABRgenericNormalOption2[f_,K_,z_,b0_,b1_,b2_,b3_,b4_,bz_,T_,\[Mu]_,\[Alpha]_,\[Rho]_,\[Nu]_,printflag_]:=Module[{\[Sigma]N},
\[Sigma]N=SABRgenericNormalVol2[f,K,z,b0,b1,b2,b3,b4,bz,T,\[Mu],\[Alpha],\[Rho],\[Nu],printflag];
If[printflag>0,Print["SABRgenericNormalOption2:\[Sigma]N=",\[Sigma]N]];
NormalCall[f,\[Sigma]N,K,T]]


(* ::Input::Initialization:: *)
SABRGeneratePath[F_,\[Alpha]_,\[Beta]_,\[Rho]_,\[Nu]_,T_,TimeStepsNb_,dt_,printflag_]:=Module[{i,j,Fn=F,\[Alpha]n=\[Alpha],W1,W2,C,sqdt=Sqrt[dt]},
C=dt{{1,\[Rho]},{\[Rho],1}};
If[printflag>1,Print["C=",C // MatrixForm]];
Do[alea=Random[MultinormalDistribution[{0,0},C]];
If[printflag>2,Print["alea=",alea // MatrixForm]];
{W1,W2}=alea;
Fn*=Exp[\[Alpha]n Fn^(\[Beta]-1) W1 -(\[Alpha]n^2 Fn^(2\[Beta]-2))/2 dt];
\[Alpha]n*=Exp[\[Nu] W2-\[Nu]^2/2 dt];
,{i,1,TimeStepsNb}];
{Fn,\[Alpha]n}]


(* ::Input::Initialization:: *)
SABRGenerateAntitheticPath[F_,\[Alpha]_,\[Beta]_,\[Rho]_,\[Nu]_,T_,TimeStepsNb_,dt_,printflag_]:=Module[{i,j,Fn=F,\[Alpha]n=\[Alpha],Fna=F,\[Alpha]na=\[Alpha],W1,W2,C,sqdt=Sqrt[dt]},
C=dt{{1,\[Rho]},{\[Rho],1}};
If[printflag>1,Print["C=",C // MatrixForm]];
Do[alea=Random[MultinormalDistribution[{0,0},C]];
If[printflag>2,Print["alea=",alea // MatrixForm]];
{W1,W2}=alea;
Fn*=Exp[\[Alpha]n Fn^(\[Beta]-1) W1 -(\[Alpha]n^2 Fn^(2\[Beta]-2))/2 dt];
\[Alpha]n*=Exp[\[Nu] W2 -\[Nu]^2/2 dt];

Fna*=Exp[-\[Alpha]na Fna^(\[Beta]-1) W1 -(\[Alpha]na^2 Fna^(2\[Beta]-2))/2 dt];
\[Alpha]na*=Exp[-\[Nu] W2 -\[Nu]^2/2 dt];
,{i,1,TimeStepsNb}];
{{Fn,\[Alpha]n},{Fna,\[Alpha]na},{Fn,\[Alpha]na},{Fna,\[Alpha]n}}]


(* ::Input::Initialization:: *)
SABRGenerateSample[F1_,\[Alpha]1_,\[Beta]1_,\[Rho]1_,\[Nu]1_,T_,TimeStepsNb_,dt_,nbSample_,printflag_]:=Module[{k},Table[SABRGeneratePath[F1,\[Alpha]1,\[Beta]1,\[Rho]1,\[Nu]1,T,TimeStepsNb,dt,printflag],{k,1,nbSample}]]


(* ::Input::Initialization:: *)
SABRGenerateAntitheticSample[F1_,\[Alpha]1_,\[Beta]1_,\[Rho]1_,\[Nu]1_,T_,TimeStepsNb_,dt_,nbSample_,printflag_]:=Module[{k, samples},samples=Table[SABRGenerateAntitheticPath[F1,\[Alpha]1,\[Beta]1,\[Rho]1,\[Nu]1,T,TimeStepsNb,dt,printflag],{k,1,nbSample}];
Flatten[samples,1]]


(* ::Input::Initialization:: *)
SABRMonteCarloOption[F1_,\[Alpha]1_,\[Beta]1_,\[Rho]1_,\[Nu]1_,K_,T_,TimeStepsNb_,dt_,nbSample_,printflag_]:=Module[{samples},
samples=SABRGenerateAntitheticSample[F1,\[Alpha]1,\[Beta]1,\[Rho]1,\[Nu]1,T,TimeStepsNb,dt,nbSample,printflag];
Sum[If[samples[[i,1]]-K>=0,samples[[i,1]]-K,0],{i,1,Length[samples]}]/Length[samples]]


(* ::Input::Initialization:: *)
SABRMonteCarloSmile[F1_,\[Alpha]1_,\[Beta]1_,\[Rho]1_,\[Nu]1_,StrikeList_,T_,TimeStepsNb_,dt_,nbSample_,printflag_]:=Module[{samples,i,k},
samples=SABRGenerateAntitheticSample[F1,\[Alpha]1,\[Beta]1,\[Rho]1,\[Nu]1,T,TimeStepsNb,dt,nbSample,printflag];
Table[Sum[If[samples[[i,1]]-StrikeList[[k]]>=0,samples[[i,1]]-StrikeList[[k]],0],{i,1,Length[samples]}]/Length[samples],{k,1,Length[StrikeList]}]]


(* ::Input::Initialization:: *)
SabrApplyShock[args_,chocs_]:=Module[{S,\[Alpha],\[Beta],\[Rho],\[Nu],K,T,deltaS1,delta\[Alpha]1},
{S,\[Alpha],\[Beta],\[Rho],\[Nu],K,T}=args;
{deltaS1,delta\[Alpha]1}=chocs;
{S+deltaS1,\[Alpha]+delta\[Alpha]1,\[Beta],\[Rho],\[Nu],K,T}
]


(* ::Input::Initialization:: *)
SABRgeneric8[intrinsec_,z_,\[Kappa]b1_,\[Kappa]b2_,b1_,SqB0B\[Alpha]z_,T_,\[Mu]_,\[Alpha]_,\[Rho]_,\[Nu]_,printflag_]:=
Module[{x,I0,I1,I2,\[Kappa],f1overf0,xp},
x=Log[(-\[Rho]+\[Nu] z+Sqrt[1-2 \[Nu] \[Rho] z+\[Nu]^2 z^2])/(1-\[Rho])]/\[Nu];(*  x    est la distance geodesique , on approxime la prob de transition par \[ExponentialE]^(-x^2/(2T))(1+..)  *)
If[printflag>0,Print["SABRgeneric8: z=",SetPrecision[z,12]," SqB0B\[Alpha]z=",SetPrecision[SqB0B\[Alpha]z,12]," \[Kappa]b1=",SetPrecision[\[Kappa]b1,12]," \[Kappa]b2=",SetPrecision[\[Kappa]b2,12]," b1=",SetPrecision[b1,12]]];
I0=Sqrt[1+z  \[Nu] (z \[Nu]-2 \[Rho])];I1=(z \[Nu]-\[Rho])/I0;I2=(1-\[Rho]^2)/I0^3;

\[Kappa]=(12  \[Mu]+ (-3 \[Kappa]b1^2 +2 \[Kappa]b2) \[Alpha]^2-4 z^2 \[Mu]^2+((3I0^2-1) I0 I2-I1^2) \[Nu]^2+(6 \[Kappa]b1 \[Alpha] -16 z \[Mu] )\[Nu] \[Rho])/8 ;
f1overf0=E^(((2 \[Mu]+b1 \[Alpha]  \[Nu] \[Rho]) z^2)/4 );

If[printflag>0,Print[" SABRgeneric8: f1overf0=",SetPrecision[f1overf0,12]," I0=",SetPrecision[I0,12]," \[Kappa]=",SetPrecision[\[Kappa],12]," GIntegralAnalytical[\!\(\*SqrtBox[\(-\[Kappa]\)]\),\!\(\*FractionBox[\(Abs[x]\), SqrtBox[\(2\)]]\),\!\(\*SqrtBox[\(T\)]\)]=",SetPrecision[GIntegralAnalytical[Sqrt[-\[Kappa]],Abs[x]/Sqrt[2],Sqrt[T]],12],
" GIntegralAnalytical2[-\[Kappa],\!\(\*FractionBox[\(Abs[x]\), SqrtBox[\(2\)]]\),\!\(\*SqrtBox[\(T\)]\)]=",SetPrecision[GIntegralAnalytical2[-\[Kappa],Abs[x]/Sqrt[2],Sqrt[T]],12]," intrinsec=",intrinsec]];
If[printflag>0,Print["SABRgeneric8: (-3 \!\(\*SuperscriptBox[\(\[Kappa]b1\), \(2\)]\) +2 \[Kappa]b2) \!\(\*SuperscriptBox[\(\[Alpha]\), \(2\)]\)=",SetPrecision[(-3 \[Kappa]b1^2 +2 \[Kappa]b2) \[Alpha]^2,12]," (2 I0 I2-\!\(\*SuperscriptBox[\(I1\), \(2\)]\)) \!\(\*SuperscriptBox[\(\[Nu]\), \(2\)]\)-\!\(\*FractionBox[\(3\\\ z\\\ \*SuperscriptBox[\(\[Nu]\), \(3\)]\\\ \((z\\\ \[Nu] - 2\\\ \[Rho])\)\\\ \((\(-1\) + \*SuperscriptBox[\(\[Rho]\), \(2\)])\)\), \(\(\\\ \)\((1 + \*SuperscriptBox[\(z\), \(2\)]\\\ \*SuperscriptBox[\(\[Nu]\), \(2\)] - 2\\\ z\\\ \[Nu]\\\ \[Rho])\)\)]\)=",SetPrecision[(2 I0 I2-I1^2) \[Nu]^2-(3 z \[Nu]^3 (z \[Nu]-2 \[Rho]) (-1+\[Rho]^2))/ (1+z^2 \[Nu]^2-2 z \[Nu] \[Rho]),12]," (6 b1 \[Alpha] -16 z \[Mu] )\[Nu] \[Rho]=",SetPrecision[(6 b1 \[Alpha] -16 z \[Mu] )\[Nu] \[Rho],12]]];
intrinsec+\[Alpha]/2 Sqrt[2/\[Pi]]SqB0B\[Alpha]z  f1overf0 Sqrt[I0] GIntegralAnalytical2[-\[Kappa],Abs[x]/Sqrt[2],Sqrt[T]]]


(* ::Input::Initialization:: *)
SABRUsuelPlus8[f_,K_,T_,\[Alpha]_,\[Beta]_,\[Rho]_,\[Nu]_,printflag_]:=Module[{z,b1,b2,\[Kappa]b1,\[Kappa]b2,B0B\[Alpha]z,favg,zavg,favgb1,zavgb1,intrinsec,I0,I1,I2,call,result},
z=(  (f)^(1-\[Beta]) -(K)^(1-\[Beta]))/(\[Alpha]  (1-\[Beta]));
favg=(f+K)/2;
\[Kappa]b1=\[Beta] (favg)^(\[Beta]-1);
\[Kappa]b2=\[Beta](\[Beta]-1)(favg)^(\[Beta]-2) (favg)^\[Beta]+\[Kappa]b1^2;
favgb1=(f+K)/2;
b1=\[Beta] (favgb1)^(\[Beta]-1);

B0B\[Alpha]z=(K)^\[Beta] (f)^\[Beta];
intrinsec=Max[f-K,0];
call=SABRgeneric8[intrinsec,z,\[Kappa]b1,\[Kappa]b2,b1,Sqrt[B0B\[Alpha]z],T,0,\[Alpha],\[Rho],\[Nu],printflag];
result={ImpVolBS[f,K,T,1,call],call};
result
]


(* ::Input::Initialization:: *)
DigitaleSABRUsuelPlus8[f_,K_,T_,\[Alpha]_,\[Beta]_,\[Rho]_,\[Nu]_,printflag_]:=Module[{shift=Max[Abs[f],Abs[K]]/100.,v1,v2},
v1=SABRUsuelPlus8[f,K-shift,T,\[Alpha],\[Beta],\[Rho],\[Nu],printflag][[2]];
v2=SABRUsuelPlus8[f,K+shift,T,\[Alpha],\[Beta],\[Rho],\[Nu],printflag][[2]];
-(v2-v1)/(2.shift)]



(* ::Input::Initialization:: *)
DigitaleSABRUsuelPlus5[f_,K_,T_,\[Alpha]_,\[Beta]_,\[Rho]_,\[Nu]_,printflag_]:=Module[{shift=Max[Abs[f],Abs[K]]/100.,v1,v2},
v1=SABRUsuelPlus5[f,K-shift,T,0,\[Alpha],\[Beta],\[Rho],\[Nu],printflag][[2]];
v2=SABRUsuelPlus5[f,K+shift,T,0,\[Alpha],\[Beta],\[Rho],\[Nu],printflag][[2]];
-(v2-v1)/(2.shift)]



(* ::Input::Initialization:: *)
BS1[f_,k_,t_,v_]:=f NormalDis[(Log[f/k]+(v^2 t)/2)/(v Sqrt[t])]-k NormalDis[(Log[f/k]-(v^2 t)/2)/(v Sqrt[t])]


(* ::Input::Initialization:: *)
ComparePlotVolCase[f_,\[Alpha]_,\[Beta]_,\[Rho]_,\[Nu]_,{name1_,Meth1_},{name2_,Meth2_},{Kmin_,Kmax_},T_]:=Module[{},
Plot[
{SABROption[f,\[Alpha],\[Beta],\[Rho],\[Nu],Meth1,K,T][[1]],SABROption[f,\[Alpha],\[Beta],\[Rho],\[Nu],Meth2,K,T][[1]]}
,{K,Kmin,Kmax},PlotRange->All,
PlotStyle->{RGBColor[1,0,0],RGBColor[0,1,0]},PlotLegend->{name1,name2},LegendPosition->{1,0},AxesLabel->{"Strike","Vol"}]];


(* ::Input::Initialization:: *)
ComparePlotVolCase[f_,\[Alpha]_,\[Beta]_,\[Rho]_,\[Nu]_,{name1_,Meth1_},{name2_,Meth2_},{name3_,Meth3_},{Kmin_,Kmax_},T_]:=Module[{},
Plot[
{SABROption[f,\[Alpha],\[Beta],\[Rho],\[Nu],Meth1,K,T][[1]],SABROption[f,\[Alpha],\[Beta],\[Rho],\[Nu],Meth2,K,T][[1]],SABROption[f,\[Alpha],\[Beta],\[Rho],\[Nu],Meth3,K,T][[1]]}
,{K,Kmin,Kmax},PlotRange->All,
PlotStyle->{RGBColor[1,0,0],RGBColor[0,1,0],RGBColor[0,0,1]},PlotLegend->{name1,name2,name3},LegendPosition->{1,0},AxesLabel->{"Strike","Vol"}]];


(* ::Input::Initialization:: *)
ComparePlotDigitalCase[f_,\[Alpha]_,\[Beta]_,\[Rho]_,\[Nu]_,{name1_,Meth1_},{name2_,Meth2_},{Kmin_,Kmax_},T_]:=Block[{},
SABRdistr1=DerKSABROption[Meth1];
SABRdistr2=DerKSABROption[Meth2];
Plot[
{-SABRdistr1[f,\[Alpha],\[Beta],\[Rho],\[Nu],K,T],-SABRdistr2[f,\[Alpha],\[Beta],\[Rho],\[Nu],K,T]},{K,Kmin,Kmax},PlotRange->All,
PlotStyle->{RGBColor[1,0,0],RGBColor[0,1,0]},PlotLegend->{name1,name2},LegendPosition->{1,0},AxesLabel->{"Strike","Digitale"}]];


(* ::Input::Initialization:: *)
ComparePlotDigitalCase[f_,\[Alpha]_,\[Beta]_,\[Rho]_,\[Nu]_,{name1_,Meth1_},{name2_,Meth2_},{name3_,Meth3_},{Kmin_,Kmax_},T_]:=Block[{},
SABRdistr1=DerKSABROption[Meth1];
SABRdistr2=DerKSABROption[Meth2];
SABRdistr3=DerKSABROption[Meth3];
Plot[
{-SABRdistr1[f,\[Alpha],\[Beta],\[Rho],\[Nu],K,T],-SABRdistr2[f,\[Alpha],\[Beta],\[Rho],\[Nu],K,T],-SABRdistr3[f,\[Alpha],\[Beta],\[Rho],\[Nu],K,T]},{K,Kmin,Kmax},PlotRange->All,
PlotStyle->{RGBColor[1,0,0],RGBColor[0,1,0],RGBColor[0,0,1]},PlotLegend->{name1,name2,name3},LegendPosition->{1,0},AxesLabel->{"Strike","Digitale"}]];


(* ::Input::Initialization:: *)
ComparePlotDigitalCase[f_,\[Alpha]_,\[Beta]_,\[Rho]_,\[Nu]_,{name1_,Meth1_},{name2_,Meth2_},{name3_,Meth3_},{name4_,Meth4_},{Kmin_,Kmax_},T_]:=Block[{},
SABRdistr1=DerKSABROption[Meth1];
SABRdistr2=DerKSABROption[Meth2];
SABRdistr3=DerKSABROption[Meth3];
SABRdistr4=DerKSABROption[Meth4];
Plot[
{-SABRdistr1[f,\[Alpha],\[Beta],\[Rho],\[Nu],K,T],-SABRdistr2[f,\[Alpha],\[Beta],\[Rho],\[Nu],K,T],-SABRdistr3[f,\[Alpha],\[Beta],\[Rho],\[Nu],K,T],-SABRdistr4[f,\[Alpha],\[Beta],\[Rho],\[Nu],K,T]},{K,Kmin,Kmax},PlotRange->All,
PlotStyle->{RGBColor[1,0,0],RGBColor[0,1,0],RGBColor[0,0,1],RGBColor[0.5,0.5,0]},PlotLegend->{name1,name2,name3,name4},LegendPosition->{1,0},AxesLabel->{"Strike","Digitale"}]];


(* ::Input::Initialization:: *)
ComparePlotDigitalCase[f_,\[Alpha]_,\[Beta]_,\[Rho]_,\[Nu]_,{name1_,Meth1_},{name2_,Meth2_},{name3_,Meth3_},{name4_,Meth4_},{name5_,Meth5_},{Kmin_,Kmax_},T_]:=Block[{},
SABRdistr1=DerKSABROption[Meth1];
SABRdistr2=DerKSABROption[Meth2];
SABRdistr3=DerKSABROption[Meth3];
SABRdistr4=DerKSABROption[Meth4];
SABRdistr5=DerKSABROption[Meth5];
Plot[
{-SABRdistr1[f,\[Alpha],\[Beta],\[Rho],\[Nu],K,T],-SABRdistr2[f,\[Alpha],\[Beta],\[Rho],\[Nu],K,T],-SABRdistr3[f,\[Alpha],\[Beta],\[Rho],\[Nu],K,T],-SABRdistr4[f,\[Alpha],\[Beta],\[Rho],\[Nu],K,T],-SABRdistr5[f,\[Alpha],\[Beta],\[Rho],\[Nu],K,T]},{K,Kmin,Kmax},PlotRange->All,
PlotStyle->{RGBColor[1,0,0],RGBColor[0,1,0],RGBColor[0,0,1],RGBColor[0.5,0.5,0],RGBColor[0.,0.5,0.5]},PlotLegend->{name1,name2,name3,name4,name5},LegendPosition->{1,0},AxesLabel->{"Strike","Digitale"}]];


(* ::Input::Initialization:: *)
ComparePlotDensityCase[f_,\[Alpha]_,\[Beta]_,\[Rho]_,\[Nu]_,{name1_,Meth1_},{name2_,Meth2_},{Kmin_,Kmax_},T_]:=Block[{},
SABRfunc1=SABRVol[f,\[Alpha],\[Beta],\[Rho],\[Nu],Meth1,K,T];
SABRfunc2=SABRVol[f,\[Alpha],\[Beta],\[Rho],\[Nu],Meth2,K,T];
SABRdens1=D[BS1[f,K,T,SABRfunc1],{K,2}];
SABRdens2=D[BS1[f,K,T,SABRfunc2],{K,2}];
Plot[
{SABRdens1,SABRdens2},{K,Kmin,Kmax},PlotRange->All,
PlotStyle->{RGBColor[1,0,0],RGBColor[0,1,0]},PlotLegend->{name1,name2},LegendPosition->{1,0},AxesLabel->{"Strike","Density"}]];



